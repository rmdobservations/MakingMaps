{"version":3,"sources":["node_modules/ol/util.js","node_modules/ol/AssertionError.js","node_modules/ol/CollectionEventType.js","node_modules/ol/ObjectEventType.js","node_modules/ol/obj.js","node_modules/ol/events.js","node_modules/ol/functions.js","node_modules/ol/Disposable.js","node_modules/ol/events/Event.js","node_modules/ol/events/EventTarget.js","node_modules/ol/events/EventType.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/extent/Corner.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/math.js","node_modules/ol/geom/GeometryType.js","node_modules/ol/sphere.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/proj.js","node_modules/ol/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/dom.js","node_modules/ol/webgl.js","node_modules/ol/has.js","node_modules/ol/ImageState.js","node_modules/ol/css.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/render/canvas.js","node_modules/ol/style/Image.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Style.js","node_modules/ol/Feature.js","node_modules/ol/GeolocationProperty.js","node_modules/ol/array.js","node_modules/ol/geom/GeometryLayout.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/Geolocation.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/geom/flat/geodesic.js","node_modules/ol/render/EventType.js","node_modules/ol/style/TextPlacement.js","node_modules/ol/style/Text.js","node_modules/ol/Graticule.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/ImageCanvas.js","node_modules/ol/TileState.js","node_modules/ol/easing.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/MapBrowserPointerEvent.js","node_modules/ol/pointer/EventType.js","node_modules/ol/pointer/EventSource.js","node_modules/ol/pointer/MouseSource.js","node_modules/ol/pointer/MsSource.js","node_modules/ol/pointer/NativeSource.js","node_modules/ol/pointer/PointerEvent.js","node_modules/ol/pointer/TouchSource.js","node_modules/ol/pointer/PointerEventHandler.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/View.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/source/State.js","node_modules/ol/layer/Group.js","node_modules/ol/size.js","node_modules/ol/PluggableMap.js","node_modules/ol/control/Control.js","node_modules/ol/layer/Layer.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/util.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/DragAndDrop.js","node_modules/ol/interaction/DragRotateAndZoom.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/LayerType.js","node_modules/ol/layer/VectorRenderType.js","node_modules/ol/layer/Vector.js","node_modules/ol/format/FormatType.js","node_modules/ol/featureloader.js","node_modules/ol/loadingstrategy.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/quickselect/quickselect.js","node_modules/rbush/index.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Vector.js","node_modules/ol/interaction/Draw.js","node_modules/ol/interaction/Extent.js","node_modules/ol/interaction/Modify.js","node_modules/ol/interaction/Select.js","node_modules/ol/interaction/Snap.js","node_modules/ol/interaction/Translate.js","node_modules/ol/interaction.js","node_modules/ol/reproj/common.js","node_modules/ol/render/Event.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/canvas/Map.js","node_modules/ol/renderer/Layer.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/renderer/canvas/IntermediateCanvas.js","node_modules/ol/renderer/canvas/ImageLayer.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/render/ReplayGroup.js","node_modules/ol/render/ReplayType.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/replay.js","node_modules/ol/render/canvas/Replay.js","node_modules/ol/render/canvas/ImageReplay.js","node_modules/ol/render/canvas/LineStringReplay.js","node_modules/ol/render/canvas/PolygonReplay.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextReplay.js","node_modules/ol/render/canvas/ReplayGroup.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/VectorTileRenderType.js","node_modules/ol/renderer/canvas/VectorTileLayer.js","node_modules/ol/Map.js","node_modules/ol/OverlayPositioning.js","node_modules/ol/Overlay.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/VectorImageTile.js","node_modules/ol/VectorTile.js","node_modules/ol/control/FullScreen.js","node_modules/ol/control/OverviewMap.js","node_modules/ol/control/ScaleLine.js","node_modules/ol/control/ZoomSlider.js","node_modules/ol/control/ZoomToExtent.js","node_modules/ol/control.js","node_modules/ol/webgl/Shader.js","node_modules/ol/webgl/Fragment.js","node_modules/ol/webgl/Vertex.js","node_modules/ol/render/webgl/circlereplay/defaultshader.js","node_modules/ol/render/webgl/circlereplay/defaultshader/Locations.js","node_modules/ol/vec/mat4.js","node_modules/ol/render/webgl/Replay.js","node_modules/ol/render/webgl.js","node_modules/ol/webgl/Buffer.js","node_modules/ol/render/webgl/CircleReplay.js","node_modules/ol/render/webgl/texturereplay/defaultshader.js","node_modules/ol/render/webgl/texturereplay/defaultshader/Locations.js","node_modules/ol/webgl/ContextEventType.js","node_modules/ol/webgl/Context.js","node_modules/ol/render/webgl/TextureReplay.js","node_modules/ol/render/webgl/ImageReplay.js","node_modules/ol/geom/flat/topology.js","node_modules/ol/render/webgl/linestringreplay/defaultshader.js","node_modules/ol/render/webgl/linestringreplay/defaultshader/Locations.js","node_modules/ol/render/webgl/LineStringReplay.js","node_modules/ol/render/webgl/polygonreplay/defaultshader.js","node_modules/ol/render/webgl/polygonreplay/defaultshader/Locations.js","node_modules/ol/structs/LinkedList.js","node_modules/ol/render/webgl/PolygonReplay.js","node_modules/ol/style/Atlas.js","node_modules/ol/style/AtlasManager.js","node_modules/ol/render/webgl/TextReplay.js","node_modules/ol/render/webgl/ReplayGroup.js","node_modules/ol/render/webgl/Immediate.js","node_modules/ol/renderer/webgl/defaultmapshader.js","node_modules/ol/renderer/webgl/defaultmapshader/Locations.js","node_modules/ol/renderer/webgl/Layer.js","node_modules/ol/renderer/webgl/ImageLayer.js","node_modules/ol/renderer/webgl/Map.js","node_modules/ol/renderer/webgl/tilelayershader.js","node_modules/ol/renderer/webgl/tilelayershader/Locations.js","node_modules/ol/renderer/webgl/TileLayer.js","node_modules/ol/renderer/webgl/VectorLayer.js","node_modules/ol/WebGLMap.js","node_modules/ol/index.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/Tile.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/source/TileEventType.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/OSM.js","index.js"],"names":["inherits","childCtor","parentCtor","prototype","Object","create","constructor","getUid","uidCounter_","obj","ol_uid","VERSION","AssertionError","code","path","split","message","name","Error","clear","getValues","isEmpty","assign","target","var_sources","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","object","property","values","push","bindListener","findListener","getListeners","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","listenerObj","boundListener","evt","listener","bindTo","callOnce","call","listeners","opt_this","opt_setDeleteIndex","deleteIndex","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","keys","opt_once","addEventListener","indexOf","splice","TRUE","FALSE","UNDEFINED","Disposable","disposed_","dispose","disposeInternal","Event","stopPropagation","preventDefault","propagationStopped","EventTarget","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","hasListener","opt_type","index","Observable","unByKey","revision_","Array","isArray","changed","EventType","CHANGE","getRevision","on","len","once","un","BaseObject","getChangeEventType","ObjectEvent","oldValue","opt_values","values_","setProperties","changeEventTypeCache","get","value","getKeys","getProperties","notify","eventType","ObjectEventType","PROPERTYCHANGE","set","opt_silent","unset","Collection","Property","CollectionEvent","opt_element","element","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","arr","forEach","f","array","getArray","item","LENGTH","insertAt","elem","CollectionEventType","ADD","removeAt","n","remove","prev","REMOVE","setAt","j","opt_except","assert","assertion","errorCode","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","equals","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getEnlargedArea","getForViewAndSize","getHeight","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","getWidth","intersects","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","coordinates","extent","_boundingExtentXYs","xs","ys","opt_extent","Math","min","apply","max","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","flatCoordinates","offset","end","stride","rings","callback","val","area","corner","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","transform2D","transform","opt_dest","dest","rotate","angle","anchor","anchorX","anchorY","k","scale","sx","sy","translate","clamp","roundUpToPowerOfTwo","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","cosh","exp","pow","ceil","log","LN2","t","mat","maxRow","maxEl","abs","r","absValue","tmp","coef","l","m","angleInRadians","PI","angleInDegrees","a","b","getDistance","DEFAULT_RADIUS","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","geometry","projection","getType","GeometryType","GEOMETRY_COLLECTION","coords","jj","POINT","MULTI_POINT","LINE_STRING","LINEAR_RING","getCoordinates","MULTI_LINE_STRING","POLYGON","MULTI_POLYGON","geometries","getGeometries","getAreaInternal","distance","bearing","lon1","dByR","lat","asin","lon","Units","METERS_PER_UNIT","DEGREES","FEET","METERS","USFEET","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","fromEPSG4326","toEPSG4326","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","point","PROJECTIONS","input","opt_output","opt_dimension","dimension","halfSize","tan","atan","EPSG4326Projection","opt_axisOrientation","add","cache","transforms","destination","sourceCode","destinationCode","addCommon","cloneTransform","identityTransform","addProjection","addProjections","addEquivalentProjections","addEquivalentTransforms","clearAllProjections","createProjection","createTransformFromCoordinateTransform","addCoordinateTransforms","fromLonLat","toLonLat","equivalent","getTransformFromProjections","getTransform","transformExtent","transformWithProjections","projections","projectionLike","opt_units","pointResolution","getter","vertices","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","coordTransform","forward","inverse","sourceProj","destProj","opt_projection","lonLat","equalUnits","transformFunc","sourceProjection","destinationProjection","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","reset","multiply","setFromArray","compose","invert","determinant","tmp_","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","d","e","dx1","dy1","dx2","dy2","det","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","tmpTransform","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","intersectsExtent","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","asString","asArray","normalize","toString","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromNamed","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","fromString","MAX_CACHE_SIZE","cacheSize","s","fromStringInternal_","g","exec","hasAlpha","parseInt","substr","map","Number","asColorLike","isColorLike","CanvasPattern","CanvasGradient","createCanvasContext2D","opt_width","opt_height","canvas","width","height","getContext","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","EXTENSIONS","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","context","DEBUG","MAX_TEXTURE_SIZE","HAS","window","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","msPointerEnabled","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","CLEAR","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","setSize","prune","measureTextWidth","rotateAtOffset","drawImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","checked","referenceFonts","text","interval","referenceWidth","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","textContent","margin","padding","position","left","offsetX","offsetY","resetTransform","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","snapToPixel_","snapToPixel","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","listenImageChange","thisArg","load","unlistenImageChange","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","ImageState","LOADED","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","round","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","bind","id","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","recalculate","checksum","CircleStyle","setRadius","Fill","color_","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","toFunction","createDefaultStyle","createEditingStyle","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","text_","zIndex_","zIndex","styleFunction","styles","getGeometry","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","white","blue","CIRCLE","concat","Feature","createStyleFunction","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","properties","setGeometryName","getGeometryName","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","setId","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","linearFindNearest","direction","reverseSubArray","begin","data","extension","find","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","SimpleGeometry","getStrideForLayout","transformGeom2D","layout","GeometryLayout","XY","getLayoutForStride","XYZ","XYZM","XYM","simpleGeometry","getFlatCoordinates","getStride","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setFlatCoordinatesInternal","setCoordinates","opt_layout","setLayout","nesting","linearRing","twiceArea","linearRings","ends","linearRingss","endss","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","simplifyLineString","douglasPeucker","douglasPeuckerArray","douglasPeuckerMultiArray","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","highQuality","opt_simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","simplifiedEnds","simplifiedEndss","LinearRing","maxDelta_","maxDeltaRevision_","setFlatCoordinates","simplifiedLinearRing","Point","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","getInteriorPointOfArray","getInteriorPointsOfMultiArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","interiorPoints","point1","point2","ret","intersectsLineString","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","coordinatesExtent","linearRingIsClockwise","linearRingIsOriented","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","edge","opt_right","right","isClockwise","circular","fromExtent","fromCircle","makeRegular","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","opt_n","opt_sphereRadius","polygon","circle","opt_sides","opt_angle","sides","arrayLength","getEnds","startAngle","appendLinearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","simplifiedPolygon","Geolocation","position_","transform_","watchId_","GeolocationProperty","PROJECTION","handleProjectionChanged_","TRACKING","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","POSITION","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","ACCURACY","accuracy","ALTITUDE","altitude","ALTITUDE_ACCURACY","altitudeAccuracy","HEADING","heading","longitude","latitude","projectedPosition","SPEED","speed","ACCURACY_GEOMETRY","error","ERROR","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","TRACKING_OPTIONS","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","n2","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","format","squaredDistanceToSegment","toStringHDMS","toStringXY","delta","segment","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","floor","sec","charAt","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","fraction","pointY","cumulativeLengths","o","extrapolate","lo","hi","m0","m1","interpolate","lineStringLength","linearRingLength","perimeter","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","simplifiedLineString","greatCircleArc","meridian","parallel","line","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","geoM","fracA","fracB","fracM","lon2","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","frac","D","acos","cosD","sinD","theta","epsg4326Projection","Text","DEFAULT_FILL_COLOR","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","Graticule","DEFAULT_STROKE_STYLE","INTERVALS","map_","postcomposeListenerKey_","projection_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","setMap","addMeridian_","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","clampedBottom","clampedTop","geom","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","centerLonLat","centerLon","centerLat","cnt","validExtent","p1","p2","dist","getMap","getMeridians","getParallels","handlePostCompose_","vectorContext","frameState","viewState","labelData","updateProjectionInfo_","setFillStrokeStyle","drawGeometry","setTextStyle","worldExtentP","render","RenderEventType","POSTCOMPOSE","ImageBase","state","pixelRatio_","getPixelRatio","getResolution","getState","ImageWrapper","src","crossOrigin","imageLoadFunction","IDLE","src_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","LOADING","LOAD","ImageCanvas","opt_loader","loader_","error_","getError","handleLoad_","err","easeIn","easeOut","inAndOut","linear","upAndDown","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","getKey","getInterimTile","tile","TileState","refreshInterimChain","getTileCoord","setState","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","ctx","fillRect","ABORT","naturalWidth","naturalHeight","EMPTY","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","MapEvent","opt_frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","CLICK","DBLCLICK","MapBrowserPointerEvent","pointerEvent","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","DEDUP_DIST","prepareEvent","inEvent","cloneEvent","pd","pointerId","isPrimary","pointerType","isEventSimulatedFromTouch_","lts","clientX","clientY","cancel","down","move","p","button","up","cleanupMouse","enterOver","leaveOut","MsSource","msPointerDown","msPointerMove","msPointerUp","msPointerOut","msPointerOver","msPointerCancel","msGotPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","cleanup","makeEvent","NativeSource","pointerDown","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","gotPointerCapture","lostPointerCapture","fireNativeEvent","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","dedupTimeout_","CLICK_COUNT_TIMEOUT","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","changedTouches","pointer","findTouch_","touchList","searchId","touch","vacuumTouches_","out","cancelOut_","dedupSynthMouse_","overDown_","over","enter","moveOverOut_","outEvent","outTarget","upOut_","leave","cleanUpPointer_","lt","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","CLONE_PROPS","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","PointerEventType","POINTERDOWN","POINTERMOVE","POINTERUP","POINTERENTER","POINTERLEAVE","POINTEROVER","POINTEROUT","POINTERCANCEL","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserEventType","SINGLECLICK","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","POINTERDRAG","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","DROP","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","none","createSnapToResolutions","createSnapToPower","resolutions","z","power","maxResolution","opt_maxLevel","oldLevel","newLevel","disable","createSnapToN","createSnapToZero","opt_tolerance","View","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","centerNone","resolutionConstraint","minResolution","minZoom","maxZoom","zoomFactor","defaultMaxResolution","defaultMinResolution","constraint","enableRotation","constrainRotation","rotationNone","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ViewProperty","CENTER","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","rotationConstraint","constraints_","RESOLUTION","zoom","constrainResolution","ROTATION","options_","getUpdatedOptions_","newOptions","getZoom","animate","var_args","animationCount","isDef","setCenter","setZoom","series","easing","complete","setHint","ViewHint","ANIMATING","getAnimating","getInteracting","INTERACTING","cancelAnimations","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerX","setResolution","centerOn","centerY","hint","BaseLayer","LayerProperty","OPACITY","VISIBLE","visible","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","state_","getLayerState","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setVisible","zindex","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","LAYERS","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","layer","collectionEvent","states","pos","ownLayerState","layerState","SourceState","READY","num","hasArea","ratio","toSize","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","MOUSEDOWN","TOUCHSTART","MSPOINTERDOWN","MOUSEWHEEL","WHEEL","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","CONTEXTMENU","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","MapProperty","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","getElementById","layerGroup","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","RESIZE","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","targetElement","KEYDOWN","KEYPRESS","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","layerStatesArray","layerStates","pixelResolution","renderFrame","MapEventType","MOVESTART","MOVEEND","POSTRENDER","setLayerGroup","setView","skipFeature","featureUid","computedStyle","parseFloat","unskipFeature","Control","target_","listenerKeys","Layer","visibleAtResolution","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","SOURCE","handleSourcePropertyChange_","setSource","getSource","handleSourceChange_","PRECOMPOSE","managed","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","mapEvent","updateElement_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","msTransform","webkitTransform","resetNorth_","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Interaction","pan","rotateWithoutConstraints","zoomByDelta","zoomWithoutConstraints","setActive","opt_duration","currentRotation","InteractionProperty","ACTIVE","active","DoubleClickZoom","delta_","stopEvent","altKeyOnly","altShiftKeysOnly","activeElement","always","click","mouseActionButton","never","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","PointerInteraction","centroid","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","trackedPointers_","targetPointers","pointerEvents","isPointerDraggingEvent","updateTrackedPointers_","handledUp","handled","shouldStopEvent","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","centerpx","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","BOXDRAG","onBoxEnd","BOXEND","BOXSTART","DragZoom","out_","mapExtent","boxPixelExtent","factor","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","DOWN","UP","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MouseWheelZoom","MAX_DELTA","Mode","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","TRACKPAD","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDrop","DragAndDropEventType","DragAndDropEvent","file","opt_features","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","result","formatConstructor","tryReadFeatures_","addFeatures","ADD_FEATURES","registerListeners_","dropArea","DRAGENTER","DRAGOVER","unregisterListeners_","readFeatures","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","MultiLineString","appendLineString","multiLineString","opt_interpolate","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedMultiLineString","setLineStrings","MultiPoint","appendPoint","multiPoint","getPoint","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","multiPolygon","newEndss","getEndss","getFlatInteriorPoints","getInteriorPoints","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","polygons","lastEnds","setPolygons","VectorLayer","RenderType","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VectorRenderType","VECTOR","LayerType","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","RENDER_ORDER","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","loadFeaturesXhr","xhr","url","success","failure","XMLHttpRequest","open","FormatType","responseType","onload","status","JSON","TEXT","responseText","XML","responseXML","DOMParser","parseFromString","response","featureProjection","readProjection","getLastExtent","onerror","send","dataProjection","all","bbox","getZForResolution","tileRange","getTileRangeForExtentAndZ","extents","getTileCoordExtent","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","RBush","opt_maxEntries","rbush_","items_","insert","items","uid","getAll","getInExtent","search","forEach_","forEachInExtent","rbush","VectorSource","VectorSourceEvent","opt_feature","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","ADDFEATURE","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Draw","createRegularPolygon","createBox","DrawEventType","DrawEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor","mode","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","pass","handlePointerEvent","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","DRAWSTART","sketchLineGeom","ring","removeLastPoint","sketchFeature","DRAWEND","sketchFeatures","overlaySource","ExtentInteraction","ExtentEventType","ExtentInteractionEvent","EXTENTCHANGED","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","vertex","snapToVertex_","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","pixelCoordinate","createOrUpdatePointerFeature_","fixedPoint","fixedP1","fixedP2","getSegments","sortByDistance","segments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","createOrUpdateExtentFeature_","extentFeature","vertexFeature","Modify","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","compareIndexes","handlePointerAtPixel_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","depth","closestVertex","closestOnSegmentData","willModifyFeatures_","insertVertex_","dragSegment","segmentData","setGeometryCoordinates_","createOrUpdateVertexFeature_","centerSegmentData","featureSegments","circumferenceSegmentData","MODIFYEND","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","MODIFYSTART","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","lines","kk","getGeometriesArray","box","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","deleted","component","newIndex","Select","SelectEventType","SelectEvent","selected","deselected","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","SELECT","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","snapTo","snapped","featuresToUpdate","updateFeature_","deltaA","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","opt_unlisten","unregister","lowerLeft","upperRight","snappedToVertex","isCircle","Translate","TranslateEventType","TranslateEvent","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","TRANSLATESTART","TRANSLATEEND","newCoordinate","TRANSLATING","oldMap","default","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","VectorContext","drawCustom","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterGroup","textStyle","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","shared","MapRenderer","sortByZIndex","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","expireIconCache","state1","state2","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","skippedFeatureUids","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","CanvasMapRenderer","layerRendererConstructors","insertBefore","childNodes","dispatchComposeEvent_","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","LayerRenderer","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","usedTiles","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTile","getTileCoordCenter","useTile","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","RENDER","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","IMAGE","mapRenderer","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","TILE","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","sourceRevision","getTileGridForProjection","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","zs","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","getGutter","tileCoordKey","drawTileImage","gutter","getOpaque","alphaChanged","ReplayGroup","getReplay","replayType","drawTextOnPath","measure","startM","reverse","numChars","previousAngle","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","fillInstruction","FILL","strokeInstruction","STROKE","beginPathInstruction","BEGIN_PATH","closePathInstruction","CLOSE_PATH","ORDER","ReplayType","DEFAULT","TEXT_ALIGN","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayBegin","replayEndss","myEnds","CanvasInstruction","CUSTOM","endGeometry","BEGIN_GEOMETRY","origin","repeatSize","instruction","renderDeclutter_","groupCount","collides","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","DRAW_IMAGE","DRAW_CHARS","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","END_GEOMETRY","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","chunkStart","m12","m23","x12","y12","x23","y23","chunkEnd","chunkM","CanvasTextReplay","measureTextWidths","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","widths","numLines","currentWidth","geometryType","LINE","flatOffset","flatEnd","oo","range","drawChars_","drawTextImage_","align","lineHeight","renderWidth","leftRight","CanvasReplayGroup","getCircleArray","replayDeclutter","BATCH_CONSTRUCTORS","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache","fillCircleArrayRowToMiddle","arraySize","declutterReplays","zz","replayData","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","contextSize","hitExtent","mask","declutteredFeatures","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","defaultOrder","getSquaredTolerance","getTolerance","renderFeature","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","feature1","feature2","replayGroup","circleReplay","textReplay","loading","renderFeatureInternal","renderGeometry","lineStringReplay","polygonReplay","imageReplay","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","drawOffsetX","replayContext","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","dirty","CanvasVectorTileLayerRenderer","IMAGE_REPLAYS","VECTOR_REPLAYS","renderedLayerRevision_","tmpTransform_","VectorTileRenderType","VECTOR_TILE","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","Map","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","mapPostrenderListenerKey","ELEMENT","handleElementChanged","MAP","handleMapChanged","OFFSET","handleOffsetChanged","handlePositionChanged","POSITIONING","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","CENTER_RIGHT","left_","right_","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","top_","bottom","bottom_","CENTER_LEFT","getOptions","opt_tileCoord","getKeyZXY","fromKey","hash","quadKey","digits","String","fromCharCode","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","defaultLoadFunction","VectorImageTile","urlTileCoord","tileUrlFunction","sourceTiles","tileClass","replayState_","sourceTiles_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","forEachTileCoord","sourceExtent","sourceTileKey","tileUrl","consumers","finishLoading_","onLoad","onError","leftToLoad","errorSourceTiles","loaded","empty","VectorTile","replayGroups_","DEFAULT_EXTENT","setFeatures","FullScreen","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","isFullScreen","isFullScreenSupported","keys_","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","requestFullScreenWithKeys","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","exitFullScreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","handleFullScreen_","handleFullScreenChange_","firstElementChild","OverviewMap","MAX_RATIO","MIN_RATIO","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","validateExtent_","updateBox_","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","ScaleLine","UNITS_PROP","LEADING_DIGITS","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","METRIC","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","IMPERIAL","NAUTICAL","US","html","ZoomSlider","Direction","currentResolution_","direction_","VERTICAL","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","setThumbPosition_","containerSize","thumb","thumbWidth","thumbHeight","HORIZONTAL","relativePosition","getRelativePosition_","getResolutionForPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","WebGLShader","isAnimated","WebGLFragment","WebGLVertex","fragment","DEBUG_WEBGL","Locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","DEPTH_BUFFER_BIT","getGL","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","isEnabled","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FONT","DEFAULT_FILLSTYLE","DEFAULT_LINECAP","DEFAULT_LINEDASH","DEFAULT_LINEDASHOFFSET","DEFAULT_LINEJOIN","DEFAULT_MITERLIMIT","DEFAULT_STROKESTYLE","DEFAULT_TEXTALIGN","DEFAULT_TEXTBASELINE","DEFAULT_LINEWIDTH","EPSILON","triangleIsCounterClockwise","WebGLBuffer","BufferUsage","opt_arr","opt_usage","arr_","usage_","getUsage","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","numVertices","numIndices","lastState","fillColor","strokeColor","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","WebGLContext","createEmptyTexture","createTexture","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","WEBGL_EXTENSIONS","getExtension","ContextEventType","LOST","handleWebGLContextLost","RESTORED","handleWebGLContextRestored","createTextureInternal","opt_wrapS","opt_wrapT","texture","bindTexture","texParameteri","texImage2D","buf","bufferKey","bufferCacheEntry","createBuffer","arrayBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","lineStringIsClosed","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","BEGIN_LINE_CAP","BEGIN_LINE","END_LINE","END_LINE_CAP","BEVEL_FIRST","BEVEL_SECOND","MITER_BOTTOM","MITER_TOP","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","depthMask","depthFunc","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","head","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","WebGLPolygonReplay","outerRing","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","minDist","bestPoint","p5","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","AtlasManager","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","currentSize_","initialSize","maxSize_","maxSize","WEBGL_MAX_TEXTURE_SIZE","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","atlas","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","WebGLTextReplay","measureCanvas_","currAtlas_","glyphAtlas","textSize","getTextSize_","currX","currY","charArr","charInfo","self","textHeight","str","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","params","calculateHash_","WebGLReplayGroup","HIT_DETECTION_SIZE","functions","replayHitDetection_","Uint8Array","readPixels","WebGLImmediateRenderer","center_","imageStyle_","fillStyle_","textStyle_","u_texCoordMatrix","u_texture","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","WebGLMapRenderer","WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileSize","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","viewport","u_tileOffset","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","tmpSize_","getTileSize","tilePixelResolution","framebufferExtent","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","drawable","fullyLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","WebGLVectorLayerRenderer","layerState_","scissor","WebGLMap","TileLayer","setPreload","setUseInterimTilesOnError","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","Triangulation","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","sourceListenKey","createFromTemplate","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","urls","match","startCharCode","stopCharCode","stop","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","sizes","calculateTileRanges_","tmpTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","getForProjection","createForExtent","createXYZ","createForProjection","extentFromProjection","worldsAway","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","thisProj","getTileCoordForTileUrlFunction","TileSourceEvent","UrlTile","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","TILELOADSTART","TILELOADERROR","TILELOADEND","setTileLoadFunction","opt_key","TileImage","defaultTileLoadFunction","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","imageTile","usedTileCache","getGutterInternal","projKey","createTile_","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","OSM","ATTRIBUTION"],"mappings":"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","file":"MakingMaps.33ad8e59.map","sourceRoot":"..","sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '5.0.3';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION, inherits} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @param {number} code Error code.\n */\nconst AssertionError = function(code) {\n\n  const path = VERSION.split('-')[0];\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\ninherits(AssertionError, Error);\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nconst Disposable = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  Event.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/EventTarget\n */\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n */\nconst EventTarget = function() {\n\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n   */\n  this.listeners_ = {};\n\n};\n\ninherits(EventTarget, Disposable);\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.addEventListener = function(type, listener) {\n  let listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|module:ol/events/Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\nEventTarget.prototype.dispatchEvent = function(event) {\n  const evt = typeof event === 'string' ? new Event(event) : event;\n  const type = evt.type;\n  evt.target = this;\n  const listeners = this.listeners_[type];\n  let propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      let pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, UNDEFINED);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nEventTarget.prototype.disposeInternal = function() {\n  unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n */\nEventTarget.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\nEventTarget.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.removeEventListener = function(type, listener) {\n  const listeners = this.listeners_[type];\n  if (listeners) {\n    const index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = UNDEFINED;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default EventTarget;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Observable\n */\nimport {inherits} from './util.js';\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @api\n */\nconst Observable = function() {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\ninherits(Observable, EventTarget);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\nObservable.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n *     module:ol/events/Event|string} event Event object.\n * @function\n * @api\n */\nObservable.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\nObservable.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listen(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listenOnce(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listenOnce(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un = function(type, listener) {\n  if (Array.isArray(type)) {\n    for (let i = 0, ii = type.length; i < ii; ++i) {\n      unlisten(this, type[i], listener);\n    }\n    return;\n  } else {\n    unlisten(this, /** @type {string} */ (type), listener);\n  }\n};\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid, inherits} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst ObjectEvent = function(type, key, oldValue) {\n  Event.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\ninherits(ObjectEvent, Event);\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {module:ol/Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nconst BaseObject = function(opt_values) {\n  Observable.call(this);\n\n  // Call {@link module:ol~getUid} to ensure that the order of objects' ids is\n  // the same as the order in which they were created.  This also helps to\n  // ensure that object properties are always added in the same order, which\n  // helps many JavaScript engines generate faster code.\n  getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\ninherits(BaseObject, Observable);\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\nBaseObject.prototype.get = function(key) {\n  let value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\nBaseObject.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\nBaseObject.prototype.getProperties = function() {\n  return assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\nBaseObject.prototype.notify = function(key, oldValue) {\n  let eventType;\n  eventType = getChangeEventType(key);\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  eventType = ObjectEventType.PROPERTYCHANGE;\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    const oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.setProperties = function(values, opt_silent) {\n  for (const key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\nBaseObject.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    const oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport {inherits} from './util.js';\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\nexport const CollectionEvent = function(type, opt_element) {\n\n  Event.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n\ninherits(CollectionEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @fires module:ol/Collection~CollectionEvent\n * @param {Array.<T>=} opt_array Array.\n * @param {module:ol/Collection~Options=} opt_options Collection options.\n * @template T\n * @api\n */\nconst Collection = function(opt_array, opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\ninherits(Collection, BaseObject);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\nCollection.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {module:ol/Collection.<T>} This collection.\n * @api\n */\nCollection.prototype.extend = function(arr) {\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @api\n */\nCollection.prototype.forEach = function(f) {\n  const array = this.array_;\n  for (let i = 0, ii = array.length; i < ii; ++i) {\n    f(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\nCollection.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\nCollection.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\nCollection.prototype.getLength = function() {\n  return /** @type {number} */ (this.get(Property.LENGTH));\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n    new CollectionEvent(CollectionEventType.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\nCollection.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\nCollection.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  const n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\nCollection.prototype.remove = function(elem) {\n  const arr = this.array_;\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\nCollection.prototype.removeAt = function(index) {\n  const prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.setAt = function(index, elem) {\n  const n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev));\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  } else {\n    for (let j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\nCollection.prototype.updateLength_ = function() {\n  this.set(Property.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\nCollection.prototype.assertUnique_ = function(elem, opt_except) {\n  for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new AssertionError(58);\n    }\n  }\n};\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh  = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link module:ol/proj~setProj4}.\n *\n * @constructor\n * @param {module:ol/proj/Projection~Options} options Projection options.\n * @struct\n * @api\n */\nconst Projection = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\nProjection.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {inherits} from '../util.js';\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n */\nfunction EPSG3857Projection(code) {\n  Projection.call(this, {\n    code: code,\n    units: Units.METERS,\n    extent: EXTENT,\n    global: true,\n    worldExtent: WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / cosh(point[1] / RADIUS);\n    }\n  });\n}\ninherits(EPSG3857Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport {inherits} from '../util.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n */\nfunction EPSG4326Projection(code, opt_axisOrientation) {\n  Projection.call(this, {\n    code: code,\n    units: Units.DEGREES,\n    extent: EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: METERS_PER_UNIT,\n    worldExtent: EXTENT\n  });\n}\ninherits(EPSG4326Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the {@link http://proj4js.org/}\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * {@link https://epsg.io/}, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @api\n */\nconst Geometry = function() {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, module:ol/geom/Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n};\n\ninherits(Geometry, BaseObject);\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!module:ol/geom/Geometry} Clone.\n */\nGeometry.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\nGeometry.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n * @return {module:ol/coordinate~Coordinate} Closest point.\n * @api\n */\nGeometry.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\nGeometry.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @protected\n * @return {module:ol/extent~Extent} extent Extent.\n */\nGeometry.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} extent Extent.\n * @api\n */\nGeometry.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n * @api\n */\nGeometry.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\nGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {module:ol/geom/Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\nGeometry.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/Geometry} Simplified geometry.\n */\nGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {module:ol/geom/GeometryType} Geometry type.\n */\nGeometry.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nGeometry.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\nGeometry.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\nGeometry.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\nGeometry.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = source.getExtent();\n      const projectedExtent = source.getWorldExtent();\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform,\n        projectedExtent[0], projectedExtent[3],\n        scale, -scale, 0,\n        0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride,\n        tmpTransform, outCoordinates);\n      return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default Geometry;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @const ol/has.WEBGL\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/structs/LRUCache\n */\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nconst LRUCache = function(opt_highWaterMark) {\n\n  EventTarget.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.newest_ = null;\n\n};\n\ninherits(LRUCache, EventTarget);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nLRUCache.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nLRUCache.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(EventType.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\nLRUCache.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\nLRUCache.prototype.forEach = function(f, opt_this) {\n  let entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\nLRUCache.prototype.get = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined,\n    15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\nLRUCache.prototype.remove = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\nLRUCache.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\nLRUCache.prototype.getKeys = function() {\n  const keys = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\nLRUCache.prototype.getValues = function() {\n  const values = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\nLRUCache.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\nLRUCache.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\nLRUCache.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\nLRUCache.prototype.pop = function() {\n  const entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.set = function(key, value) {\n  assert(!(key in this.entries_),\n    16); // Tried to set a value for a key that is used already\n  const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Set a maximum number of entries for the cache.\n * @param {number} size Cache size.\n * @api\n */\nLRUCache.prototype.setSize = function(size) {\n  this.highWaterMark = size;\n};\n\n\n/**\n * Prune the cache.\n */\nLRUCache.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default LRUCache;\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {module:ol/style/Image~Options} options Options.\n * @api\n */\nconst ImageStyle = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\nimport {inherits} from '../util.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {module:ol/style/RegularShape~Options} options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst RegularShape = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/style/AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  ImageStyle.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\ninherits(RegularShape, ImageStyle);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/RegularShape} The cloned style.\n * @api\n */\nRegularShape.prototype.clone = function() {\n  const style = new RegularShape({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\nRegularShape.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nRegularShape.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageState = function() {\n  return ImageState.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\nRegularShape.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\nRegularShape.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\nRegularShape.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nRegularShape.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n */\nRegularShape.prototype.render_ = function(atlasManager) {\n  let imageSize;\n  let lineCap = '';\n  let lineJoin = '';\n  let miterLimit = 0;\n  let lineDash = null;\n  let lineDashOffset = 0;\n  let strokeStyle;\n  let strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = defaultStrokeStyle;\n    }\n    strokeStyle = asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = defaultMiterLimit;\n    }\n  }\n\n  let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {module:ol/style/RegularShape~RenderOptions} */\n  const renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    const hasCustomHitDetectionImage = !this.fill_;\n    let renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    const id = this.getChecksum();\n    const info = atlasManager.add(\n      id, size, size, this.draw_.bind(this, renderOptions),\n      renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.draw_ = function(renderOptions, context, x, y) {\n  let i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    let color = this.fill_.getColor();\n    if (color === null) {\n      color = defaultFillStyle;\n    }\n    context.fillStyle = asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n */\nRegularShape.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    let i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\nRegularShape.prototype.getChecksum = function() {\n  const strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  const fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  const recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    const checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\nimport {inherits} from '../util.js';\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Circle~Options=} opt_options Options.\n * @extends {module:ol/style/RegularShape}\n * @api\n */\nconst CircleStyle = function(opt_options) {\n\n  const options = opt_options || {};\n\n  RegularShape.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\ninherits(CircleStyle, RegularShape);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/Circle} The cloned style.\n * @override\n * @api\n */\nCircleStyle.prototype.clone = function() {\n  const style = new CircleStyle({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\nCircleStyle.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Fill~Options=} opt_options Options.\n * @api\n */\nconst Fill = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function() {\n  const color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {module:ol/style/Stroke~Options=} opt_options Options.\n * @api\n */\nconst Stroke = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function() {\n  const color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {module:ol/style/Style~Options=} opt_options Style options.\n * @api\n */\nconst Style = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function() {\n  let geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\nStyle.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {inherits} from './util.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n * You may pass a Geometry object directly, or an object literal containing\n * properties. If you pass an object literal, you may include a Geometry\n * associated with a `geometry` key.\n * @api\n */\nconst Feature = function(opt_geometryOrProperties) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof Geometry ||\n        !opt_geometryOrProperties) {\n      const geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      const properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\ninherits(Feature, BaseObject);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {module:ol/Feature} The clone.\n * @api\n */\nFeature.prototype.clone = function() {\n  const clone = new Feature(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  const geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  const style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\nFeature.prototype.getGeometry = function() {\n  return (\n    /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n  );\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link module:ol/Feature~Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\nFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\nFeature.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link module:ol/Feature~Feature#setStyle} method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n * @api\n */\nFeature.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\nFeature.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  const geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = listen(geometry,\n      EventType.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\nFeature.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the\n * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\nFeature.prototype.setGeometryName = function(name) {\n  unlisten(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {inherits} from '../util.js';\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/geom/Geometry}\n * @api\n */\nconst SimpleGeometry = function() {\n\n  Geometry.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.layout = GeometryLayout.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\ninherits(SimpleGeometry, Geometry);\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n    0, this.flatCoordinates.length, this.stride, extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\nSimpleGeometry.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} First coordinate.\n * @api\n */\nSimpleGeometry.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nSimpleGeometry.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} Last point.\n * @api\n */\nSimpleGeometry.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n * @return {module:ol/geom/GeometryLayout} Layout.\n * @api\n */\nSimpleGeometry.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n * @protected\n */\nSimpleGeometry.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\nSimpleGeometry.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\nSimpleGeometry.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n */\nSimpleGeometry.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\nSimpleGeometry.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  let stride;\n  if (layout) {\n    stride = getStrideForLayout(layout);\n  } else {\n    for (let i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = GeometryLayout.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = getLayoutForStride(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.rotate = function(angle, anchor) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    rotate(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    scale(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.translate = function(deltaX, deltaY) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    translate(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {inherits} from '../util.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LinearRing = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LinearRing, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LinearRing} Clone.\n * @override\n * @api\n */\nLinearRing.prototype.clone = function() {\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nLinearRing.prototype.getArea = function() {\n  return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLinearRing.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLinearRing = new LinearRing(null);\n  simplifiedLinearRing.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLinearRing.prototype.getType = function() {\n  return GeometryType.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLinearRing.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLinearRing.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Point = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(Point, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Point} Clone.\n * @override\n * @api\n */\nPoint.prototype.clone = function() {\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    const stride = this.stride;\n    for (let i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {module:ol/coordinate~Coordinate} Coordinates.\n * @override\n * @api\n */\nPoint.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.getType = function() {\n  return GeometryType.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.intersectsExtent = function(extent) {\n  return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Polygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(Polygon, SimpleGeometry);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @api\n */\nPolygon.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Polygon} Clone.\n * @override\n * @api\n */\nPolygon.prototype.clone = function() {\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.containsXY = function(x, y) {\n  return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nPolygon.prototype.getArea = function() {\n  return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRings(\n      flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateCoordinatesArray(\n    flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nPolygon.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\nPolygon.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoint_ = getInteriorPointOfArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n      flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\nPolygon.prototype.getInteriorPoint = function() {\n  return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\nPolygon.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {module:ol/geom/LinearRing} Linear ring.\n * @api\n */\nPolygon.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n * @api\n */\nPolygon.prototype.getLinearRings = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const linearRings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const linearRing = new LinearRing(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingIsOriented(\n      flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRings(\n            this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = quantizeArray(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedPolygon = new Polygon(null);\n  simplifiedPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.getType = function() {\n  return GeometryType.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingArray(\n    this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const polygon = new Polygon(null, layout);\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  const ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  makeRegular(polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const layout = polygon.getLayout();\n  const stride = polygon.getStride();\n  const ends = polygon.getEnds();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n}\n","/**\n * @module ol/Geolocation\n */\nimport {inherits} from './util.js';\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {GeolocationPositionOptions} [trackingOptions] Tracking options.\n * See {@link http://www.w3.org/TR/geolocation-API/#position_options_interface}.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Geolocation~Options=} opt_options Options.\n * @api\n */\nconst Geolocation = function(opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * The unprojected (EPSG:4326) device position.\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.position_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/proj~TransformFunction}\n   */\n  this.transform_ = identityTransform;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.watchId_ = undefined;\n\n  listen(\n    this, getChangeEventType(GeolocationProperty.PROJECTION),\n    this.handleProjectionChanged_, this);\n  listen(\n    this, getChangeEventType(GeolocationProperty.TRACKING),\n    this.handleTrackingChanged_, this);\n\n  if (options.projection !== undefined) {\n    this.setProjection(options.projection);\n  }\n  if (options.trackingOptions !== undefined) {\n    this.setTrackingOptions(options.trackingOptions);\n  }\n\n  this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n};\n\ninherits(Geolocation, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nGeolocation.prototype.disposeInternal = function() {\n  this.setTracking(false);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleProjectionChanged_ = function() {\n  const projection = this.getProjection();\n  if (projection) {\n    this.transform_ = getTransformFromProjections(\n      getProjection('EPSG:4326'), projection);\n    if (this.position_) {\n      this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n    }\n  }\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleTrackingChanged_ = function() {\n  if (GEOLOCATION) {\n    const tracking = this.getTracking();\n    if (tracking && this.watchId_ === undefined) {\n      this.watchId_ = navigator.geolocation.watchPosition(\n        this.positionChange_.bind(this),\n        this.positionError_.bind(this),\n        this.getTrackingOptions());\n    } else if (!tracking && this.watchId_ !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId_);\n      this.watchId_ = undefined;\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {GeolocationPosition} position position event.\n */\nGeolocation.prototype.positionChange_ = function(position) {\n  const coords = position.coords;\n  this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n  this.set(GeolocationProperty.ALTITUDE,\n    coords.altitude === null ? undefined : coords.altitude);\n  this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n    coords.altitudeAccuracy === null ?\n      undefined : coords.altitudeAccuracy);\n  this.set(GeolocationProperty.HEADING, coords.heading === null ?\n    undefined : toRadians(coords.heading));\n  if (!this.position_) {\n    this.position_ = [coords.longitude, coords.latitude];\n  } else {\n    this.position_[0] = coords.longitude;\n    this.position_[1] = coords.latitude;\n  }\n  const projectedPosition = this.transform_(this.position_);\n  this.set(GeolocationProperty.POSITION, projectedPosition);\n  this.set(GeolocationProperty.SPEED,\n    coords.speed === null ? undefined : coords.speed);\n  const geometry = circularPolygon(this.position_, coords.accuracy);\n  geometry.applyTransform(this.transform_);\n  this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n  this.changed();\n};\n\n/**\n * Triggered when the Geolocation returns an error.\n * @event error\n * @api\n */\n\n/**\n * @private\n * @param {GeolocationPositionError} error error object.\n */\nGeolocation.prototype.positionError_ = function(error) {\n  error.type = EventType.ERROR;\n  this.setTracking(false);\n  this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n};\n\n\n/**\n * Get the accuracy of the position in meters.\n * @return {number|undefined} The accuracy of the position measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n};\n\n\n/**\n * Get a geometry of the position accuracy.\n * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracyGeometry = function() {\n  return (\n    /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n  );\n};\n\n\n/**\n * Get the altitude associated with the position.\n * @return {number|undefined} The altitude of the position in meters above mean\n *     sea level.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitude = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n};\n\n\n/**\n * Get the altitude accuracy of the position.\n * @return {number|undefined} The accuracy of the altitude measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitudeAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n};\n\n\n/**\n * Get the heading as radians clockwise from North.\n * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n * is set to `true` in the tracking options.\n * @return {number|undefined} The heading of the device in radians from north.\n * @observable\n * @api\n */\nGeolocation.prototype.getHeading = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n};\n\n\n/**\n * Get the position of the device.\n * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n *     in the current projection.\n * @observable\n * @api\n */\nGeolocation.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n  );\n};\n\n\n/**\n * Get the projection associated with the position.\n * @return {module:ol/proj/Projection|undefined} The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n  );\n};\n\n\n/**\n * Get the speed in meters per second.\n * @return {number|undefined} The instantaneous speed of the device in meters\n *     per second.\n * @observable\n * @api\n */\nGeolocation.prototype.getSpeed = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n};\n\n\n/**\n * Determine if the device location is being tracked.\n * @return {boolean} The device location is being tracked.\n * @observable\n * @api\n */\nGeolocation.prototype.getTracking = function() {\n  return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n};\n\n\n/**\n * Get the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @return {GeolocationPositionOptions|undefined} PositionOptions as defined by\n *     the [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.getTrackingOptions = function() {\n  return /** @type {GeolocationPositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n};\n\n\n/**\n * Set the projection to use for transforming the coordinates.\n * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.setProjection = function(projection) {\n  this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * Enable or disable tracking.\n * @param {boolean} tracking Enable tracking.\n * @observable\n * @api\n */\nGeolocation.prototype.setTracking = function(tracking) {\n  this.set(GeolocationProperty.TRACKING, tracking);\n};\n\n\n/**\n * Set the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @param {GeolocationPositionOptions} options PositionOptions as defined by the\n *     [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.setTrackingOptions = function(options) {\n  this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n};\nexport default Geolocation;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LineString, SimpleGeometry);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @api\n */\nLineString.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LineString} Clone.\n * @override\n * @api\n */\nLineString.prototype.clone = function() {\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\nLineString.prototype.forEachSegment = function(callback) {\n  return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return lineStringCoordinateAtM(this.flatCoordinates, 0,\n    this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLineString.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n * @api\n */\nLineString.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return interpolatePoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\nLineString.prototype.getLength = function() {\n  return lineStringLength(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nLineString.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLineString = new LineString(null);\n  simplifiedLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.getType = function() {\n  return GeometryType.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineString(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LineString;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array.<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object.<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font}. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Text~Options=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {module:ol/style/TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {module:ol/style/TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {module:ol/style/TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array.<number>}\n * @private\n */\nconst INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @constructor\n * @param {module:ol/Graticule~Options=} opt_options Options.\n * @api\n */\nconst Graticule = function(opt_options) {\n  const options = opt_options || {};\n\n  /**\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {module:ol/style/Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function(lon, minLat, maxLat, squaredTolerance, extent, index) {\n  const lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      const textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Meridian\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function(lineString, extent, index) {\n  const flatCoordinates = lineString.getFlatCoordinates();\n  const clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  const clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  const lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  const coordinate = [flatCoordinates[0], lat];\n  const point = this.meridiansLabels_[index] !== undefined ?\n    this.meridiansLabels_[index].geom : new Point(null);\n  point.setCoordinates(coordinate);\n  return point;\n};\n\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function(lat, minLon, maxLon, squaredTolerance, extent, index) {\n  const lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      const textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n\n/**\n * @param {module:ol/geom/LineString} lineString Parallels.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function(lineString, extent, index) {\n  const flatCoordinates = lineString.getFlatCoordinates();\n  const clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  const clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  const lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  const coordinate = [lon, flatCoordinates[1]];\n  const point = this.parallelsLabels_[index] !== undefined ?\n    this.parallelsLabels_[index].geom : new Point(null);\n  point.setCoordinates(coordinate);\n  return point;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function(extent, center, resolution, squaredTolerance) {\n\n  const interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  const centerLonLat = this.toLonLatTransform_(center);\n  let centerLon = centerLonLat[0];\n  let centerLat = centerLonLat[1];\n  const maxLines = this.maxLines_;\n  let cnt, idx, lat, lon;\n\n  let validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  const maxLat = validExtent[3];\n  const maxLon = validExtent[2];\n  const minLat = validExtent[1];\n  const minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this.minLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this.maxLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this.minLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this.maxLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function(resolution) {\n  const centerLon = this.projectionCenterLonLat_[0];\n  const centerLat = this.projectionCenterLonLat_[1];\n  let interval = -1;\n  const target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array.<number>} **/\n  const p1 = [];\n  /** @type {Array.<number>} **/\n  const p2 = [];\n  for (let i = 0, ii = INTERVALS.length; i < ii; ++i) {\n    const delta = INTERVALS[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this.fromLonLatTransform_(p1, p1);\n    this.fromLonLatTransform_(p2, p2);\n    const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = INTERVALS[i];\n  }\n  return interval;\n};\n\n\n/**\n * Get the map associated with this graticule.\n * @return {module:ol/PluggableMap} The map.\n * @api\n */\nGraticule.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function(lon, minLat, maxLat, squaredTolerance, index) {\n  const flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  const lineString = this.meridians_[index] !== undefined ? this.meridians_[index] : new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Get the list of meridians.  Meridians are lines of equal longitude.\n * @return {Array.<module:ol/geom/LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function() {\n  return this.meridians_;\n};\n\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function(lat, minLon, maxLon, squaredTolerance, index) {\n  const flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  const lineString = this.parallels_[index] !== undefined ? this.parallels_[index] : new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Get the list of parallels.  Parallels are lines of equal latitude.\n * @return {Array.<module:ol/geom/LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function() {\n  return this.parallels_;\n};\n\n\n/**\n * @param {module:ol/render/Event} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function(e) {\n  const vectorContext = e.vectorContext;\n  const frameState = e.frameState;\n  const extent = frameState.extent;\n  const viewState = frameState.viewState;\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  const updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  let i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  let labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this.meridiansLabels_[i];\n      this.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this.parallelsLabels_[i];\n      this.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function(projection) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const worldExtent = projection.getWorldExtent();\n  const worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n\n/**\n * Set the map for this graticule.  The graticule will be rendered on the\n * provided map.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nGraticule.prototype.setMap = function(map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\nexport default Graticule;\n","/**\n * @module ol/ImageBase\n */\nimport {inherits} from './util.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/ImageState} state State.\n */\nconst ImageBase = function(extent, resolution, pixelRatio, state) {\n\n  EventTarget.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = state;\n\n};\n\ninherits(ImageBase, EventTarget);\n\n\n/**\n * @protected\n */\nImageBase.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {module:ol/extent~Extent} Extent.\n */\nImageBase.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\nImageBase.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\nImageBase.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\nImageBase.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {module:ol/ImageState} State.\n */\nImageBase.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageBase.prototype.load = function() {};\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n */\nconst ImageWrapper = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(ImageWrapper, ImageBase);\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageWrapper.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageWrapper.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageWrapper.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\nImageWrapper.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\nImageWrapper.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageWrapper.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nconst ImageCanvas = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?module:ol/ImageCanvas~Loader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n  ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\ninherits(ImageCanvas, ImageBase);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\nImageCanvas.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\nImageCanvas.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = ImageState.ERROR;\n  } else {\n    this.state = ImageState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nImageCanvas.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas element.\n */\nImageCanvas.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default ImageCanvas;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst Tile = function(tileCoord, state, opt_options) {\n  EventTarget.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {module:ol/TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {module:ol/Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\ninherits(Tile, EventTarget);\n\n\n/**\n * @protected\n */\nTile.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\nTile.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!module:ol/Tile} Best tile for rendering.\n */\nTile.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  let tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\nTile.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  let tile = this.interimTile;\n  let prev = this;\n\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == TileState.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == TileState.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n * @api\n */\nTile.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {module:ol/TileState} State.\n */\nTile.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {module:ol/TileState} state State.\n */\nTile.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\nTile.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\nTile.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  let start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  const delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\nTile.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\nTile.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport {inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst ImageTile = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\ninherits(ImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\nImageTile.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageTile.prototype.handleImageError_ = function() {\n  this.state = TileState.ERROR;\n  this.unlistenImage_();\n  this.image_ = getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageTile.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = TileState.LOADED;\n  } else {\n    this.state = TileState.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageTile.prototype.load = function() {\n  if (this.state == TileState.ERROR) {\n    this.state = TileState.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageTile.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nconst Kinetic = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  const delay = Date.now() - this.delay_;\n  const lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  let firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  const dx = this.points_[lastIndex] - this.points_[firstIndex];\n  const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default Kinetic;\n","/**\n * @module ol/MapEvent\n */\nimport {inherits} from './util.js';\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapEvent = function(type, map, opt_frameState) {\n\n  Event.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {module:ol/PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?module:ol/PluggableMap~FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\ninherits(MapEvent, Event);\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport {inherits} from './util.js';\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {module:ol/MapEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserEvent = function(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n  MapEvent.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {module:ol~Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\ninherits(MapBrowserEvent, MapEvent);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\nMapBrowserEvent.prototype.preventDefault = function() {\n  MapEvent.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\nMapBrowserEvent.prototype.stopPropagation = function() {\n  MapEvent.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport {inherits} from './util.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\n/**\n * @constructor\n * @extends {module:ol/MapBrowserEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserPointerEvent = function(type, map, pointerEvent, opt_dragging,\n  opt_frameState) {\n\n  MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n    opt_frameState);\n\n  /**\n   * @const\n   * @type {module:ol/pointer/PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\ninherits(MapBrowserPointerEvent, MapBrowserEvent);\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/pointer/EventSource\n */\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function(dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default EventSource;\n","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MouseSource = function(dispatcher) {\n  const mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<module:ol~Pixel>}\n   */\n  this.lastTouches = [];\n};\n\ninherits(MouseSource, EventSource);\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\nMouseSource.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  const lts = this.lastTouches;\n  const x = inEvent.clientX;\n  const y = inEvent.clientY;\n  for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    const dx = Math.abs(x - t[0]);\n    const dy = Math.abs(y - t[1]);\n    if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.cancel = function(inEvent) {\n  const e = prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\nMouseSource.prototype.cleanupMouse = function() {\n  delete this.pointerMap[POINTER_ID.toString()];\n};\nexport default MouseSource;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MsSource = function(dispatcher) {\n  const mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, MSPointerEvent|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n};\n\ninherits(MsSource, EventSource);\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {MSPointerEvent} inEvent The in event.\n * @return {Object} The copied event.\n */\nMsSource.prototype.prepareEvent_ = function(inEvent) {\n  let e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\nMsSource.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerMove = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerUp = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOut = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOver = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerCancel = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msLostPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msGotPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst NativeSource = function(dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nconst PointerEvent = function(type, originalEvent, opt_eventDict) {\n  Event.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  const eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\ninherits(PointerEvent, Event);\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nPointerEvent.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nPointerEvent.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default PointerEvent;\n","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @constructor\n * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n * @extends {module:ol/pointer/EventSource}\n */\nconst TouchSource = function(dispatcher, mouseSource) {\n  const mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {module:ol/pointer/MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n\n  /**\n   * Mouse event timeout: This should be long enough to\n   * ignore compat mouse events made by touch.\n   * @private\n   * @type {number}\n   */\n  this.dedupTimeout_ = 2500;\n};\n\ninherits(TouchSource, EventSource);\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\nTouchSource.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\nTouchSource.prototype.setPrimaryTouch_ = function(inTouch) {\n  const count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n    this.resetClickCountHandler_.bind(this),\n    CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\nTouchSource.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\nTouchSource.prototype.processTouches_ = function(inEvent, inFunction) {\n  const touches = Array.prototype.slice.call(inEvent.changedTouches);\n  const count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  for (let i = 0; i < count; ++i) {\n    const pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\nTouchSource.prototype.findTouch_ = function(touchList, searchId) {\n  const l = touchList.length;\n  for (let i = 0; i < l; i++) {\n    const touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.vacuumTouches_ = function(inEvent) {\n  const touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  const keys = Object.keys(this.pointerMap);\n  const count = keys.length;\n  if (count >= touchList.length) {\n    const d = [];\n    for (let i = 0; i < count; ++i) {\n      const key = keys[i];\n      const value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (let i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  const event = inPointer;\n  const pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  const outEvent = pointer.out;\n  const outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\nTouchSource.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.dedupSynthMouse_ = function(inEvent) {\n  const lts = this.mouseSource.lastTouches;\n  const t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    const lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      remove(lts, lt);\n    }, this.dedupTimeout_);\n  }\n};\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nconst PointerEventHandler = function(element) {\n  EventTarget.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\ninherits(PointerEventHandler, EventTarget);\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\nPointerEventHandler.prototype.registerSources = function() {\n  if (POINTER) {\n    this.registerSource('native', new NativeSource(this));\n  } else if (MSPOINTER) {\n    this.registerSource('ms', new MsSource(this));\n  } else {\n    const mouseSource = new MouseSource(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (TOUCH) {\n      this.registerSource('touch', new TouchSource(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {module:ol/pointer/EventSource} source The source event.\n */\nPointerEventHandler.prototype.registerSource = function(name, source) {\n  const s = source;\n  const newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      const handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }.bind(this));\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\nPointerEventHandler.prototype.register_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\nPointerEventHandler.prototype.unregister_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\nPointerEventHandler.prototype.eventHandler_ = function(inEvent) {\n  const type = inEvent.type;\n  const handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    listen(this.element_, eventName, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    unlisten(this.element_, e, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\nPointerEventHandler.prototype.cloneEvent = function(event, inEvent) {\n  const eventCopy = {};\n  for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n    const p = CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.down = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.move = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.up = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.cancel = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\nPointerEventHandler.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n */\nPointerEventHandler.prototype.makeEvent = function(inType, data, event) {\n  return new PointerEvent(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.fireEvent = function(inType, data, event) {\n  const e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\nPointerEventHandler.prototype.fireNativeEvent = function(event) {\n  const e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} The wrapped event.\n */\nPointerEventHandler.prototype.wrapMouseEvent = function(eventType, event) {\n  const pointerEvent = this.makeEvent(\n    eventType, MouseSource.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\nPointerEventHandler.prototype.disposeInternal = function() {\n  this.unregister_();\n  EventTarget.prototype.disposeInternal.call(this);\n};\n\n\nexport default PointerEventHandler;\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {inherits} from './util.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\n/**\n * @param {module:ol/PluggableMap} map The map with the viewport to\n * listen to events on.\n * @param {number=} moveTolerance The minimal distance the pointer must travel\n * to trigger a move.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n */\nconst MapBrowserEventHandler = function(map, moveTolerance) {\n\n  EventTarget.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {module:ol/pointer/PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  const element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new PointerEventHandler(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERDOWN,\n    this.handlePointerDown_, this);\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERMOVE,\n    this.relayEvent_, this);\n\n};\n\ninherits(MapBrowserEventHandler, EventTarget);\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.emulateClick_ = function(pointerEvent) {\n  let newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.updateActivePointers_ = function(pointerEvent) {\n  const event = pointerEvent;\n\n  if (event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\nMapBrowserEventHandler.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new PointerEventHandler(document);\n\n    this.dragListenerKeys_.push(\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERMOVE,\n        this.handlePointerMove_, this),\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERUP,\n        this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_,\n        MapBrowserEventType.POINTERCANCEL,\n        this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n      this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.relayEvent_ = function(pointerEvent) {\n  const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new MapBrowserPointerEvent(\n    pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} Is moving.\n * @private\n */\nMapBrowserEventHandler.prototype.isMoving_ = function(pointerEvent) {\n  return this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\nMapBrowserEventHandler.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  EventTarget.prototype.disposeInternal.call(this);\n};\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nconst PriorityQueue = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function() {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  const elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  const priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function() {\n  let i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function(index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const count = elements.length;\n  const element = elements[index];\n  const priority = priorities[index];\n  const startIndex = index;\n\n  while (index < (count >> 1)) {\n    const lIndex = this.getLeftChildIndex_(index);\n    const rIndex = this.getRightChildIndex_(index);\n\n    const smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function(startIndex, index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[index];\n  const priority = priorities[index];\n\n  while (index > startIndex) {\n    const parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function() {\n  const priorityFunction = this.priorityFunction_;\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  let index = 0;\n  const n = elements.length;\n  let element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/structs/PriorityQueue.<Array>}\n * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nconst TileQueue = function(tilePriorityFunction, tileChangeCallback) {\n\n  PriorityQueue.call(\n    this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function(element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n    });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\ninherits(TileQueue, PriorityQueue);\n\n\n/**\n * @inheritDoc\n */\nTileQueue.prototype.enqueue = function(element) {\n  const added = PriorityQueue.prototype.enqueue.call(this, element);\n  if (added) {\n    const tile = element[0];\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\nTileQueue.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nTileQueue.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const state = tile.getState();\n  if (state === TileState.LOADED || state === TileState.ERROR ||\n      state === TileState.EMPTY || state === TileState.ABORT) {\n    unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n    const tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\nTileQueue.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  let newLoads = 0;\n  let abortedTiles = false;\n  let state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === TileState.ABORT) {\n      abortedTiles = true;\n    } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default TileQueue;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid, inherits} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [sourceRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/View~ViewOptions=} opt_options View options.\n * @api\n */\nconst View = function(opt_options) {\n  BaseObject.call(this);\n\n  const options = assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/View~Animation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\ninherits(View, BaseObject);\n\n\n/**\n * Set up the view with the given options.\n * @param {module:ol/View~ViewOptions} options View options.\n */\nView.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = {};\n  properties[ViewProperty.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  const resolutionConstraintInfo = createResolutionConstraint(options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  const centerConstraint = createCenterConstraint(options);\n  const resolutionConstraint = resolutionConstraintInfo.constraint;\n  const rotationConstraint = createRotationConstraint(options);\n\n  /**\n   * @private\n   * @type {module:ol/View~Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[ViewProperty.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n      this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[ViewProperty.RESOLUTION] = clamp(\n        Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n        this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {module:ol/View~ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be used to apply new min/max zoom or\n * resolution limits.\n * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n */\nView.prototype.getUpdatedOptions_ = function(newOptions) {\n  const options = assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link module:ol/easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\nView.prototype.animate = function(var_args) {\n  let animationCount = arguments.length;\n  let callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    const state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      setTimeout(function() {\n        callback(true);\n      }, 0);\n    }\n    return;\n  }\n  let start = Date.now();\n  let center = this.getCenter().slice();\n  let resolution = this.getResolution();\n  let rotation = this.getRotation();\n  const series = [];\n  for (let i = 0; i < animationCount; ++i) {\n    const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n    const animation = /** @type {module:ol/View~Animation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(ViewHint.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\nView.prototype.getAnimating = function() {\n  return this.hints_[ViewHint.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\nView.prototype.getInteracting = function() {\n  return this.hints_[ViewHint.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\nView.prototype.cancelAnimations = function() {\n  this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n  for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n    const series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\nView.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  const now = Date.now();\n  let more = false;\n  for (let i = this.animations_.length - 1; i >= 0; --i) {\n    const series = this.animations_[i];\n    let seriesComplete = true;\n    for (let j = 0, jj = series.length; j < jj; ++j) {\n      const animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      const elapsed = now - animation.start;\n      let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      const progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        const x0 = animation.sourceCenter[0];\n        const y0 = animation.sourceCenter[1];\n        const x1 = animation.targetCenter[0];\n        const y1 = animation.targetCenter[1];\n        const x = x0 + progress * (x1 - x0);\n        const y = y0 + progress * (y1 - y0);\n        this.set(ViewProperty.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        const resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(ViewProperty.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        const rotation = progress === 1 ?\n          modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(ViewProperty.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(ViewHint.ANIMATING, -1);\n      const callback = series[0].callback;\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n */\nView.prototype.calculateCenterRotate = function(rotation, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    rotateCoordinate(center, rotation - this.getRotation());\n    addCoordinate(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n */\nView.prototype.calculateCenterZoom = function(resolution, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  const currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n */\nView.prototype.getSizeFromViewport_ = function() {\n  const size = [100, 100];\n  const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n  const element = document.querySelector(selector);\n  if (element) {\n    const metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n * @api\n */\nView.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\nView.prototype.constrainResolution = function(resolution, opt_delta, opt_direction) {\n  const delta = opt_delta || 0;\n  const direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\nView.prototype.constrainRotation = function(rotation, opt_delta) {\n  const delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\nView.prototype.getCenter = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n  );\n};\n\n\n/**\n * @return {module:ol/View~Constraints} Constraints.\n */\nView.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\nView.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nView.prototype.calculateExtent = function(opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n  assert(center, 1); // The view center is not defined\n  const resolution = /** @type {!number} */ (this.getResolution());\n  assert(resolution !== undefined, 2); // The view resolution is not defined\n  const rotation = /** @type {!number} */ (this.getRotation());\n  assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\nView.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\nView.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\nView.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\nView.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\nView.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\nView.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {module:ol/proj/Projection} The projection of the view.\n * @api\n */\nView.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.getResolution = function() {\n  return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the View, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\nView.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\nView.prototype.getResolutionForExtent = function(extent, opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const xResolution = getWidth(extent) / size[0];\n  const yResolution = getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\nView.prototype.getResolutionForValueFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      const resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.getRotation = function() {\n  return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\nView.prototype.getValueForResolutionFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {module:ol/View~State} View state.\n */\nView.prototype.getState = function() {\n  const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n  const projection = this.getProjection();\n  const resolution = /** @type {number} */ (this.getResolution());\n  const rotation = this.getRotation();\n  return (\n    /** @type {module:ol/View~State} */ ({\n      center: center.slice(),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    })\n  );\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\nView.prototype.getZoom = function() {\n  let zoom;\n  const resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\nView.prototype.getZoomForResolution = function(resolution) {\n  let offset = this.minZoom_ || 0;\n  let max, zoomFactor;\n  if (this.resolutions_) {\n    const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\nView.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n    this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {module:ol/View~FitOptions=} opt_options Options.\n * @api\n */\nView.prototype.fit = function(geometryOrExtent, opt_options) {\n  const options = opt_options || {};\n  let size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {module:ol/geom/SimpleGeometry} */\n  let geometry;\n  if (!(geometryOrExtent instanceof SimpleGeometry)) {\n    assert(Array.isArray(geometryOrExtent),\n      24); // Invalid extent or geometry provided as `geometry`\n    assert(!isEmpty(geometryOrExtent),\n      25); // Cannot fit empty extent provided as `geometry`\n    geometry = polygonFromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = polygonFromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  const constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  const nearest = options.nearest !== undefined ? options.nearest : false;\n  let minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n      this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  const coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let minRotX = +Infinity;\n  let minRotY = +Infinity;\n  let maxRotX = -Infinity;\n  let maxRotY = -Infinity;\n  const stride = geometry.getStride();\n  for (let i = 0, ii = coords.length; i < ii; i += stride) {\n    const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  let resolution = this.getResolutionForExtent(\n    [minRotX, minRotY, maxRotX, maxRotY],\n    [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n        constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  let centerRotX = (minRotX + maxRotX) / 2;\n  let centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  const center = [centerX, centerY];\n  const callback = options.callback ? options.callback : UNDEFINED;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/size~Size} size Box pixel size.\n * @param {module:ol~Pixel} position Position on the view to center on.\n * @api\n */\nView.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  const resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\nView.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n * @api\n */\nView.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    const center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\nView.prototype.setCenter = function(center) {\n  this.set(ViewProperty.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {module:ol/ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\nView.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.setResolution = function(resolution) {\n  this.set(ViewProperty.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.setRotation = function(rotation) {\n  this.set(ViewProperty.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\nView.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/layer/Base\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/layer/Base~Options} options Layer options.\n * @api\n */\nconst BaseLayer = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = assign({}, options);\n  properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[LayerProperty.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {module:ol/layer/Layer~State}\n   * @private\n   */\n  this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n    layer: /** @type {module:ol/layer/Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {module:ol/LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\ninherits(BaseLayer, BaseObject);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {module:ol/LayerType} The layer type.\n */\nBaseLayer.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {module:ol/layer/Layer~State} Layer state.\n */\nBaseLayer.prototype.getLayerState = function() {\n  this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<module:ol/layer/Layer>} Array of layers.\n */\nBaseLayer.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n */\nBaseLayer.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {module:ol/extent~Extent|undefined} The layer extent.\n * @observable\n * @api\n */\nBaseLayer.prototype.getExtent = function() {\n  return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMaxResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMinResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getOpacity = function() {\n  return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n};\n\n\n/**\n * @abstract\n * @return {module:ol/source/State} Source state.\n */\nBaseLayer.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getVisible = function() {\n  return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getZIndex = function() {\n  return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setExtent = function(extent) {\n  this.set(LayerProperty.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMaxResolution = function(maxResolution) {\n  this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMinResolution = function(minResolution) {\n  this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setOpacity = function(opacity) {\n  this.set(LayerProperty.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setVisible = function(visible) {\n  this.set(LayerProperty.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setZIndex = function(zindex) {\n  this.set(LayerProperty.Z_INDEX, zindex);\n};\nexport default BaseLayer;\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Group\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {module:ol/layer/Base}\n * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n * @api\n */\nconst LayerGroup = function(opt_options) {\n\n  const options = opt_options || {};\n  const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n  delete baseOptions.layers;\n\n  let layers = options.layers;\n\n  BaseLayer.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  listen(this,\n    getChangeEventType(Property.LAYERS),\n    this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new Collection(layers.slice(), {unique: true});\n    } else {\n      assert(layers instanceof Collection,\n        43); // Expected `layers` to be an array or a `Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new Collection(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\ninherits(LayerGroup, BaseLayer);\n\n\n/**\n * @private\n */\nLayerGroup.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nLayerGroup.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  const layers = this.getLayers();\n  this.layersListenerKeys_.push(\n    listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n    listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n  );\n\n  for (const id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(unlistenByKey);\n  }\n  clear(this.listenerKeys_);\n\n  const layersArray = layers.getArray();\n  for (let i = 0, ii = layersArray.length; i < ii; i++) {\n    const layer = layersArray[i];\n    this.listenerKeys_[getUid(layer).toString()] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersAdd_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n    listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersRemove_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key].forEach(unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.getLayers = function() {\n  return (\n    /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n  );\n};\n\n\n/**\n * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.setLayers = function(layers) {\n  this.set(Property.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states !== undefined ? opt_states : [];\n\n  const pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  const ownLayerState = this.getLayerState();\n  for (let i = pos, ii = states.length; i < ii; i++) {\n    const layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n      layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n      layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getSourceState = function() {\n  return SourceState.READY;\n};\n\nexport default LayerGroup;\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid, inherits} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {Element|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {Element|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {Element|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst PluggableMap = function(options) {\n\n  BaseObject.call(this);\n\n  const optionsInternal = createOptionsInternal(options);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToPixelTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.pixelToCoordinateTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  const overlayEvents = [\n    EventType.CLICK,\n    EventType.DBLCLICK,\n    EventType.MOUSEDOWN,\n    EventType.TOUCHSTART,\n    EventType.MSPOINTERDOWN,\n    MapBrowserEventType.POINTERDOWN,\n    EventType.MOUSEWHEEL,\n    EventType.WHEEL\n  ];\n  for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {module:ol/MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n  for (const key in MapBrowserEventType) {\n    listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n      this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  /**\n   * @type {module:ol/Collection.<module:ol/control/Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, module:ol/Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {module:ol/renderer/Map}\n   * @private\n   */\n  this.renderer_ = this.createRenderer();\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    this.getTilePriority.bind(this),\n    this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  listen(\n    this, getChangeEventType(MapProperty.LAYERGROUP),\n    this.handleLayerGroupChanged_, this);\n  listen(this, getChangeEventType(MapProperty.VIEW),\n    this.handleViewChanged_, this);\n  listen(this, getChangeEventType(MapProperty.SIZE),\n    this.handleSizeChanged_, this);\n  listen(this, getChangeEventType(MapProperty.TARGET),\n    this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n    /**\n     * @param {module:ol/control/Control} control Control.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(control) {\n      control.setMap(this);\n    }).bind(this));\n\n  listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.interactions.forEach(\n    /**\n     * @param {module:ol/interaction/Interaction} interaction Interaction.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(interaction) {\n      interaction.setMap(this);\n    }).bind(this));\n\n  listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n  listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n    }, this);\n\n  listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      const overlay = /** @type {module:ol/Overlay} */ (event.element);\n      const id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }, this);\n\n};\n\ninherits(PluggableMap, BaseObject);\n\n\nPluggableMap.prototype.createRenderer = function() {\n  throw new Error('Use a map type that has a createRenderer method');\n};\n\n\n/**\n * Add the given control to the map.\n * @param {module:ol/control/Control} control Control.\n * @api\n */\nPluggableMap.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n * @api\n */\nPluggableMap.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link module:ol/Collection~Collection}.\n * @param {module:ol/layer/Base} layer Layer.\n * @api\n */\nPluggableMap.prototype.addLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @api\n */\nPluggableMap.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {module:ol/Overlay} overlay Overlay.\n * @private\n */\nPluggableMap.prototype.addOverlayInternal_ = function(overlay) {\n  const id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\nPluggableMap.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    removeEventListener(EventType.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link module:ol/Feature feature} or\n *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, callback, null,\n    layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\nPluggableMap.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  let features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachLayerAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const options = opt_options || {};\n  const hitTolerance = options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = options.layerFilter || TRUE;\n  return this.renderer_.forEachLayerAtPixel(\n    pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\nPluggableMap.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nPluggableMap.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {module:ol~Pixel} Pixel.\n * @api\n */\nPluggableMap.prototype.getEventPixel = function(event) {\n  const viewportPosition = this.viewport_.getBoundingClientRect();\n  const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.getTarget = function() {\n  return /** @type {Element|string|undefined} */ (this.get(MapProperty.TARGET));\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\nPluggableMap.prototype.getTargetElement = function() {\n  const target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {module:ol~Pixel} pixel Pixel position in the map viewport.\n * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n * @api\n */\nPluggableMap.prototype.getCoordinateFromPixel = function(pixel) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n * @api\n */\nPluggableMap.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n * @api\n */\nPluggableMap.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {module:ol/Overlay} Overlay.\n * @api\n */\nPluggableMap.prototype.getOverlayById = function(id) {\n  const overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n * @api\n */\nPluggableMap.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getLayerGroup = function() {\n  return (\n    /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n * @api\n */\nPluggableMap.prototype.getLayers = function() {\n  const layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n * @return {module:ol~Pixel} A pixel position in the map viewport.\n * @api\n */\nPluggableMap.prototype.getPixelFromCoordinate = function(coordinate) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {module:ol/renderer/Map} Renderer\n */\nPluggableMap.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.getSize = function() {\n  return (\n    /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {module:ol/View} The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getView = function() {\n  return (\n    /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\nPluggableMap.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\nPluggableMap.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\nPluggableMap.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nPluggableMap.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  const frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const deltaX = tileCenter[0] - frameState.focus[0];\n  const deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\nPluggableMap.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  const type = opt_type || browserEvent.type;\n  const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n */\nPluggableMap.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  const interactionsArray = this.getInteractions().getArray();\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (let i = interactionsArray.length - 1; i >= 0; i--) {\n      const interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      const cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nPluggableMap.prototype.handlePostRender = function() {\n\n  const frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  const tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    let maxTotalLoading = this.maxTilesLoading_;\n    let maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      const hints = frameState.viewHints;\n      if (hints[ViewHint.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[ViewHint.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  const postRenderFunctions = this.postRenderFunctions_;\n  for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  let targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    const keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n      listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      addEventListener(EventType.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  const view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', getUid(view));\n    this.viewPropertyListenerKey_ = listen(\n      view, ObjectEventType.PROPERTYCHANGE,\n      this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = listen(\n      view, EventType.CHANGE,\n      this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  const layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      listen(\n        layerGroup, ObjectEventType.PROPERTYCHANGE,\n        this.render, this),\n      listen(\n        layerGroup, EventType.CHANGE,\n        this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\nPluggableMap.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\nPluggableMap.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\nPluggableMap.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {module:ol/control/Control} control Control.\n * @return {module:ol/control/Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\nPluggableMap.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\nPluggableMap.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {module:ol/layer/Base} layer Layer.\n * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\nPluggableMap.prototype.removeLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\nPluggableMap.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\nPluggableMap.prototype.renderFrame_ = function(time) {\n  let viewState;\n\n  const size = this.getSize();\n  const view = this.getView();\n  const extent = createEmpty();\n  const previousFrameState = this.frameState_;\n  /** @type {?module:ol/PluggableMap~FrameState} */\n  let frameState = null;\n  if (size !== undefined && hasArea(size) && view && view.isDef()) {\n    const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    let focus = this.focus_;\n    if (!focus) {\n      focus = viewState.center;\n      const pixelResolution = viewState.resolution / this.pixelRatio_;\n      focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n      focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n    }\n    frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: focus,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = getForViewAndSize(viewState.center,\n      viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      const moveStart = !this.previousExtent_ ||\n                  (!isEmpty(this.previousExtent_) &&\n                  !equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    const idle = this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n      clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setLayerGroup = function(layerGroup) {\n  this.set(MapProperty.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.setSize = function(size) {\n  this.set(MapProperty.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.setTarget = function(target) {\n  this.set(MapProperty.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {module:ol/View} view The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setView = function(view) {\n  this.set(MapProperty.VIEW, view);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.skipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\nPluggableMap.prototype.updateSize = function() {\n  const targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    const computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.unskipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Element} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/control/Control~Options} options Control options.\n * @api\n */\nconst Control = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/events~EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(module:ol/MapEvent)}\n   */\n  this.render = options.render ? options.render : UNDEFINED;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\ninherits(Control, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nControl.prototype.disposeInternal = function() {\n  removeNode(this.element);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nControl.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nControl.prototype.setMap = function(map) {\n  if (this.map_) {\n    removeNode(this.element);\n  }\n  for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    const target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== UNDEFINED) {\n      this.listenerKeys.push(listen(map,\n        MapEventType.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\nControl.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default Control;\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid, inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/layer/Base}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Layer~Options} options Layer options.\n * @api\n */\nconst Layer = function(options) {\n\n  const baseOptions = assign({}, options);\n  delete baseOptions.source;\n\n  BaseLayer.call(this, /** @type {module:ol/layer/Base~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  listen(this,\n    getChangeEventType(LayerProperty.SOURCE),\n    this.handleSourcePropertyChange_, this);\n\n  const source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\ninherits(Layer, BaseLayer);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\nLayer.prototype.getSource = function() {\n  const source = this.get(LayerProperty.SOURCE);\n  return (\n    /** @type {module:ol/source/Source} */ (source) || null\n  );\n};\n\n\n/**\n  * @inheritDoc\n  */\nLayer.prototype.getSourceState = function() {\n  const source = this.getSource();\n  return !source ? SourceState.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  const source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = listen(source,\n      EventType.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link module:ol/Map#addLayer} instead.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nLayer.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n      const layerState = this.getLayerState();\n      layerState.managed = false;\n      layerState.zIndex = Infinity;\n      evt.frameState.layerStatesArray.push(layerState);\n      evt.frameState.layerStates[getUid(this)] = layerState;\n    }, this);\n    this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {module:ol/source/Source} source The layer source.\n * @observable\n * @api\n */\nLayer.prototype.setSource = function(source) {\n  this.set(LayerProperty.SOURCE, source);\n};\nexport default Layer;\n","/**\n * @module ol/control/Attribution\n */\nimport {inherits} from '../util.js';\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {Element|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n * @api\n */\nconst Attribution = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n};\n\ninherits(Attribution, Control);\n\n\n/**\n * Get a list of visible attributions.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\nAttribution.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {!Object.<string, boolean>}\n   */\n  const lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  const visibleAttributions = [];\n\n  const layerStatesArray = frameState.layerStatesArray;\n  const resolution = frameState.viewState.resolution;\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    const layerState = layerStatesArray[i];\n    if (!visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    const source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    const attributionGetter = source.getAttributions();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    const attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (let j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\n/**\n * @private\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nAttribution.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const attributions = this.getSourceAttributions_(frameState);\n\n  const visible = attributions.length > 0;\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  if (equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  removeChildren(this.ulElement_);\n\n  // append the attributions\n  for (let i = 0, ii = attributions.length; i < ii; ++i) {\n    const element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  this.renderedAttributions_ = attributions;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nAttribution.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nAttribution.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\n\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {inherits} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|Element} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n * @api\n */\nconst Rotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  const label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  const button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  listen(button, EventType.CLICK,\n    Rotate.prototype.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(CLASS_HIDDEN);\n  }\n\n};\n\ninherits(Rotate, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nRotate.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\nRotate.prototype.resetNorth_ = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|Element} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n * @api\n */\nconst Zoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  const delta = options.delta !== undefined ? options.delta : 1;\n\n  const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  const inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n    typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  listen(inElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, delta));\n\n  const outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n    typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  listen(outElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, -delta));\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(Zoom, Control);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\nZoom.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\nZoom.prototype.zoomByDelta_ = function(delta) {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  const currentResolution = view.getResolution();\n  if (currentResolution) {\n    const newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default Zoom;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n * @extends {module:ol/Object}\n * @api\n */\nconst Interaction = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(module:ol/MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\ninherits(Interaction, BaseObject);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\nInteraction.prototype.getActive = function() {\n  return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nInteraction.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\nInteraction.prototype.setActive = function(active) {\n  this.set(InteractionProperty.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n */\nInteraction.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport {inherits} from '../util.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n * @api\n */\nconst DoubleClickZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(DoubleClickZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {inherits} from '../util.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst PointerInteraction = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: options.handleEvent || handleEvent\n  });\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : handleDownEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : handleDragEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : handleMoveEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\ninherits(PointerInteraction, Interaction);\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\nPointerInteraction.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (isPointerDraggingEvent(mapBrowserEvent)) {\n    const event = mapBrowserEvent.pointerEvent;\n\n    const id = event.pointerId.toString();\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        MapBrowserEventType.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overridden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\nPointerInteraction.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n * @api\n */\nconst DragPan = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {module:ol~Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\ninherits(DragPan, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragPan.prototype.shouldStopEvent = FALSE;\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n * @api\n */\nconst DragRotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\ninherits(DragRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragRotate.prototype.shouldStopEvent = FALSE;\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n// FIXME add rotation\n\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\n/**\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {string} className CSS class name.\n */\nconst RenderBox = function(className) {\n\n  /**\n   * @type {module:ol/geom/Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\ninherits(RenderBox, Disposable);\n\n\n/**\n * @inheritDoc\n */\nRenderBox.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\nRenderBox.prototype.render_ = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const px = 'px';\n  const style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n */\nRenderBox.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    const style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {module:ol~Pixel} startPixel Start pixel.\n * @param {module:ol~Pixel} endPixel End pixel.\n */\nRenderBox.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\nRenderBox.prototype.createOrUpdateGeometry = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new Polygon([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {module:ol/geom/Polygon} Geometry.\n */\nRenderBox.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {inherits} from '../util.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol~Pixel, module:ol~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst DragBoxEvent = function(type, coordinate, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n\ninherits(DragBoxEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n * @api\n */\nconst DragBox = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/render/Box}\n   * @private\n   */\n  this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/DragBox~EndCondition}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : defaultBoxEndCondition;\n};\n\ninherits(DragBox, PointerInteraction);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {module:ol/geom/Polygon} Geometry.\n * @api\n */\nDragBox.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\nDragBox.prototype.onBoxEnd = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n    this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {inherits} from '../util.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {module:ol/interaction/DragBox}\n * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n * @api\n */\nconst DragZoom = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const condition = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  DragBox.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\ninherits(DragZoom, DragBox);\n\n\n/**\n * @inheritDoc\n */\nDragZoom.prototype.onBoxEnd = function() {\n  const map = this.getMap();\n\n  const view = /** @type {!module:ol/View} */ (map.getView());\n\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n\n};\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {inherits} from '../util.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n * @api\n */\nconst KeyboardPan = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) &&\n      targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\ninherits(KeyboardPan, Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n *\n * @constructor\n * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst KeyboardZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\ninherits(KeyboardZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n * @api\n */\nconst MouseWheelZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {?module:ol/coordinate~Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\ninherits(MouseWheelZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\n/**\n * @private\n */\nMouseWheelZoom.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  const view = this.getMap().getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {module:ol/PluggableMap} map Map.\n */\nMouseWheelZoom.prototype.handleWheelZoom_ = function(map) {\n  const view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  const maxDelta = MAX_DELTA;\n  const delta = clamp(this.delta_, -maxDelta, maxDelta);\n  zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\nMouseWheelZoom.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n * @api\n */\nconst PinchRotate = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(PinchRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchRotate.prototype.shouldStopEvent = FALSE;\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n * @api\n */\nconst PinchZoom = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\ninherits(PinchZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchZoom.prototype.shouldStopEvent = FALSE;\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {inherits} from '../util.js';\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n * @param {File} file File.\n * @param {Array.<module:ol/Feature>=} opt_features Features.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n */\nconst DragAndDropEvent = function(type, file, opt_features, opt_projection) {\n\n  Event.call(this, type);\n\n  /**\n   * The features parsed from dropped data.\n   * @type {Array.<module:ol/Feature>|undefined}\n   * @api\n   */\n  this.features = opt_features;\n\n  /**\n   * The dropped file.\n   * @type {File}\n   * @api\n   */\n  this.file = file;\n\n  /**\n   * The feature projection.\n   * @type {module:ol/proj/Projection|undefined}\n   * @api\n   */\n  this.projection = opt_projection;\n\n};\ninherits(DragAndDropEvent, Event);\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n * @api\n */\nconst DragAndDrop = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: TRUE\n  });\n\n  /**\n   * @private\n   * @type {Array.<function(new: module:ol/format/Feature)>}\n   */\n  this.formatConstructors_ = options.formatConstructors ?\n    options.formatConstructors : [];\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = options.projection ?\n    getProjection(options.projection) : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.dropListenKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector}\n   */\n  this.source_ = options.source || null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target = options.target ? options.target : null;\n\n};\n\ninherits(DragAndDrop, Interaction);\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\n/**\n * @param {File} file File.\n * @param {Event} event Load event.\n * @private\n */\nDragAndDrop.prototype.handleResult_ = function(file, event) {\n  const result = event.target.result;\n  const map = this.getMap();\n  let projection = this.projection_;\n  if (!projection) {\n    const view = map.getView();\n    projection = view.getProjection();\n  }\n\n  const formatConstructors = this.formatConstructors_;\n  let features = [];\n  for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n    /**\n     * Avoid \"cannot instantiate abstract class\" error.\n     * @type {Function}\n     */\n    const formatConstructor = formatConstructors[i];\n    /**\n     * @type {module:ol/format/Feature}\n     */\n    const format = new formatConstructor();\n    features = this.tryReadFeatures_(format, result, {\n      featureProjection: projection\n    });\n    if (features && features.length > 0) {\n      break;\n    }\n  }\n  if (this.source_) {\n    this.source_.clear();\n    this.source_.addFeatures(features);\n  }\n  this.dispatchEvent(\n    new DragAndDropEvent(\n      DragAndDropEventType.ADD_FEATURES, file,\n      features, projection));\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.registerListeners_ = function() {\n  const map = this.getMap();\n  if (map) {\n    const dropArea = this.target ? this.target : map.getViewport();\n    this.dropListenKeys_ = [\n      listen(dropArea, EventType.DROP, handleDrop, this),\n      listen(dropArea, EventType.DRAGENTER, handleStop, this),\n      listen(dropArea, EventType.DRAGOVER, handleStop, this),\n      listen(dropArea, EventType.DROP, handleStop, this)\n    ];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setActive = function(active) {\n  Interaction.prototype.setActive.call(this, active);\n  if (active) {\n    this.registerListeners_();\n  } else {\n    this.unregisterListeners_();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setMap = function(map) {\n  this.unregisterListeners_();\n  Interaction.prototype.setMap.call(this, map);\n  if (this.getActive()) {\n    this.registerListeners_();\n  }\n};\n\n\n/**\n * @param {module:ol/format/Feature} format Format.\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions} options Read options.\n * @private\n * @return {Array.<module:ol/Feature>} Features.\n */\nDragAndDrop.prototype.tryReadFeatures_ = function(format, text, options) {\n  try {\n    return format.readFeatures(text, options);\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.unregisterListeners_ = function() {\n  if (this.dropListenKeys_) {\n    this.dropListenKeys_.forEach(unlistenByKey);\n    this.dropListenKeys_ = null;\n  }\n};\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n * @api\n */\nconst DragRotateAndZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastMagnitude_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n};\n\ninherits(DragRotateAndZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return inflateCoordinatesArray(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<module:ol/geom/LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = interpolatePoint(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = douglasPeuckerArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineStringArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {module:ol/geom/Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (let j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<module:ol/geom/Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<module:ol/geom/Point>} */\n  const points = [];\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestMultiArrayPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRingsArray(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateMultiCoordinatesArray(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingsAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRingsArray(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = quantizeMultiArray(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<module:ol/geom/Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingMultiArray(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/layer/Vector\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Vector~Options=} opt_options Options.\n * @api\n */\nconst VectorLayer = function(opt_options) {\n  const options = opt_options ?\n    opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  Layer.call(this, /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {module:ol/layer/VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR;\n\n};\n\ninherits(VectorLayer, Layer);\n\n\n/**\n * @return {boolean} Declutter.\n */\nVectorLayer.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\nVectorLayer.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\nVectorLayer.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n *     order.\n */\nVectorLayer.prototype.getRenderOrder = function() {\n  return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n  );\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n *     Layer style.\n * @api\n */\nVectorLayer.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n * @api\n */\nVectorLayer.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\nVectorLayer.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\nVectorLayer.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n *     Render order.\n */\nVectorLayer.prototype.setRenderOrder = function(renderOrder) {\n  this.set(Property.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link module:ol/style} for information on the default style.\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\nVectorLayer.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : createDefaultStyle;\n  this.styleFunction_ = style === null ?\n    undefined : toStyleFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {module:ol/layer/VectorRenderType|string} The render mode.\n */\nVectorLayer.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\nexport default VectorLayer;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Source\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/source/Source~Options} options Source options.\n * @api\n */\nconst Source = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = getProjection(options.projection);\n\n  /**\n   * @private\n   * @type {?module:ol/source/Source~Attribution}\n   */\n  this.attributions_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {module:ol/source/State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : SourceState.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\ninherits(Source, BaseObject);\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n */\nSource.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * Get the attribution function for the source.\n * @return {?module:ol/source/Source~Attribution} Attribution function.\n */\nSource.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nSource.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\nSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n * @return {module:ol/source/State} State.\n * @api\n */\nSource.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\nSource.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\nSource.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n *     or `undefined`.\n * @api\n */\nSource.prototype.setAttributions = function(attributions) {\n  this.attributions_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the state of the source.\n * @param {module:ol/source/State} state State.\n * @protected\n */\nSource.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nconst RBush = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function(extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function(extents, values) {\n  const items = new Array(values.length);\n  for (let i = 0, l = values.length; i < l; i++) {\n    const extent = extents[i];\n    const value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function(value) {\n  const uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  const item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function(extent, value) {\n  const item = this.items_[getUid(value)];\n  const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function() {\n  const items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function(extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  const items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function(values, callback, opt_this) {\n  let result;\n  for (let i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function() {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  const data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (const i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport const VectorSourceEvent = function(type, opt_feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {module:ol/Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\ninherits(VectorSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {module:ol/source/Source}\n * @fires ol/source/Vector~VectorSourceEvent\n * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n * @api\n */\nconst VectorSource = function(opt_options) {\n\n  const options = opt_options || {};\n\n  Source.call(this, {\n    attributions: options.attributions,\n    projection: undefined,\n    state: SourceState.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_ = UNDEFINED;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector~LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n  const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<module:ol/Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n   */\n  this.loadedExtentsRtree_ = new RBush();\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by getUid(feature)).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  let collection, features;\n  if (options.features instanceof Collection) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new Collection(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\ninherits(VectorSource, Source);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n * @param {module:ol/Feature} feature The feature drawn.\n */\nconst DrawEvent = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {module:ol/Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\n\ninherits(DrawEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Draw~DrawEvent\n * @param {module:ol/interaction/Draw~Options} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {module:ol/geom/GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {module:ol/interaction/Draw~Mode}\n   * @private\n   */\n  this.mode_ = getMode(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = squaredCoordinateDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        Constructor = Point;\n      } else if (mode === Mode.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Mode.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Mode.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {module:ol/interaction/Draw~GeometryFunction}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : shiftKeyOnly;\n  }\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Handle move events.\n * @param {module:ol/MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Mode.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Mode.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Mode.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Mode.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Mode.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Mode.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Mode.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n * dispatched before inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  if (!sketchFeature) {\n    return;\n  }\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Mode.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {module:ol/Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!module:ol/Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n *\n * @constructor\n * @param {module:ol/extent~Extent} extent the new extent\n * @extends {module:ol/events/Event}\n */\nconst ExtentInteractionEvent = function(extent) {\n  Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n  /**\n   * The current extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = extent;\n\n};\ninherits(ExtentInteractionEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Extent~Event\n * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n * @api\n */\nconst ExtentInteraction = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * Extent of the drawn box\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.extent_ = null;\n\n  /**\n   * Handler for pointer move events\n   * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n   * @private\n   */\n  this.pointerHandler_ = null;\n\n  /**\n   * Pixel threshold to snap to extent\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * Is the pointer snapped to an extent vertex\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Feature for displaying the visible extent\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.extentFeature_ = null;\n\n  /**\n   * Feature for displaying the visible pointer\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * Layer for the extentFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.extentOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Layer for the vertexFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.vertexOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  if (opt_options.extent) {\n    this.setExtent(opt_options.extent);\n  }\n};\n\ninherits(ExtentInteraction, PointerInteraction);\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n/**\n * @param {module:ol~Pixel} pixel cursor location\n * @param {module:ol/PluggableMap} map map\n * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n * @private\n */\nExtentInteraction.prototype.snapToVertex_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b);\n  };\n  const extent = this.getExtent();\n  if (extent) {\n    //convert extents to line segments and find the segment closest to pixelCoordinate\n    const segments = getSegments(extent);\n    segments.sort(sortByDistance);\n    const closestSegment = segments[0];\n\n    let vertex = (closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n    //if the distance is within tolerance, snap to the segment\n    if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n      //test if we should further snap to a vertex\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n      }\n      return vertex;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n * @private\n */\nExtentInteraction.prototype.handlePointerMove_ = function(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  let vertex = this.snapToVertex_(pixel, map);\n  if (!vertex) {\n    vertex = map.getCoordinateFromPixel(pixel);\n  }\n  this.createOrUpdatePointerFeature_(vertex);\n};\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {module:ol/Feature} extent as featrue\n * @private\n */\nExtentInteraction.prototype.createOrUpdateExtentFeature_ = function(extent) {\n  let extentFeature = this.extentFeature_;\n\n  if (!extentFeature) {\n    if (!extent) {\n      extentFeature = new Feature({});\n    } else {\n      extentFeature = new Feature(polygonFromExtent(extent));\n    }\n    this.extentFeature_ = extentFeature;\n    this.extentOverlay_.getSource().addFeature(extentFeature);\n  } else {\n    if (!extent) {\n      extentFeature.setGeometry(undefined);\n    } else {\n      extentFeature.setGeometry(polygonFromExtent(extent));\n    }\n  }\n  return extentFeature;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} vertex location of feature\n * @returns {module:ol/Feature} vertex as feature\n * @private\n */\nExtentInteraction.prototype.createOrUpdatePointerFeature_ = function(vertex) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(vertex));\n    this.vertexFeature_ = vertexFeature;\n    this.vertexOverlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(vertex);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nExtentInteraction.prototype.setMap = function(map) {\n  this.extentOverlay_.setMap(map);\n  this.vertexOverlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n/**\n * Returns the current drawn extent in the view projection\n *\n * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n * @api\n */\nExtentInteraction.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n/**\n * Manually sets the drawn extent, using the view projection.\n *\n * @param {module:ol/extent~Extent} extent Extent\n * @api\n */\nExtentInteraction.prototype.setExtent = function(extent) {\n  //Null extent means no bbox\n  this.extent_ = extent ? extent : null;\n  this.createOrUpdateExtentFeature_(extent);\n  this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n};\n\n\nexport default ExtentInteraction;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {ModifyEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features\n * The features modified.\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n * Associated {@link module:ol/MapBrowserPointerEvent}.\n */\nexport const ModifyEvent = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\n\ninherits(ModifyEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Modify~Options} options Options.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : always;\n\n  /**\n   * Editing vertex.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @const\n   * @private\n   * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n   */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {module:ol/MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new ModifyEvent(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n     * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n     */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @return {module:ol/Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n        pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = closestOnSegmentData(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = coordinateDistance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          const segment = nodes[i].segment;\n          if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n              coordinatesEqual(closestSegment[1], segment[1]) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n              coordinatesEqual(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid, inherits} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n *\n * @param {SelectEventType} type The event type.\n * @param {Array.<module:ol/Feature>} selected Selected features.\n * @param {Array.<module:ol/Feature>} deselected Deselected features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n *     {@link module:ol/MapBrowserEvent}.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst SelectEvent = function(type, selected, deselected, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * Selected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.selected = selected;\n\n  /**\n   * Deselected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.deselected = deselected;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n};\n\ninherits(SelectEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/Select~Options=} opt_options Options.\n * @fires SelectEvent\n * @api\n */\nconst Select = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : singleClick;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multi_ = options.multi ? options.multi : false;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/Select~FilterFunction}\n   */\n  this.filter_ = options.filter ? options.filter : TRUE;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  const featureOverlay = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      features: options.features,\n      wrapX: options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/layer/Vector}\n   */\n  this.featureOverlay_ = featureOverlay;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * An association between selected feature (key)\n   * and layer (value)\n   * @private\n   * @type {Object.<number, module:ol/layer/Layer>}\n   */\n  this.featureLayerAssociation_ = {};\n\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  listen(features, CollectionEventType.ADD,\n    this.addFeature_, this);\n  listen(features, CollectionEventType.REMOVE,\n    this.removeFeature_, this);\n\n};\n\ninherits(Select, Interaction);\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/layer/Layer} layer Layer.\n * @private\n */\nSelect.prototype.addFeatureLayerAssociation_ = function(feature, layer) {\n  const key = getUid(feature);\n  this.featureLayerAssociation_[key] = layer;\n};\n\n\n/**\n * Get the selected features.\n * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n * @api\n */\nSelect.prototype.getFeatures = function() {\n  return this.featureOverlay_.getSource().getFeaturesCollection();\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n * the (last) selected feature. Note that this will not work with any\n * programmatic method like pushing features to\n * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n * @return {module:ol/layer/Vector} Layer.\n * @api\n */\nSelect.prototype.getLayer = function(feature) {\n  const key = getUid(feature);\n  return (\n    /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n  );\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * Remove the interaction from its current map, if any,  and attach it to a new\n * map, if any. Pass `null` to just remove the interaction from the current map.\n * @param {module:ol/PluggableMap} map Map.\n * @override\n * @api\n */\nSelect.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const selectedFeatures =\n      this.featureOverlay_.getSource().getFeaturesCollection();\n  if (currentMap) {\n    selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n  }\n  Interaction.prototype.setMap.call(this, map);\n  this.featureOverlay_.setMap(map);\n  if (map) {\n    selectedFeatures.forEach(map.skipFeature.bind(map));\n  }\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.addFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.removeFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @private\n */\nSelect.prototype.removeFeatureLayerAssociation_ = function(feature) {\n  const key = getUid(feature);\n  delete this.featureLayerAssociation_[key];\n};\n\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: handleEvent,\n    handleDownEvent: TRUE,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, module:ol/extent~Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {!Object.<number, module:ol/Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n   * @private\n   */\n  this.sortByDistance_ = sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const register = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (register) {\n    this.featureChangeListenerKeys_[feature_uid] = listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return (\n    /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unregister) {\n    unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n * @param {module:ol/PluggableMap} map Map.\n * @return {module:ol/interaction/Snap~Result} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return (\n    /** @type {module:ol/interaction/Snap~Result} */ ({\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    })\n  );\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n */\nexport const TranslateEvent = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n\ninherits(TranslateEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleMoveEvent: handleMoveEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {module:ol~Pixel} pixel Pixel coordinate to test for intersection.\n * @param {module:ol/PluggableMap} map Map to test the intersection on.\n * @return {module:ol/Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/render/Event\n */\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\nconst RenderEvent = function(\n  type, opt_vectorContext, opt_frameState, opt_context,\n  opt_glContext) {\n\n  Event.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;\n","/**\n * @module ol/render/VectorContext\n */\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\nVectorContext.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nconst CanvasImmediateRenderer = function(context, pixelRatio, extent, transform, viewRotation) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpLocalTransform_ = createTransform();\n\n};\n\ninherits(CanvasImmediateRenderer, VectorContext);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, 2, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  const localTransform = this.tmpLocalTransform_;\n  const alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  let rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    let x = pixelCoordinates[i] - this.imageAnchorX_;\n    let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      const centerX = x + this.imageAnchorX_;\n      const centerY = y + this.imageAnchorY_;\n      composeTransform(localTransform,\n        centerX, centerY,\n        this.imageScale_, this.imageScale_,\n        rotation,\n        -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n      this.imageWidth_, this.imageHeight_, x, y,\n      this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  let rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    const x = pixelCoordinates[offset] + this.textOffsetX_;\n    const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      const localTransform = composeTransform(this.tmpLocalTransform_,\n        x, y,\n        this.textScale_, this.textScale_,\n        rotation,\n        -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\nCanvasImmediateRenderer.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  const context = this.context_;\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  let length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (let i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasImmediateRenderer.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {module:ol/geom/Circle} geometry Circle geometry.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawCircle = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const pixelCoordinates = transformGeom2D(\n      geometry, this.transform_, this.pixelCoordinates_);\n    const dx = pixelCoordinates[2] - pixelCoordinates[0];\n    const dy = pixelCoordinates[3] - pixelCoordinates[1];\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    const context = this.context_;\n    context.beginPath();\n    context.arc(\n      pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawGeometryCollection = function(geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawLineString = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n      geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiLineString = function(geometry) {\n  const geometryExtent = geometry.getExtent();\n  if (!intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    let offset = 0;\n    const ends = geometry.getEnds();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n      0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    const flatCoordinates = geometry.getOrientedFlatCoordinates();\n    let offset = 0;\n    const endss = geometry.getEndss();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillState} fillState Fill state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextFillState_ = function(fillState) {\n  const context = this.context_;\n  const contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextStrokeState_ = function(strokeState) {\n  const context = this.context_;\n  const contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (CANVAS_LINE_DASH) {\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~TextState} textState Text state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextTextState_ = function(textState) {\n  const context = this.context_;\n  const contextTextState = this.contextTextState_;\n  const textAlign = textState.textAlign ?\n    textState.textAlign : defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = context.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    const fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    const strokeStyleColor = strokeStyle.getColor();\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    const strokeStyleWidth = strokeStyle.getWidth();\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit,\n      strokeStyle: asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {module:ol/style/Image} imageStyle Image style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    const imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    const imageImage = imageStyle.getImage(1);\n    const imageOrigin = imageStyle.getOrigin();\n    const imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {module:ol/style/Text} textStyle Text style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: asColorLike(textFillStyleColor ?\n          textFillStyleColor : defaultFillStyle)\n      };\n    }\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      const textStrokeStyleWidth = textStrokeStyle.getWidth();\n      const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : defaultStrokeStyle)\n      };\n    }\n    const textFont = textStyle.getFont();\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    const textScale = textStyle.getScale();\n    const textText = textStyle.getText();\n    const textTextAlign = textStyle.getTextAlign();\n    const textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n * @constructor\n */\nconst IconImageCache = function() {\n\n  /**\n   * @type {!Object.<string, module:ol/style/IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    let i = 0;\n    for (const key in this.cache_) {\n      const iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nIconImageCache.prototype.get = function(src, crossOrigin, color) {\n  const key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @param {module:ol/style/IconImage} iconImage Icon image.\n */\nIconImageCache.prototype.set = function(src, crossOrigin, color, iconImage) {\n  const key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\nIconImageCache.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid, inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/Disposable}\n * @param {module:ol/PluggableMap} map Map.\n * @struct\n */\nconst MapRenderer = function(map) {\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/renderer/Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/events~EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/Layer>}\n   */\n  this.layerRendererConstructors_ = [];\n\n};\n\ninherits(MapRenderer, Disposable);\n\n\n/**\n * Register layer renderer constructors.\n * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n */\nMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n};\n\n\n/**\n * Get the registered layer renderer constructors.\n * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n */\nMapRenderer.prototype.getLayerRendererConstructors = function() {\n  return this.layerRendererConstructors_;\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @protected\n */\nMapRenderer.prototype.calculateMatrices2D = function(frameState) {\n  const viewState = frameState.viewState;\n  const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  composeTransform(coordinateToPixelTransform,\n    frameState.size[0] / 2, frameState.size[1] / 2,\n    1 / viewState.resolution, -1 / viewState.resolution,\n    -viewState.rotation,\n    -viewState.center[0], -viewState.center[1]);\n\n  invertTransform(\n    transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\nMapRenderer.prototype.removeLayerRenderers = function() {\n  for (const key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    const key = getUid(feature).toString();\n    const managed = frameState.layerStates[getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  const projection = viewState.projection;\n\n  let translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    const x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n          frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\nMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(\n    coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRenderer = function(layer) {\n  const layerKey = getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    let renderer;\n    for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n      const candidate = this.layerRendererConstructors_[i];\n      if (candidate['handles'](layer)) {\n        renderer = candidate['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = listen(renderer,\n        EventType.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n */\nMapRenderer.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {module:ol/PluggableMap} Map.\n */\nMapRenderer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\nMapRenderer.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {module:ol/renderer/Layer} Layer renderer.\n * @private\n */\nMapRenderer.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  const layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nMapRenderer.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n};\n\n\n/**\n * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {inherits} from '../../util.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst CanvasMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nCanvasMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  const context = this.context_;\n  if (map.hasListener(type)) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const transform = this.getTransform(frameState);\n\n    const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n      extent, transform, rotation);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasMapRenderer.prototype.getTransform = function(frameState) {\n  const viewState = frameState.viewState;\n  const dx1 = this.canvas_.width / 2;\n  const dy1 = this.canvas_.height / 2;\n  const sx = frameState.pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0];\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const context = this.context_;\n  const pixelRatio = frameState.pixelRatio;\n  const width = Math.round(frameState.size[0] * pixelRatio);\n  const height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  const rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n    if (!visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != SourceState.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n  for (let i = 0, ii = constructors.length; i < ii; ++i) {\n    const ctor = constructors[i];\n    if (!includes(layerRendererConstructors, ctor)) {\n      layerRendererConstructors.push(ctor);\n    }\n  }\n};\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @constructor\n * @extends {module:ol/Observable}\n * @param {module:ol/layer/Layer} layer Layer.\n * @struct\n */\nconst LayerRenderer = function(layer) {\n\n  Observable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/layer/Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\ninherits(LayerRenderer, Observable);\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {module:ol/source/Tile} source Tile source.\n * @param {module:ol/proj/Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n * @return {function(number, module:ol/TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n * @protected\n */\nLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @return {module:ol/layer/Layer} Layer.\n */\nLayerRenderer.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {module:ol/events/Event} event Image change event.\n * @private\n */\nLayerRenderer.prototype.handleImageChange_ = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  if (image.getState() === ImageState.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {module:ol/ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n * @protected\n */\nLayerRenderer.prototype.loadImage = function(image) {\n  let imageState = image.getState();\n  if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n    listen(image, EventType.CHANGE, this.handleImageChange_, this);\n  }\n  if (imageState == ImageState.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == ImageState.LOADED;\n};\n\n\n/**\n * @protected\n */\nLayerRenderer.prototype.renderIfReadyAndVisible = function() {\n  const layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @protected\n */\nLayerRenderer.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {module:ol/source/Tile} tileSource Tile source.\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function(tileSource, map, frameState) {\n      const tileSourceKey = getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n          frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @protected\n */\nLayerRenderer.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  const tileSourceKey = getUid(tileSource).toString();\n  const zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\nLayerRenderer.prototype.manageTilePyramid = function(\n  frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n  currentZ, preload, opt_tileCallback, opt_this) {\n  const tileSourceKey = getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  const wantedTiles = frameState.wantedTiles[tileSourceKey];\n  const tileQueue = frameState.tileQueue;\n  const minZoom = tileGrid.getMinZoom();\n  let tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == TileState.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {inherits} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst CanvasLayerRenderer = function(layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/extent~Extent} extent Clip extent.\n * @protected\n */\nCanvasLayerRenderer.prototype.clip = function(context, frameState, extent) {\n  const pixelRatio = frameState.pixelRatio;\n  const width = frameState.size[0] * pixelRatio;\n  const height = frameState.size[1] * pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n  const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n  applyTransform(frameState.coordinateToPixelTransform, topLeft);\n  applyTransform(frameState.coordinateToPixelTransform, topRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @private\n */\nCanvasLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    const transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    const render = new CanvasImmediateRenderer(\n      context, frameState.pixelRatio, frameState.extent, transform,\n      frameState.viewState.rotation);\n    const composeEvent = new RenderEvent(type, render, frameState,\n      context, null);\n    layer.dispatchEvent(composeEvent);\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nCanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasLayerRenderer.prototype.getTransform = function(frameState, offsetX) {\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const dx1 = pixelRatio * frameState.size[0] / 2;\n  const dy1 = pixelRatio * frameState.size[1] / 2;\n  const sx = pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0] + offsetX;\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\nCanvasLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {};\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {inherits} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst IntermediateCanvasRenderer = function(layer) {\n\n  CanvasLayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToCanvasPixelTransform = createTransform();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\ninherits(IntermediateCanvasRenderer, CanvasLayerRenderer);\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  const image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    const extent = layerState.extent;\n    const clipped = extent !== undefined &&\n        !containsExtent(extent, frameState.extent) &&\n        intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n    }\n\n    const imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    const dx = imageTransform[4];\n    const dy = imageTransform[5];\n    const dw = image.width * imageTransform[0];\n    const dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n      Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\nIntermediateCanvasRenderer.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!module:ol/transform~Transform} Image transform.\n */\nIntermediateCanvasRenderer.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../util.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n * @api\n */\nconst CanvasImageLayerRenderer = function(imageLayer) {\n\n  IntermediateCanvasRenderer.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/renderer/canvas/VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n  if (imageLayer.getType() === LayerType.VECTOR) {\n    for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n      const ctor = layerRendererConstructors[i];\n      if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n        this.vectorRenderer_ = new ctor(imageLayer);\n        break;\n      }\n    }\n  }\n\n};\n\ninherits(CanvasImageLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.disposeInternal = function() {\n  if (this.vectorRenderer_) {\n    this.vectorRenderer_.dispose();\n  }\n  IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n\n  let image;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  const vectorRenderer = this.vectorRenderer_;\n  let renderedExtent = frameState.extent;\n  if (!vectorRenderer && layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    let skippedFeatures = this.skippedFeatures_;\n    if (vectorRenderer) {\n      const context = vectorRenderer.context;\n      const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n            (vectorRenderer.replayGroupChanged ||\n            !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.compose(context, imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n    } else {\n      image = imageSource.getImage(\n        renderedExtent, viewResolution, pixelRatio, projection);\n    }\n    if (image && this.loadImage(image)) {\n      this.image_ = image;\n      this.skippedFeatures_ = skippedFeatures;\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nconst TileRange = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {module:ol/size~Size} Size.\n */\nTileRange.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n * @api\n */\nconst CanvasTileLayerRenderer = function(tileLayer) {\n\n  IntermediateCanvasRenderer.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null : createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.newTiles_ = false;\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent = createEmpty();\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\ninherits(CanvasTileLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\nCanvasTileLayerRenderer.prototype.isDrawableTile_ = function(tile) {\n  const tileState = tile.getState();\n  const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      tileState == TileState.ERROR && !useInterimTilesOnError;\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nCanvasTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n  let tile = source.getTile(z, x, y, pixelRatio, projection);\n  if (tile.getState() == TileState.ERROR) {\n    if (!layer.getUseInterimTilesOnError()) {\n      // When useInterimTilesOnError is false, we consider the error tile as loaded.\n      tile.setState(TileState.LOADED);\n    } else if (layer.getPreload() > 0) {\n      // Preloaded tiles for lower resolutions might have finished loading.\n      this.newTiles_ = true;\n    }\n  }\n  if (!this.isDrawableTile_(tile)) {\n    tile = tile.getInterimTile();\n  }\n  return tile;\n};\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const viewResolution = viewState.resolution;\n  const viewCenter = viewState.center;\n\n  const tileLayer = this.getLayer();\n  const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n  const sourceRevision = tileSource.getRevision();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  const tileResolution = tileGrid.getResolution(z);\n  let oversampling = Math.round(viewResolution / tileResolution) || 1;\n  let extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = getIntersection(extent, layerState.extent);\n  }\n  if (isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, module:ol/Tile>>}\n   */\n  const tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  const findLoadedTiles = this.createLoadedTileFinder(\n    tileSource, projection, tilesToDrawByZ);\n\n  const hints = frameState.viewHints;\n  const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n  const tmpExtent = this.tmpExtent;\n  const tmpTileRange = this.tmpTileRange_;\n  this.newTiles_ = false;\n  let tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n        continue;\n      }\n      tile = this.getTile(z, x, y, pixelRatio, projection);\n      if (this.isDrawableTile_(tile)) {\n        const uid = getUid(this);\n        if (tile.getState() == TileState.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          const inTransition = tile.inTransition(uid);\n          if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            this.newTiles_ = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      const childTileRange = tileGrid.getTileCoordChildTileRange(\n        tile.tileCoord, tmpTileRange, tmpExtent);\n      let covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    this.newTiles_ ||\n        !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    const context = this.context;\n    if (context) {\n      const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      const canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    let tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  const scale = this.renderedResolution / viewResolution;\n  const transform = composeTransform(this.imageTransform_,\n    pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n    scale, scale,\n    0,\n    (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n    (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  composeTransform(this.coordinateToCanvasPixelTransform,\n    pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n    pixelRatio / viewResolution, -pixelRatio / viewResolution,\n    0,\n    -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n    projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\nCanvasTileLayerRenderer.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  const image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  const uid = getUid(this);\n  const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  const alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n    image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImage = function() {\n  const context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nconst ReplayGroup = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {module:ol/render/ReplayType} replayType Replay type.\n * @return {module:ol/render/VectorContext} Replay.\n */\nReplayGroup.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function() {};\nexport default ReplayGroup;\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasReplay = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  VectorContext.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.alignFill_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!module:ol/transform~Transform}\n   */\n  this.renderedTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/render/canvas~FillStrokeState}\n   */\n  this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n};\n\ninherits(CanvasReplay, VectorContext);\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n  fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayImage_ = function(context, x, y, image,\n  anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n  rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  const fillStroke = fillInstruction || strokeInstruction;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n\n  const w = (width + originX > image.width) ? image.width - originX : width;\n  const h = (height + originY > image.height) ? image.height - originY : height;\n  const boxW = padding[3] + w * scale + padding[1];\n  const boxH = padding[0] + h * scale + padding[2];\n  const boxX = x - padding[3];\n  const boxY = y - padding[0];\n\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p1;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p2;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p3;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  let transform = null;\n  if (rotation !== 0) {\n    const centerX = x + anchorX;\n    const centerY = y + anchorY;\n    transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    createOrUpdateEmpty(tmpExtent);\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n  } else {\n    createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n  }\n  const canvas = context.canvas;\n  const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n  const intersects =\n      tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n      tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    extend(declutterGroup, tmpExtent);\n    const declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array.<*>} */ (fillInstruction),\n        /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\nCanvasReplay.prototype.applyPixelRatio = function(dashArray) {\n  const pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\nCanvasReplay.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  let myEnd = this.coordinates.length;\n  const extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const nextCoord = [NaN, NaN];\n  let skipped = true;\n\n  let i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === Relationship.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\nCanvasReplay.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasReplay.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  const type = geometry.getType();\n  const stride = geometry.getStride();\n  const replayBegin = this.coordinates.length;\n  let flatCoordinates, replayEnd, replayEnds, replayEndss;\n  let offset;\n  if (type == GeometryType.MULTI_POLYGON) {\n    geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    const endss = geometry.getEndss();\n    offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n  } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == GeometryType.POLYGON) ?\n      /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n      stride, replayEnds);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n  } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n  } else if (type == GeometryType.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasReplay.prototype.fill_ = function(context) {\n  if (this.alignFill_) {\n    const origin = applyTransform(this.renderedTransform_, [0, 0]);\n    const repeatSize = 512 * this.pixelRatio;\n    context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.alignFill_) {\n    context.setTransform.apply(context, resetTransform);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\nCanvasReplay.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    const groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {module:ol/structs/RBush~Entry} */\n      const box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          const declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replay_ = function(\n  context, transform, skippedFeaturesHash,\n  instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  let pixelCoordinates;\n  if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = transform2D(\n      this.coordinates, 0, this.coordinates.length, 2,\n      transform, this.pixelCoordinates_);\n    transformSetFromArray(this.renderedTransform_, transform);\n  }\n  const skipFeatures = !isEmpty(skippedFeaturesHash);\n  let i = 0; // instruction index\n  const ii = instructions.length; // end of instructions\n  let d = 0; // data index\n  let dd; // end of per-instruction data\n  let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  let pendingFill = 0;\n  let pendingStroke = 0;\n  let lastFillInstruction = null;\n  let lastStrokeInstruction = null;\n  const coordinateCache = this.coordinateCache_;\n  const viewRotation = this.viewRotation_;\n\n  const state = /** @type {module:ol/render~State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n  let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n  let x, y;\n  while (i < ii) {\n    const instruction = instructions[i];\n    const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    switch (type) {\n      case CanvasInstruction.BEGIN_GEOMETRY:\n        feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !intersects(\n          opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case CanvasInstruction.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case CanvasInstruction.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        const x1 = pixelCoordinates[d];\n        const y1 = pixelCoordinates[d + 1];\n        const x2 = pixelCoordinates[d + 2];\n        const y2 = pixelCoordinates[d + 3];\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        const r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case CanvasInstruction.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case CanvasInstruction.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n        const renderer = instruction[4];\n        const fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        const coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n        const height = /** @type {number} */ (instruction[7]);\n        const opacity = /** @type {number} */ (instruction[8]);\n        const originX = /** @type {number} */ (instruction[9]);\n        const originY = /** @type {number} */ (instruction[10]);\n        const rotateWithView = /** @type {boolean} */ (instruction[11]);\n        let rotation = /** @type {number} */ (instruction[12]);\n        const scale = /** @type {number} */ (instruction[13]);\n        const snapToPixel = /** @type {boolean} */ (instruction[14]);\n        const width = /** @type {number} */ (instruction[15]);\n\n        let padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n            pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n            declutterGroup, height, opacity, originX, originY, rotation, scale,\n            snapToPixel, width, padding,\n            backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n            backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_CHARS:\n        const begin = /** @type {number} */ (instruction[1]);\n        const end = /** @type {number} */ (instruction[2]);\n        const baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n        const overflow = /** @type {number} */ (instruction[5]);\n        const fillKey = /** @type {string} */ (instruction[6]);\n        const maxAngle = /** @type {number} */ (instruction[7]);\n        const measure = /** @type {function(string):number} */ (instruction[8]);\n        const offsetY = /** @type {number} */ (instruction[9]);\n        const strokeKey = /** @type {string} */ (instruction[10]);\n        const strokeWidth =  /** @type {number} */ (instruction[11]);\n        const text = /** @type {string} */ (instruction[12]);\n        const textKey = /** @type {string} */ (instruction[13]);\n        const textScale = /** @type {number} */ (instruction[14]);\n\n        const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n        const textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n          const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n          const parts = drawTextOnPath(\n            pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            let c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case CanvasInstruction.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.alignFill_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case CanvasInstruction.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case CanvasInstruction.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\nCanvasReplay.prototype.replay = function(\n  context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n    skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replayHitDetection = function(\n  context, transform, viewRotation, skippedFeaturesHash,\n  opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n    this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\nCanvasReplay.prototype.reverseHitDetectionInstructions = function() {\n  const hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  let i;\n  const n = hitDetectionInstructions.length;\n  let instruction;\n  let type;\n  let begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    if (type == CanvasInstruction.END_GEOMETRY) {\n      begin = i;\n    } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const state = this.state;\n  if (fillStyle) {\n    const fillStyleColor = fillStyle.getColor();\n    state.fillStyle = asColorLike(fillStyleColor ?\n      fillStyleColor : defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    const strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = asColorLike(strokeStyleColor ?\n      strokeStyleColor : defaultStrokeStyle);\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : defaultLineCap;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : defaultLineDash;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : defaultLineDashOffset;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : defaultLineJoin;\n    const strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : defaultLineWidth;\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @return {Array.<*>} Fill instruction.\n */\nCanvasReplay.prototype.createFill = function(state, geometry) {\n  const fillStyle = state.fillStyle;\n  const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    // Fill is a pattern or gradient - align it!\n    fillInstruction.push(true);\n  }\n  return fillInstruction;\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n */\nCanvasReplay.prototype.applyStroke = function(state) {\n  this.instructions.push(this.createStroke(state));\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @return {Array.<*>} Stroke instruction.\n */\nCanvasReplay.prototype.createStroke = function(state) {\n  return [\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ];\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasReplay.prototype.updateFillStyle = function(state, createFill, geometry) {\n  const fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    if (fillStyle !== undefined) {\n      this.instructions.push(createFill.call(this, state, geometry));\n    }\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n */\nCanvasReplay.prototype.updateStrokeStyle = function(state, applyStroke) {\n  const strokeStyle = state.strokeStyle;\n  const lineCap = state.lineCap;\n  const lineDash = state.lineDash;\n  const lineDashOffset = state.lineDashOffset;\n  const lineJoin = state.lineJoin;\n  const lineWidth = state.lineWidth;\n  const miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    if (strokeStyle !== undefined) {\n      applyStroke.call(this, state);\n    }\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {module:ol/extent~Extent} The buffered rendering extent.\n * @protected\n */\nCanvasReplay.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      const width = this.resolution * (this.maxLineWidth + 1) / 2;\n      buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasImageReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\ninherits(CanvasImageReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\nCanvasImageReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  const anchor = imageStyle.getAnchor();\n  const size = imageStyle.getSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const image = imageStyle.getImage(1);\n  const origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasLineStringReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasLineStringReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\nCanvasLineStringReplay.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  const myBegin = this.coordinates.length;\n  const myEnd = this.appendFlatCoordinates(\n    flatCoordinates, offset, end, stride, false, false);\n  const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const ends = multiLineStringGeometry.getEnds();\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.finish = function() {\n  const state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasLineStringReplay.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  CanvasReplay.prototype.applyStroke.call(this, state);\n  this.instructions.push(beginPathInstruction);\n};\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {inherits} from '../../util.js';\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasPolygonReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasPolygonReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  const state = this.state;\n  const fill = state.fillStyle !== undefined;\n  const stroke = state.strokeStyle != undefined;\n  const numEnds = ends.length;\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (let i = 0; i < numEnds; ++i) {\n    const end = ends[i];\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  if (fill) {\n    this.instructions.push(fillInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n  }\n  if (stroke) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const flatCoordinates = circleGeometry.getFlatCoordinates();\n  const stride = circleGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const ends = polygonGeometry.getEnds();\n  const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  const stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const endss = multiPolygonGeometry.getEndss();\n  const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  const stride = multiPolygonGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  const tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    const coordinates = this.coordinates;\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasPolygonReplay.prototype.setFillStrokeStyles_ = function(geometry) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.createFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasTextReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~FillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~TextState}\n   */\n  this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~TextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  labelCache.prune();\n\n};\n\ninherits(CanvasTextReplay, CanvasReplay);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.drawText = function(geometry, feature) {\n  const fillState = this.textFillState_;\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  let begin = this.coordinates.length;\n\n  const geometryType = geometry.getType();\n  let flatCoordinates = null;\n  let end = 2;\n  let stride = 2;\n  let i, ii;\n\n  if (textState.placement === TextPlacement.LINE) {\n    if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    let ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == GeometryType.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == GeometryType.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == GeometryType.MULTI_POLYGON) {\n      const endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    const textAlign = textState.textAlign;\n    let flatOffset = 0;\n    let flatEnd;\n    for (let o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    const width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      if (textState.backgroundFill) {\n        this.updateFillStyle(this.state, this.createFill, geometry);\n        this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n      }\n      if (textState.backgroundStroke) {\n        this.updateStrokeStyle(this.state, this.applyStroke);\n        this.hitDetectionInstructions.push(this.createStroke(this.state));\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\nCanvasTextReplay.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  let label;\n  const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  if (!labelCache.containsKey(key)) {\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    const textState = this.textStates[textKey] || this.textState_;\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align =  TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = (width + strokeWidth);\n    const context = createCanvasContext2D(\n      Math.ceil(renderWidth * scale),\n      Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth;\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    const leftRight = (0.5 - align);\n    const x = align * label.width / scale + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\nCanvasTextReplay.prototype.drawTextImage_ = function(label, begin, end) {\n  const textState = this.textState_;\n  const strokeState = this.textStrokeState_;\n  const pixelRatio = this.pixelRatio;\n  const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n  const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == defaultPadding ?\n      defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n */\nCanvasTextReplay.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  const fillState = this.textFillState_;\n\n  const strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  const textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  const fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  const pixelRatio = this.pixelRatio;\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n\n  const offsetY = this.textOffsetY_ * pixelRatio;\n  const text = this.text_;\n  const font = textState.font;\n  const textScale = textState.scale;\n  const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  let widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  let textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n      }\n      fillState.fillStyle = asColorLike(\n        textFillStyle.getColor() || defaultFillStyle);\n    }\n\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n      }\n      const lineDash = textStrokeStyle.getLineDash();\n      const lineDashOffset = textStrokeStyle.getLineDashOffset();\n      const lineWidth = textStrokeStyle.getWidth();\n      const miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = asColorLike(\n        textStrokeStyle.getColor() || defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    const font = textStyle.getFont() || defaultFont;\n    checkFont(font);\n    const textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default CanvasTextReplay;\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport {inherits} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nconst CanvasReplayGroup = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.hitDetectionTransform_ = createTransform();\n};\n\ninherits(CanvasReplayGroup, ReplayGroup);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n */\nCanvasReplayGroup.prototype.addDeclutter = function(group) {\n  let declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n */\nCanvasReplayGroup.prototype.clip = function(context, transform) {\n  const flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\nCanvasReplayGroup.prototype.hasReplays = function(replays) {\n  for (const zIndex in this.replaysByZIndex_) {\n    const candidates = this.replaysByZIndex_[zIndex];\n    for (let i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplayGroup.prototype.finish = function() {\n  for (const zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  const contextSize = hitTolerance * 2 + 1;\n  const transform = composeTransform(this.hitDetectionTransform_,\n    hitTolerance + 0.5, hitTolerance + 0.5,\n    1 / resolution, -1 / resolution,\n    -rotation,\n    -coordinate[0], -coordinate[1]);\n  const context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = createEmpty();\n    extendCoordinate(hitExtent, coordinate);\n    buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  const mask = getCircleArray(hitTolerance);\n  let declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  let replayType;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (let i = 0; i < contextSize; i++) {\n      for (let j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            let result;\n            if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replayType = ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n            skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/transform~Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\nCanvasReplayGroup.prototype.getClipCoords = function(transform) {\n  const maxExtent = this.maxExtent_;\n  const minX = maxExtent[0];\n  const minY = maxExtent[1];\n  const maxX = maxExtent[2];\n  const maxY = maxExtent[3];\n  const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  transform2D(\n    flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n */\nCanvasReplayGroup.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n *     Default is {@link module:ol/render/replay~ORDER}\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n */\nCanvasReplayGroup.prototype.replay = function(context,\n  transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      const replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst CanvasVectorLayerRenderer = function(vectorLayer) {\n\n  CanvasLayerRenderer.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = createCanvasContext2D();\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorLayerRenderer, CanvasLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n */\nCanvasVectorLayerRenderer.prototype.compose = function(context, frameState, layerState) {\n  const extent = frameState.extent;\n  const pixelRatio = frameState.pixelRatio;\n  const skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const rotation = viewState.rotation;\n  const projectionExtent = projection.getExtent();\n  const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n  let transform = this.getTransform(frameState, 0);\n\n  // clipped rendering if layer extent is set\n  const clipExtent = layerState.extent;\n  const clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {module:ol/extent~Extent} */ (clipExtent));\n  }\n  const replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    let drawOffsetX = 0;\n    let drawOffsetY = 0;\n    let replayContext;\n    const transparentLayer = layerState.opacity !== 1;\n    const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      let drawWidth = context.canvas.width;\n      let drawHeight = context.canvas.height;\n      if (rotation) {\n        const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    const alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    rotateAtOffset(replayContext, -rotation,\n      width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n    }\n    rotateAtOffset(replayContext, rotation,\n      width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        const mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  const transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform);\n  this.compose(context, frameState, layerState);\n  this.postCompose(context, frameState, layerState, transform);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n  const projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    const worldWidth = getWidth(projectionExtent);\n    const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - gutter;\n    extent[2] = projectionExtent[2] + gutter;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  const replayGroup = new CanvasReplayGroup(\n    getRenderTolerance(resolution, pixelRatio), extent, resolution,\n    pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/canvas/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/TileLayer}\n * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n * @api\n */\nconst CanvasVectorTileLayerRenderer = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  CanvasTileLayerRenderer.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpTransform_ = createTransform();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorTileLayerRenderer, CanvasTileLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n  if (tile.getState() === TileState.LOADED) {\n    this.createReplayGroup_(tile, pixelRatio, projection);\n    if (this.context) {\n      this.renderTileImage_(tile, pixelRatio, projection);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const layer = this.getLayer();\n  const layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    const renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n    if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function(tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const revision = layer.getRevision();\n  const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n  const replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const sourceTileGrid = source.getTileGrid();\n  const tileGrid = source.getTileGridForProjection(projection);\n  const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  const tileExtent = tile.extent;\n\n  const zIndexKeys = {};\n  for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    const sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() != TileState.LOADED) {\n      continue;\n    }\n\n    const sourceTileCoord = sourceTile.tileCoord;\n    const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n    const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n      buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n    const tileProjection = sourceTile.getProjection();\n    let reproject = false;\n    if (!equivalentProjection(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n      pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorTileLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    const features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        render.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (const r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  const layer = this.getLayer();\n  /** @type {!Object.<string, boolean>} */\n  const features = {};\n\n  /** @type {Array.<module:ol/VectorImageTile>} */\n  const renderedTiles = this.renderedTiles;\n\n  let bufferedExtent, found;\n  let i, ii, replayGroup;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    const tile = renderedTiles[i];\n    bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n    if (!containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {module:ol/VectorTile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {module:ol/transform~Transform} transform Transform.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function(tile, frameState) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const tileGrid = source.getTileGrid();\n  const tileCoord = tile.tileCoord;\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const renderResolution = viewState.resolution / pixelRatio;\n  const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  const center = viewState.center;\n  const origin = getTopLeft(tileExtent);\n  const size = frameState.size;\n  const offsetX = Math.round(pixelRatio * size[0] / 2);\n  const offsetY = Math.round(pixelRatio * size[1] / 2);\n  return composeTransform(this.tmpTransform_,\n    offsetX, offsetY,\n    tileResolution / renderResolution, tileResolution / renderResolution,\n    viewState.rotation,\n    (origin[0] - center[0]) / tileResolution,\n    (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.postCompose = function(context, frameState, layerState) {\n  const layer = this.getLayer();\n  const renderMode = layer.getRenderMode();\n  if (renderMode != VectorTileRenderType.IMAGE) {\n    const declutterReplays = layer.getDeclutter() ? {} : null;\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const pixelRatio = frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    const size = frameState.size;\n    let offsetX, offsetY;\n    if (rotation) {\n      offsetX = Math.round(pixelRatio * size[0] / 2);\n      offsetY = Math.round(pixelRatio * size[1] / 2);\n      rotateAtOffset(context, -rotation, offsetX, offsetY);\n    }\n    if (declutterReplays) {\n      this.declutterTree_.clear();\n    }\n    const tiles = this.renderedTiles;\n    const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    const clips = [];\n    const zs = [];\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n      if (tile.getState() == TileState.ABORT) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n      const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n      let transform = undefined;\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n        if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n          // sourceTile was not yet loaded when this.createReplayGroup_() was\n          // called, or it has no replays of the types we want to render\n          continue;\n        }\n        if (!transform) {\n          transform = this.getTransform(frameState, worldOffset);\n        }\n        const currentZ = sourceTile.tileCoord[0];\n        const currentClip = replayGroup.getClipCoords(transform);\n        context.save();\n        context.globalAlpha = layerState.opacity;\n        // Create a clip mask for regions in this low resolution tile that are\n        // already filled by a higher resolution tile\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          const clip = clips[j];\n          if (currentZ < zs[j]) {\n            context.beginPath();\n            // counter-clockwise (outer ring) for current tile\n            context.moveTo(currentClip[0], currentClip[1]);\n            context.lineTo(currentClip[2], currentClip[3]);\n            context.lineTo(currentClip[4], currentClip[5]);\n            context.lineTo(currentClip[6], currentClip[7]);\n            // clockwise (inner ring) for higher resolution tile\n            context.moveTo(clip[6], clip[7]);\n            context.lineTo(clip[4], clip[5]);\n            context.lineTo(clip[2], clip[3]);\n            context.lineTo(clip[0], clip[1]);\n            context.clip();\n          }\n        }\n        replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n        context.restore();\n        clips.push(currentClip);\n        zs.push(currentZ);\n      }\n    }\n    if (declutterReplays) {\n      replayDeclutter(declutterReplays, context, rotation);\n    }\n    if (rotation) {\n      rotateAtOffset(context, rotation,\n        /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n    }\n  }\n  CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorTileLayerRenderer.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i], squaredTolerance,\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles, squaredTolerance,\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function(\n  tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const replayState = tile.getReplayState(layer);\n  const revision = layer.getRevision();\n  const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      const sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const pixelScale = pixelRatio / resolution;\n      const transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/Overlay\n */\nimport {inherits} from './util.js';\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {Element} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Overlay~Options} options Overlay options.\n * @api\n */\nconst Overlay = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~Options}\n   */\n  this.options = options;\n\n  /**\n   * @protected\n   * @type {number|string|undefined}\n   */\n  this.id = options.id;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.insertFirst = options.insertFirst !== undefined ?\n    options.insertFirst : true;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = document.createElement('DIV');\n  this.element.className = options.className !== undefined ?\n    options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n  this.element.style.position = 'absolute';\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~PanOptions}\n   */\n  this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.autoPanMargin = options.autoPanMargin !== undefined ?\n    options.autoPanMargin : 20;\n\n  /**\n   * @protected\n   * @type {{bottom_: string,\n   *         left_: string,\n   *         right_: string,\n   *         top_: string,\n   *         visible: boolean}}\n   */\n  this.rendered = {\n    bottom_: '',\n    left_: '',\n    right_: '',\n    top_: '',\n    visible: true\n  };\n\n  /**\n   * @protected\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPostrenderListenerKey = null;\n\n  listen(\n    this, getChangeEventType(Property.ELEMENT),\n    this.handleElementChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.MAP),\n    this.handleMapChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.OFFSET),\n    this.handleOffsetChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITION),\n    this.handlePositionChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITIONING),\n    this.handlePositioningChanged, this);\n\n  if (options.element !== undefined) {\n    this.setElement(options.element);\n  }\n\n  this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n  this.setPositioning(options.positioning !== undefined ?\n    /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n    OverlayPositioning.TOP_LEFT);\n\n  if (options.position !== undefined) {\n    this.setPosition(options.position);\n  }\n\n};\n\ninherits(Overlay, BaseObject);\n\n\n/**\n * Get the DOM element of this overlay.\n * @return {Element|undefined} The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.getElement = function() {\n  return /** @type {Element|undefined} */ (this.get(Property.ELEMENT));\n};\n\n\n/**\n * Get the overlay identifier which is set on constructor.\n * @return {number|string|undefined} Id.\n * @api\n */\nOverlay.prototype.getId = function() {\n  return this.id;\n};\n\n\n/**\n * Get the map associated with this overlay.\n * @return {module:ol/PluggableMap|undefined} The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.getMap = function() {\n  return (\n    /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n  );\n};\n\n\n/**\n * Get the offset of this overlay.\n * @return {Array.<number>} The offset.\n * @observable\n * @api\n */\nOverlay.prototype.getOffset = function() {\n  return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n};\n\n\n/**\n * Get the current position of this overlay.\n * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n *     anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n  );\n};\n\n\n/**\n * Get the current positioning of this overlay.\n * @return {module:ol/OverlayPositioning} How the overlay is positioned\n *     relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.getPositioning = function() {\n  return (\n    /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n  );\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleElementChanged = function() {\n  removeChildren(this.element);\n  const element = this.getElement();\n  if (element) {\n    this.element.appendChild(element);\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleMapChanged = function() {\n  if (this.mapPostrenderListenerKey) {\n    removeNode(this.element);\n    unlistenByKey(this.mapPostrenderListenerKey);\n    this.mapPostrenderListenerKey = null;\n  }\n  const map = this.getMap();\n  if (map) {\n    this.mapPostrenderListenerKey = listen(map,\n      MapEventType.POSTRENDER, this.render, this);\n    this.updatePixelPosition();\n    const container = this.stopEvent ?\n      map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n    if (this.insertFirst) {\n      container.insertBefore(this.element, container.childNodes[0] || null);\n    } else {\n      container.appendChild(this.element);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.render = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleOffsetChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositionChanged = function() {\n  this.updatePixelPosition();\n  if (this.get(Property.POSITION) && this.autoPan) {\n    this.panIntoView();\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositioningChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * Set the DOM element to be associated with this overlay.\n * @param {Element|undefined} element The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.setElement = function(element) {\n  this.set(Property.ELEMENT, element);\n};\n\n\n/**\n * Set the map to be associated with this overlay.\n * @param {module:ol/PluggableMap|undefined} map The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.setMap = function(map) {\n  this.set(Property.MAP, map);\n};\n\n\n/**\n * Set the offset for this overlay.\n * @param {Array.<number>} offset Offset.\n * @observable\n * @api\n */\nOverlay.prototype.setOffset = function(offset) {\n  this.set(Property.OFFSET, offset);\n};\n\n\n/**\n * Set the position for this overlay. If the position is `undefined` the\n * overlay is hidden.\n * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n *     is anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.setPosition = function(position) {\n  this.set(Property.POSITION, position);\n};\n\n\n/**\n * Pan the map so that the overlay is entirely visible in the current viewport\n * (if necessary).\n * @protected\n */\nOverlay.prototype.panIntoView = function() {\n  const map = this.getMap();\n\n  if (!map || !map.getTargetElement()) {\n    return;\n  }\n\n  const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n  const element = /** @type {!Element} */ (this.getElement());\n  const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n  const margin = this.autoPanMargin;\n  if (!containsExtent(mapRect, overlayRect)) {\n    // the overlay is not completely inside the viewport, so pan the map\n    const offsetLeft = overlayRect[0] - mapRect[0];\n    const offsetRight = mapRect[2] - overlayRect[2];\n    const offsetTop = overlayRect[1] - mapRect[1];\n    const offsetBottom = mapRect[3] - overlayRect[3];\n\n    const delta = [0, 0];\n    if (offsetLeft < 0) {\n      // move map to the left\n      delta[0] = offsetLeft - margin;\n    } else if (offsetRight < 0) {\n      // move map to the right\n      delta[0] = Math.abs(offsetRight) + margin;\n    }\n    if (offsetTop < 0) {\n      // move map up\n      delta[1] = offsetTop - margin;\n    } else if (offsetBottom < 0) {\n      // move map down\n      delta[1] = Math.abs(offsetBottom) + margin;\n    }\n\n    if (delta[0] !== 0 || delta[1] !== 0) {\n      const center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n      const centerPx = map.getPixelFromCoordinate(center);\n      const newCenterPx = [\n        centerPx[0] + delta[0],\n        centerPx[1] + delta[1]\n      ];\n\n      map.getView().animate({\n        center: map.getCoordinateFromPixel(newCenterPx),\n        duration: this.autoPanAnimation.duration,\n        easing: this.autoPanAnimation.easing\n      });\n    }\n  }\n};\n\n\n/**\n * Get the extent of an element relative to the document\n * @param {Element|undefined} element The element.\n * @param {module:ol/size~Size|undefined} size The size of the element.\n * @return {module:ol/extent~Extent} The extent.\n * @protected\n */\nOverlay.prototype.getRect = function(element, size) {\n  const box = element.getBoundingClientRect();\n  const offsetX = box.left + window.pageXOffset;\n  const offsetY = box.top + window.pageYOffset;\n  return [\n    offsetX,\n    offsetY,\n    offsetX + size[0],\n    offsetY + size[1]\n  ];\n};\n\n\n/**\n * Set the positioning for this overlay.\n * @param {module:ol/OverlayPositioning} positioning how the overlay is\n *     positioned relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.setPositioning = function(positioning) {\n  this.set(Property.POSITIONING, positioning);\n};\n\n\n/**\n * Modify the visibility of the element.\n * @param {boolean} visible Element visibility.\n * @protected\n */\nOverlay.prototype.setVisible = function(visible) {\n  if (this.rendered.visible !== visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.rendered.visible = visible;\n  }\n};\n\n\n/**\n * Update pixel position.\n * @protected\n */\nOverlay.prototype.updatePixelPosition = function() {\n  const map = this.getMap();\n  const position = this.getPosition();\n  if (!map || !map.isRendered() || !position) {\n    this.setVisible(false);\n    return;\n  }\n\n  const pixel = map.getPixelFromCoordinate(position);\n  const mapSize = map.getSize();\n  this.updateRenderedPosition(pixel, mapSize);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel The pixel location.\n * @param {module:ol/size~Size|undefined} mapSize The map size.\n * @protected\n */\nOverlay.prototype.updateRenderedPosition = function(pixel, mapSize) {\n  const style = this.element.style;\n  const offset = this.getOffset();\n\n  const positioning = this.getPositioning();\n\n  this.setVisible(true);\n\n  let offsetX = offset[0];\n  let offsetY = offset[1];\n  if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT) {\n    if (this.rendered.left_ !== '') {\n      this.rendered.left_ = style.left = '';\n    }\n    const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n    if (this.rendered.right_ != right) {\n      this.rendered.right_ = style.right = right;\n    }\n  } else {\n    if (this.rendered.right_ !== '') {\n      this.rendered.right_ = style.right = '';\n    }\n    if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.TOP_CENTER) {\n      offsetX -= this.element.offsetWidth / 2;\n    }\n    const left = Math.round(pixel[0] + offsetX) + 'px';\n    if (this.rendered.left_ != left) {\n      this.rendered.left_ = style.left = left;\n    }\n  }\n  if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT) {\n    if (this.rendered.top_ !== '') {\n      this.rendered.top_ = style.top = '';\n    }\n    const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n    if (this.rendered.bottom_ != bottom) {\n      this.rendered.bottom_ = style.bottom = bottom;\n    }\n  } else {\n    if (this.rendered.bottom_ !== '') {\n      this.rendered.bottom_ = style.bottom = '';\n    }\n    if (positioning == OverlayPositioning.CENTER_LEFT ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.CENTER_RIGHT) {\n      offsetY -= this.element.offsetHeight / 2;\n    }\n    const top = Math.round(pixel[1] + offsetY) + 'px';\n    if (this.rendered.top_ != top) {\n      this.rendered.top_ = style.top = top;\n    }\n  }\n};\n\n\n/**\n * returns the options this Overlay has been created with\n * @return {module:ol/Overlay~Options} overlay options\n */\nOverlay.prototype.getOptions = function() {\n  return this.options;\n};\n\nexport default Overlay;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport {inherits} from './util.js';\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {module:ol/structs/LRUCache.<module:ol/Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nconst TileCache = function(opt_highWaterMark) {\n\n  LRUCache.call(this, opt_highWaterMark);\n\n};\n\ninherits(TileCache, LRUCache);\n\n\n/**\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileCache.prototype.expireCache = function(usedTiles) {\n  while (this.canExpireCache()) {\n    const tile = this.peekLast();\n    const zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\nTileCache.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  const key = this.peekFirstKey();\n  const tileCoord = fromKey(key);\n  const z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default TileCache;\n","/**\n * @module ol/VectorImageTile\n */\nimport {getUid, inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {UNDEFINED} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {number} sourceRevision Source revision.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/tilecoord~TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile url function.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Tile grid of the source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid of the renderer.\n * @param {Object.<string, module:ol/VectorTile>} sourceTiles Source tiles.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n *     module:ol/format/Feature, module:ol/Tile~LoadFunction)} tileClass Class to\n *     instantiate for source tiles.\n * @param {function(this: module:ol/source/VectorTile, module:ol/events/Event)} handleTileChange\n *     Function to call when a source tile's state changes.\n * @param {number} zoom Integer zoom to render the tile for.\n */\nconst VectorImageTile = function(tileCoord, state, sourceRevision, format,\n  tileLoadFunction, urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid,\n  sourceTiles, pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n  Tile.call(this, tileCoord, state, {transition: 0});\n\n  /**\n   * @private\n   * @type {!Object.<string, CanvasRenderingContext2D>}\n   */\n  this.context_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/VectorImageTile~ReplayState>}\n   */\n  this.replayState_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/VectorTile>}\n   */\n  this.sourceTiles_ = sourceTiles;\n\n  /**\n   * Keys of source tiles used by this tile. Use with {@link #getTile}.\n   * @type {Array.<string>}\n   */\n  this.tileKeys = [];\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = null;\n\n  /**\n   * @type {number}\n   */\n  this.sourceRevision_ = sourceRevision;\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord = urlTileCoord;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.loadListenerKeys_ = [];\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourceTileListenerKeys_ = [];\n\n  if (urlTileCoord) {\n    const extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n    const resolution = tileGrid.getResolution(zoom);\n    const sourceZ = sourceTileGrid.getZForResolution(resolution);\n    const useLoadedOnly = zoom != tileCoord[0];\n    let loadCount = 0;\n    sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n      let sharedExtent = getIntersection(extent,\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n      }\n      if (getWidth(sharedExtent) / resolution >= 0.5 &&\n          getHeight(sharedExtent) / resolution >= 0.5) {\n        // only include source tile if overlap is at least 1 pixel\n        ++loadCount;\n        const sourceTileKey = sourceTileCoord.toString();\n        let sourceTile = sourceTiles[sourceTileKey];\n        if (!sourceTile && !useLoadedOnly) {\n          const tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n          sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n            tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n            tileUrl == undefined ? '' : tileUrl,\n            format, tileLoadFunction);\n          this.sourceTileListenerKeys_.push(\n            listen(sourceTile, EventType.CHANGE, handleTileChange));\n        }\n        if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n          sourceTile.consumers++;\n          this.tileKeys.push(sourceTileKey);\n        }\n      }\n    }.bind(this));\n\n    if (useLoadedOnly && loadCount == this.tileKeys.length) {\n      this.finishLoading_();\n    }\n\n    if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n      while (zoom > tileGrid.getMinZoom()) {\n        const tile = new VectorImageTile(tileCoord, state, sourceRevision,\n          format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n          sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n          tileClass, UNDEFINED, --zoom);\n        if (tile.state == TileState.LOADED) {\n          this.interimTile = tile;\n          break;\n        }\n      }\n    }\n  }\n\n};\n\ninherits(VectorImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.disposeInternal = function() {\n  this.state = TileState.ABORT;\n  this.changed();\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n\n  for (let i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n    const sourceTileKey = this.tileKeys[i];\n    const sourceTile = this.getTile(sourceTileKey);\n    sourceTile.consumers--;\n    if (sourceTile.consumers == 0) {\n      delete this.sourceTiles_[sourceTileKey];\n      sourceTile.dispose();\n    }\n  }\n  this.tileKeys.length = 0;\n  this.sourceTiles_ = null;\n  this.loadListenerKeys_.forEach(unlistenByKey);\n  this.loadListenerKeys_.length = 0;\n  this.sourceTileListenerKeys_.forEach(unlistenByKey);\n  this.sourceTileListenerKeys_.length = 0;\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {CanvasRenderingContext2D} The rendering context.\n */\nVectorImageTile.prototype.getContext = function(layer) {\n  const key = getUid(layer).toString();\n  if (!(key in this.context_)) {\n    this.context_[key] = createCanvasContext2D();\n  }\n  return this.context_[key];\n};\n\n\n/**\n * Get the Canvas for this tile.\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {HTMLCanvasElement} Canvas.\n */\nVectorImageTile.prototype.getImage = function(layer) {\n  return this.getReplayState(layer).renderedTileRevision == -1 ?\n    null : this.getContext(layer).canvas;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n */\nVectorImageTile.prototype.getReplayState = function(layer) {\n  const key = getUid(layer).toString();\n  if (!(key in this.replayState_)) {\n    this.replayState_[key] = {\n      dirty: false,\n      renderedRenderOrder: null,\n      renderedRevision: -1,\n      renderedTileRevision: -1\n    };\n  }\n  return this.replayState_[key];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.getKey = function() {\n  return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n};\n\n\n/**\n * @param {string} tileKey Key (tileCoord) of the source tile.\n * @return {module:ol/VectorTile} Source tile.\n */\nVectorImageTile.prototype.getTile = function(tileKey) {\n  return this.sourceTiles_[tileKey];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.load = function() {\n  // Source tiles with LOADED state - we just count them because once they are\n  // loaded, we're no longer listening to state changes.\n  let leftToLoad = 0;\n  // Source tiles with ERROR state - we track them because they can still have\n  // an ERROR state after another load attempt.\n  const errorSourceTiles = {};\n\n  if (this.state == TileState.IDLE) {\n    this.setState(TileState.LOADING);\n  }\n  if (this.state == TileState.LOADING) {\n    this.tileKeys.forEach(function(sourceTileKey) {\n      const sourceTile = this.getTile(sourceTileKey);\n      if (sourceTile.state == TileState.IDLE) {\n        sourceTile.setLoader(this.loader_);\n        sourceTile.load();\n      }\n      if (sourceTile.state == TileState.LOADING) {\n        const key = listen(sourceTile, EventType.CHANGE, function(e) {\n          const state = sourceTile.getState();\n          if (state == TileState.LOADED ||\n              state == TileState.ERROR) {\n            const uid = getUid(sourceTile);\n            if (state == TileState.ERROR) {\n              errorSourceTiles[uid] = true;\n            } else {\n              --leftToLoad;\n              delete errorSourceTiles[uid];\n            }\n            if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n              this.finishLoading_();\n            }\n          }\n        }.bind(this));\n        this.loadListenerKeys_.push(key);\n        ++leftToLoad;\n      }\n    }.bind(this));\n  }\n  if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n    setTimeout(this.finishLoading_.bind(this), 0);\n  }\n};\n\n\n/**\n * @private\n */\nVectorImageTile.prototype.finishLoading_ = function() {\n  let loaded = this.tileKeys.length;\n  let empty = 0;\n  for (let i = loaded - 1; i >= 0; --i) {\n    const state = this.getTile(this.tileKeys[i]).getState();\n    if (state != TileState.LOADED) {\n      --loaded;\n    }\n    if (state == TileState.EMPTY) {\n      ++empty;\n    }\n  }\n  if (loaded == this.tileKeys.length) {\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.setState(TileState.LOADED);\n  } else {\n    this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n  }\n};\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n","/**\n * @module ol/VectorTile\n */\nimport {getUid, inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Data source url.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst VectorTile = function(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @type {number}\n   */\n  this.consumers = 0;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature}\n   */\n  this.format_ = format;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/Feature>}\n   */\n  this.features_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_;\n\n  /**\n   * Data projection\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/render/ReplayGroup>}\n   */\n  this.replayGroups_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.url_ = src;\n\n};\n\ninherits(VectorTile, Tile);\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nconst DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.disposeInternal = function() {\n  this.features_ = null;\n  this.replayGroups_ = {};\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Gets the extent of the vector tile.\n * @return {module:ol/extent~Extent} The extent.\n * @api\n */\nVectorTile.prototype.getExtent = function() {\n  return this.extent_ || DEFAULT_EXTENT;\n};\n\n\n/**\n * Get the feature format assigned for reading this tile's features.\n * @return {module:ol/format/Feature} Feature format.\n * @api\n */\nVectorTile.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Get the features for this tile. Geometries will be in the projection returned\n * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} Features.\n * @api\n */\nVectorTile.prototype.getFeatures = function() {\n  return this.features_;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getKey = function() {\n  return this.url_;\n};\n\n\n/**\n * Get the feature projection of features returned by\n * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n * @return {module:ol/proj/Projection} Feature projection.\n * @api\n */\nVectorTile.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @param {string} key Key.\n * @return {module:ol/render/ReplayGroup} Replay group.\n */\nVectorTile.prototype.getReplayGroup = function(layer, key) {\n  return this.replayGroups_[getUid(layer) + ',' + key];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.setState(TileState.LOADING);\n    this.tileLoadFunction_(this, this.url_);\n    this.loader_(null, NaN, null);\n  }\n};\n\n\n/**\n * Handler for successful tile load.\n * @param {Array.<module:ol/Feature>} features The loaded features.\n * @param {module:ol/proj/Projection} dataProjection Data projection.\n * @param {module:ol/extent~Extent} extent Extent.\n */\nVectorTile.prototype.onLoad = function(features, dataProjection, extent) {\n  this.setProjection(dataProjection);\n  this.setFeatures(features);\n  this.setExtent(extent);\n};\n\n\n/**\n * Handler for tile load errors.\n */\nVectorTile.prototype.onError = function() {\n  this.setState(TileState.ERROR);\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n * for tiles in projections with `tile-pixels` as units. The extent should be\n * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n * calculated by multiplying the tile size with the tile pixel ratio. For\n * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n * extent. The default is `[0, 0, 4096, 4096]`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @api\n */\nVectorTile.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n * Sets the features for the tile.\n * @param {Array.<module:ol/Feature>} features Features.\n * @api\n */\nVectorTile.prototype.setFeatures = function(features) {\n  this.features_ = features;\n  this.setState(TileState.LOADED);\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n * Sets the projection of the features that were added with\n * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n * @param {module:ol/proj/Projection} projection Feature projection.\n * @api\n */\nVectorTile.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @param {string} key Key.\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n */\nVectorTile.prototype.setReplayGroup = function(layer, key, replayGroup) {\n  this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n};\n\n\n/**\n * Set the feature loader for reading this tile's features.\n * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n * @api\n */\nVectorTile.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorTile;\n","/**\n * @module ol/control/FullScreen\n */\nimport {inherits} from '../util.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nconst getChangeType = (function() {\n  let changeType;\n  return function() {\n    if (!changeType) {\n      const body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Element} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {Element|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/FullScreen~Options=} opt_options Options.\n * @api\n */\nconst FullScreen = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.cssClassName_ = options.className !== undefined ? options.className :\n    'ol-full-screen';\n\n  const label = options.label !== undefined ? options.label : '\\u2922';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelNode_ = typeof label === 'string' ?\n    document.createTextNode(label) : label;\n\n  const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelActiveNode_ = typeof labelActive === 'string' ?\n    document.createTextNode(labelActive) : labelActive;\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n  const button = document.createElement('button');\n  button.className = this.cssClassName_ + '-' + isFullScreen();\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.labelNode_);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n      ' ' + CLASS_CONTROL + ' ' +\n      (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.keys_ = options.keys !== undefined ? options.keys : false;\n\n  /**\n   * @private\n   * @type {Element|string|undefined}\n   */\n  this.source_ = options.source;\n\n};\n\ninherits(FullScreen, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nFullScreen.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleFullScreen_();\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreen_ = function() {\n  if (!isFullScreenSupported()) {\n    return;\n  }\n  const map = this.getMap();\n  if (!map) {\n    return;\n  }\n  if (isFullScreen()) {\n    exitFullScreen();\n  } else {\n    let element;\n    if (this.source_) {\n      element = typeof this.source_ === 'string' ?\n        document.getElementById(this.source_) :\n        this.source_;\n    } else {\n      element = map.getTargetElement();\n    }\n    if (this.keys_) {\n      requestFullScreenWithKeys(element);\n\n    } else {\n      requestFullScreen(element);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreenChange_ = function() {\n  const button = this.element.firstElementChild;\n  const map = this.getMap();\n  if (isFullScreen()) {\n    button.className = this.cssClassName_ + '-true';\n    replaceNode(this.labelActiveNode_, this.labelNode_);\n  } else {\n    button.className = this.cssClassName_ + '-false';\n    replaceNode(this.labelNode_, this.labelActiveNode_);\n  }\n  if (map) {\n    map.updateSize();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nFullScreen.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    this.listenerKeys.push(listen(document,\n      getChangeType(),\n      this.handleFullScreenChange_, this)\n    );\n  }\n};\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/OverviewMap\n */\nimport {inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|Element} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|Element} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/OverviewMap~Options=} opt_options OverviewMap options.\n * @api\n */\nconst OverviewMap = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.ovmapDiv_ = document.createElement('DIV');\n  this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n  /**\n   * @type {module:ol/Map}\n   * @private\n   */\n  this.ovmap_ = new Map({\n    controls: new Collection(),\n    interactions: new Collection(),\n    view: options.view\n  });\n  const ovmap = this.ovmap_;\n\n  if (options.layers) {\n    options.layers.forEach(\n      /**\n       * @param {module:ol/layer/Layer} layer Layer.\n       */\n      (function(layer) {\n        ovmap.addLayer(layer);\n      }).bind(this));\n  }\n\n  const box = document.createElement('DIV');\n  box.className = 'ol-overviewmap-box';\n  box.style.boxSizing = 'border-box';\n\n  /**\n   * @type {module:ol/Overlay}\n   * @private\n   */\n  this.boxOverlay_ = new Overlay({\n    position: [0, 0],\n    positioning: OverlayPositioning.BOTTOM_LEFT,\n    element: box\n  });\n  this.ovmap_.addOverlay(this.boxOverlay_);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ovmapDiv_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /* Interactive map */\n\n  const scope = this;\n\n  const overlay = this.boxOverlay_;\n  const overlayBox = this.boxOverlay_.getElement();\n\n  /* Functions definition */\n\n  const computeDesiredMousePosition = function(mousePosition) {\n    return {\n      clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n      clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n    };\n  };\n\n  const move = function(event) {\n    const coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n    overlay.setPosition(coordinates);\n  };\n\n  const endMoving = function(event) {\n    const coordinates = ovmap.getEventCoordinate(event);\n\n    scope.getMap().getView().setCenter(coordinates);\n\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', endMoving);\n  };\n\n  /* Binding */\n\n  overlayBox.addEventListener('mousedown', function() {\n    window.addEventListener('mousemove', move);\n    window.addEventListener('mouseup', endMoving);\n  });\n};\n\ninherits(OverviewMap, Control);\n\n\n/**\n * @inheritDoc\n * @api\n */\nOverviewMap.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  if (map === oldMap) {\n    return;\n  }\n  if (oldMap) {\n    const oldView = oldMap.getView();\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    this.ovmap_.setTarget(null);\n  }\n  Control.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.ovmap_.setTarget(this.ovmapDiv_);\n    this.listenerKeys.push(listen(\n      map, ObjectEventType.PROPERTYCHANGE,\n      this.handleMapPropertyChange_, this));\n\n    // TODO: to really support map switching, this would need to be reworked\n    if (this.ovmap_.getLayers().getLength() === 0) {\n      this.ovmap_.setLayerGroup(map.getLayerGroup());\n    }\n\n    const view = map.getView();\n    if (view) {\n      this.bindView_(view);\n      if (view.isDef()) {\n        this.ovmap_.updateSize();\n        this.resetExtent_();\n      }\n    }\n  }\n};\n\n\n/**\n * Handle map property changes.  This only deals with changes to the map's view.\n * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n * @private\n */\nOverviewMap.prototype.handleMapPropertyChange_ = function(event) {\n  if (event.key === MapProperty.VIEW) {\n    const oldView = /** @type {module:ol/View} */ (event.oldValue);\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    const newView = this.getMap().getView();\n    this.bindView_(newView);\n  }\n};\n\n\n/**\n * Register listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.bindView_ = function(view) {\n  listen(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Unregister listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.unbindView_ = function(view) {\n  unlisten(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Handle rotation changes to the main map.\n * TODO: This should rotate the extent rectrangle instead of the\n * overview map's view.\n * @private\n */\nOverviewMap.prototype.handleRotationChanged_ = function() {\n  this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n};\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\n/**\n * Reset the overview map extent if the box size (width or\n * height) is less than the size of the overview map size times minRatio\n * or is greater than the size of the overview size times maxRatio.\n *\n * If the map extent was not reset, the box size can fits in the defined\n * ratio sizes. This method then checks if is contained inside the overview\n * map current extent. If not, recenter the overview map to the current\n * main map center location.\n * @private\n */\nOverviewMap.prototype.validateExtent_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n  const ovview = ovmap.getView();\n  const ovextent = ovview.calculateExtent(ovmapSize);\n\n  const topLeftPixel =\n      ovmap.getPixelFromCoordinate(getTopLeft(extent));\n  const bottomRightPixel =\n      ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n  const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n  const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n  const ovmapWidth = ovmapSize[0];\n  const ovmapHeight = ovmapSize[1];\n\n  if (boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO) {\n    this.resetExtent_();\n  } else if (!containsExtent(ovextent, extent)) {\n    this.recenter_();\n  }\n};\n\n\n/**\n * Reset the overview map extent to half calculated min and max ratio times\n * the extent of the main map.\n * @private\n */\nOverviewMap.prototype.resetExtent_ = function() {\n  if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n    return;\n  }\n\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovview = ovmap.getView();\n\n  // get how many times the current map overview could hold different\n  // box sizes using the min and max ratio, pick the step in the middle used\n  // to calculate the extent from the main map to set it to the overview map,\n  const steps = Math.log(\n    MAX_RATIO / MIN_RATIO) / Math.LN2;\n  const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n  scaleFromCenter(extent, ratio);\n  ovview.fit(extent);\n};\n\n\n/**\n * Set the center of the overview map to the map center without changing its\n * resolution.\n * @private\n */\nOverviewMap.prototype.recenter_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  ovview.setCenter(view.getCenter());\n};\n\n\n/**\n * Update the box using the main map extent\n * @private\n */\nOverviewMap.prototype.updateBox_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  const rotation = view.getRotation();\n\n  const overlay = this.boxOverlay_;\n  const box = this.boxOverlay_.getElement();\n  const extent = view.calculateExtent(mapSize);\n  const ovresolution = ovview.getResolution();\n  const bottomLeft = getBottomLeft(extent);\n  const topRight = getTopRight(extent);\n\n  // set position using bottom left coordinates\n  const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n  overlay.setPosition(rotateBottomLeft);\n\n  // set box size calculated from map extent size and overview map resolution\n  if (box) {\n    box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n    box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n  }\n};\n\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n * @private\n */\nOverviewMap.prototype.calculateCoordinateRotate_ = function(\n  rotation, coordinate) {\n  let coordinateRotate;\n\n  const map = this.getMap();\n  const view = map.getView();\n\n  const currentCenter = view.getCenter();\n\n  if (currentCenter) {\n    coordinateRotate = [\n      coordinate[0] - currentCenter[0],\n      coordinate[1] - currentCenter[1]\n    ];\n    rotateCoordinate(coordinateRotate, rotation);\n    addCoordinate(coordinateRotate, currentCenter);\n  }\n  return coordinateRotate;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nOverviewMap.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nOverviewMap.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n\n  // manage overview map if it had not been rendered before and control\n  // is expanded\n  const ovmap = this.ovmap_;\n  if (!this.collapsed_ && !ovmap.isRendered()) {\n    ovmap.updateSize();\n    this.resetExtent_();\n    listenOnce(ovmap, MapEventType.POSTRENDER,\n      function(event) {\n        this.updateBox_();\n      },\n      this);\n  }\n};\n\n\n/**\n * Return `true` if the overview map is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the overview map should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the overview map according to the passed parameter. Will\n * not do anything if the overview map isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nOverviewMap.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Determine if the overview map is collapsed.\n * @return {boolean} The overview map is collapsed.\n * @api\n */\nOverviewMap.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\n\n\n/**\n * Return the overview map.\n * @return {module:ol/PluggableMap} Overview map.\n * @api\n */\nOverviewMap.prototype.getOverviewMap = function() {\n  return this.ovmap_;\n};\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ScaleLine~Options=} opt_options Scale line options.\n * @api\n */\nconst ScaleLine = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?module:ol/View~State}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  Control.call(this, {\n    element: this.element_,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(\n    this, getChangeEventType(UNITS_PROP),\n    this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n      Units.METRIC);\n\n};\n\ninherits(ScaleLine, Control);\n\n\n/**\n * Return the units to use in the scale line.\n * @return {module:ol/control/ScaleLine~Units|undefined} The units\n * to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.getUnits = function() {\n  return (\n    /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n  );\n};\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\n/**\n * @private\n */\nScaleLine.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.setUnits = function(units) {\n  this.set(UNITS_PROP, units);\n};\n\n\n/**\n * @private\n */\nScaleLine.prototype.updateElement_ = function() {\n  const viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const units = this.getUnits();\n  const pointResolutionUnits = units == Units.DEGREES ?\n    ProjUnits.DEGREES :\n    ProjUnits.METERS;\n  let pointResolution =\n      getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n    && pointResolutionUnits == ProjUnits.METERS) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  let nominalCount = this.minWidth_ * pointResolution;\n  let suffix = '';\n  if (units == Units.DEGREES) {\n    const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n    if (projection.getUnits() == ProjUnits.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == Units.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == Units.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == Units.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == Units.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    assert(false, 33); // Invalid units\n  }\n\n  let i = 3 * Math.floor(\n    Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  let count, width;\n  while (true) {\n    count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  const html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ZoomSlider~Options=} opt_options Zoom slider options.\n * @api\n */\nconst ZoomSlider = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * Will hold the current resolution of the view.\n   *\n   * @type {number|undefined}\n   * @private\n   */\n  this.currentResolution_ = undefined;\n\n  /**\n   * The direction of the slider. Will be determined from actual display of the\n   * container and defaults to Direction.VERTICAL.\n   *\n   * @type {Direction}\n   * @private\n   */\n  this.direction_ = Direction.VERTICAL;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.heightLimit_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.widthLimit_ = 0;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.previousX_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.previousY_;\n\n  /**\n   * The calculated thumb size (border box plus margins).  Set when initSlider_\n   * is called.\n   * @type {module:ol/size~Size}\n   * @private\n   */\n  this.thumbSize_ = null;\n\n  /**\n   * Whether the slider is initialized.\n   * @type {boolean}\n   * @private\n   */\n  this.sliderInitialized_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  const className = options.className !== undefined ? options.className : 'ol-zoomslider';\n  const thumbElement = document.createElement('button');\n  thumbElement.setAttribute('type', 'button');\n  thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n  const containerElement = document.createElement('div');\n  containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  containerElement.appendChild(thumbElement);\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.dragger_ = new PointerEventHandler(containerElement);\n\n  listen(this.dragger_, PointerEventType.POINTERDOWN,\n    this.handleDraggerStart_, this);\n  listen(this.dragger_, PointerEventType.POINTERMOVE,\n    this.handleDraggerDrag_, this);\n  listen(this.dragger_, PointerEventType.POINTERUP,\n    this.handleDraggerEnd_, this);\n\n  listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n  listen(thumbElement, EventType.CLICK, stopPropagation);\n\n  Control.call(this, {\n    element: containerElement,\n    render: options.render || render\n  });\n};\n\ninherits(ZoomSlider, Control);\n\n\n/**\n * @inheritDoc\n */\nZoomSlider.prototype.disposeInternal = function() {\n  this.dragger_.dispose();\n  Control.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nZoomSlider.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    map.render();\n  }\n};\n\n\n/**\n * Initializes the slider element. This will determine and set this controls\n * direction_ and also constrain the dragging of the thumb to always be within\n * the bounds of the container.\n *\n * @private\n */\nZoomSlider.prototype.initSlider_ = function() {\n  const container = this.element;\n  const containerSize = {\n    width: container.offsetWidth, height: container.offsetHeight\n  };\n\n  const thumb = container.firstElementChild;\n  const computedStyle = getComputedStyle(thumb);\n  const thumbWidth = thumb.offsetWidth +\n      parseFloat(computedStyle['marginRight']) +\n      parseFloat(computedStyle['marginLeft']);\n  const thumbHeight = thumb.offsetHeight +\n      parseFloat(computedStyle['marginTop']) +\n      parseFloat(computedStyle['marginBottom']);\n  this.thumbSize_ = [thumbWidth, thumbHeight];\n\n  if (containerSize.width > containerSize.height) {\n    this.direction_ = Direction.HORIZONTAL;\n    this.widthLimit_ = containerSize.width - thumbWidth;\n  } else {\n    this.direction_ = Direction.VERTICAL;\n    this.heightLimit_ = containerSize.height - thumbHeight;\n  }\n  this.sliderInitialized_ = true;\n};\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  const res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\n/**\n * @param {Event} event The browser event to handle.\n * @private\n */\nZoomSlider.prototype.handleContainerClick_ = function(event) {\n  const view = this.getMap().getView();\n\n  const relativePosition = this.getRelativePosition_(\n    event.offsetX - this.thumbSize_[0] / 2,\n    event.offsetY - this.thumbSize_[1] / 2);\n\n  const resolution = this.getResolutionForPosition_(relativePosition);\n\n  view.animate({\n    resolution: view.constrainResolution(resolution),\n    duration: this.duration_,\n    easing: easeOut\n  });\n};\n\n\n/**\n * Handle dragger start events.\n * @param {module:ol/pointer/PointerEvent} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerStart_ = function(event) {\n  if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n    this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    this.previousX_ = event.clientX;\n    this.previousY_ = event.clientY;\n    this.dragging_ = true;\n  }\n};\n\n\n/**\n * Handle dragger drag events.\n *\n * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerDrag_ = function(event) {\n  if (this.dragging_) {\n    const element = this.element.firstElementChild;\n    const deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n    const deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n    const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n    this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n    this.getMap().getView().setResolution(this.currentResolution_);\n    this.setThumbPosition_(this.currentResolution_);\n    this.previousX_ = event.clientX;\n    this.previousY_ = event.clientY;\n  }\n};\n\n\n/**\n * Handle dragger end events.\n * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerEnd_ = function(event) {\n  if (this.dragging_) {\n    const view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n\n    view.animate({\n      resolution: view.constrainResolution(this.currentResolution_),\n      duration: this.duration_,\n      easing: easeOut\n    });\n\n    this.dragging_ = false;\n    this.previousX_ = undefined;\n    this.previousY_ = undefined;\n  }\n};\n\n\n/**\n * Positions the thumb inside its container according to the given resolution.\n *\n * @param {number} res The res.\n * @private\n */\nZoomSlider.prototype.setThumbPosition_ = function(res) {\n  const position = this.getPositionForResolution_(res);\n  const thumb = this.element.firstElementChild;\n\n  if (this.direction_ == Direction.HORIZONTAL) {\n    thumb.style.left = this.widthLimit_ * position + 'px';\n  } else {\n    thumb.style.top = this.heightLimit_ * position + 'px';\n  }\n};\n\n\n/**\n * Calculates the relative position of the thumb given x and y offsets.  The\n * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n * in pixel units within the dragger limits.\n *\n * @param {number} x Pixel position relative to the left of the slider.\n * @param {number} y Pixel position relative to the top of the slider.\n * @return {number} The relative position of the thumb.\n * @private\n */\nZoomSlider.prototype.getRelativePosition_ = function(x, y) {\n  let amount;\n  if (this.direction_ === Direction.HORIZONTAL) {\n    amount = x / this.widthLimit_;\n  } else {\n    amount = y / this.heightLimit_;\n  }\n  return clamp(amount, 0, 1);\n};\n\n\n/**\n * Calculates the corresponding resolution of the thumb given its relative\n * position (where 0 is the minimum and 1 is the maximum).\n *\n * @param {number} position The relative position of the thumb.\n * @return {number} The corresponding resolution.\n * @private\n */\nZoomSlider.prototype.getResolutionForPosition_ = function(position) {\n  const fn = this.getMap().getView().getResolutionForValueFunction();\n  return fn(1 - position);\n};\n\n\n/**\n * Determines the relative position of the slider for the given resolution.  A\n * relative position of 0 corresponds to the minimum view resolution.  A\n * relative position of 1 corresponds to the maximum view resolution.\n *\n * @param {number} res The resolution.\n * @return {number} The relative position value (between 0 and 1).\n * @private\n */\nZoomSlider.prototype.getPositionForResolution_ = function(res) {\n  const fn = this.getMap().getView().getValueForResolutionFunction();\n  return 1 - fn(res);\n};\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|Element} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ZoomToExtent~Options=} opt_options Options.\n * @api\n */\nconst ZoomToExtent = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @protected\n   */\n  this.extent = options.extent ? options.extent : null;\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n  const label = options.label !== undefined ? options.label : 'E';\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(\n    typeof label === 'string' ? document.createTextNode(label) : label\n  );\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n};\n\ninherits(ZoomToExtent, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nZoomToExtent.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleZoomToExtent();\n};\n\n\n/**\n * @protected\n */\nZoomToExtent.prototype.handleZoomToExtent = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n  view.fit(extent);\n};\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/util.js';\n","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @constructor\n * @abstract\n * @param {string} source Source.\n * @struct\n */\nconst WebGLShader = function(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function() {};\n\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function() {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n","/**\n * @module ol/webgl/Fragment\n */\nimport {inherits} from '../util.js';\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\n/**\n * @constructor\n * @extends {module:ol/webgl/Shader}\n * @param {string} source Source.\n * @struct\n */\nconst WebGLFragment = function(source) {\n  WebGLShader.call(this, source);\n};\n\ninherits(WebGLFragment, WebGLShader);\n\n\n/**\n * @inheritDoc\n */\nWebGLFragment.prototype.getType = function() {\n  return FRAGMENT_SHADER;\n};\nexport default WebGLFragment;\n","/**\n * @module ol/webgl/Vertex\n */\nimport {inherits} from '../util.js';\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\n/**\n * @constructor\n * @extends {module:ol/webgl/Shader}\n * @param {string} source Source.\n * @struct\n */\nconst WebGLVertex = function(source) {\n  WebGLShader.call(this, source);\n};\n\ninherits(WebGLVertex, WebGLShader);\n\n\n/**\n * @inheritDoc\n */\nWebGLVertex.prototype.getType = function() {\n  return VERTEX_SHADER;\n};\nexport default WebGLVertex;\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/render/webgl/Replay\n */\nimport {inherits} from '../../util.js';\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLReplay = function(tolerance, maxExtent) {\n  VectorContext.call(this);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * The origin of the coordinate system for the point coordinates sent to\n   * the GPU. To eliminate jitter caused by precision problems in the GPU\n   * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n   * Engine Design for Virtual Globes\" book.\n   * @protected\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin = getCenter(maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.projectionMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.offsetRotateMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.offsetScaleMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.tmpMat4_ = create();\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.indices = [];\n\n  /**\n   * @protected\n   * @type {?module:ol/webgl/Buffer}\n   */\n  this.indicesBuffer = null;\n\n  /**\n   * Start index per feature (the index).\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.startIndices = [];\n\n  /**\n   * Start index per feature (the feature).\n   * @protected\n   * @type {Array.<module:ol/Feature|module:ol/render/Feature>}\n   */\n  this.startIndicesFeature = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.vertices = [];\n\n  /**\n   * @protected\n   * @type {?module:ol/webgl/Buffer}\n   */\n  this.verticesBuffer = null;\n\n  /**\n   * Optional parameter for PolygonReplay instances.\n   * @protected\n   * @type {module:ol/render/webgl/LineStringReplay|undefined}\n   */\n  this.lineStringReplay = undefined;\n\n};\n\ninherits(WebGLReplay, VectorContext);\n\n\n/**\n * @abstract\n * @param {module:ol/webgl/Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\nWebGLReplay.prototype.getDeleteResourcesFunction = function(context) {};\n\n\n/**\n * @abstract\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLReplay.prototype.finish = function(context) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n            module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n            module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n            module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n */\nWebGLReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n           module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n           module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n           module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n */\nWebGLReplay.prototype.shutDownProgram = function(gl, locations) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {boolean} hitDetection Hit detection mode.\n */\nWebGLReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplay = function(gl, context, skippedFeaturesHash,\n  featureCallback, oneByOne, opt_hitExtent) {\n  if (!oneByOne) {\n    // draw all hit-detection features in \"once\" (by texture group)\n    return this.drawHitDetectionReplayAll(gl, context,\n      skippedFeaturesHash, featureCallback);\n  } else {\n    // draw hit-detection features one by one\n    return this.drawHitDetectionReplayOneByOne(gl, context,\n      skippedFeaturesHash, featureCallback, opt_hitExtent);\n  }\n};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplayAll = function(gl, context, skippedFeaturesHash,\n  featureCallback) {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n  const result = featureCallback(null);\n  if (result) {\n    return result;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.replay = function(context,\n  center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash,\n  featureCallback, oneByOne, opt_hitExtent) {\n  const gl = context.getGL();\n  let tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n      tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n  if (this.lineStringReplay) {\n    tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n    tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n    tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n    tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n    tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n    tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n    tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n    tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n    gl.enable(gl.STENCIL_TEST);\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilMask(255);\n    gl.stencilFunc(gl.ALWAYS, 1, 255);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n    this.lineStringReplay.replay(context,\n      center, resolution, rotation, size, pixelRatio,\n      opacity, skippedFeaturesHash,\n      featureCallback, oneByOne, opt_hitExtent);\n\n    gl.stencilMask(0);\n    gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n  }\n\n  context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n  context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n  const locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n  // set the \"uniform\" values\n  const projectionMatrix = resetTransform(this.projectionMatrix_);\n  scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n  rotateTransform(projectionMatrix, -rotation);\n  translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n  const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n  scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n  const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n  if (rotation !== 0) {\n    rotateTransform(offsetRotateMatrix, -rotation);\n  }\n\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n    fromTransform(this.tmpMat4_, projectionMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n    fromTransform(this.tmpMat4_, offsetScaleMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n    fromTransform(this.tmpMat4_, offsetRotateMatrix));\n  gl.uniform1f(locations.u_opacity, opacity);\n\n  // draw!\n  let result;\n  if (featureCallback === undefined) {\n    this.drawReplay(gl, context, skippedFeaturesHash, false);\n  } else {\n    // draw feature by feature for the hit-detection\n    result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n      featureCallback, oneByOne, opt_hitExtent);\n  }\n\n  // disable the vertex attrib arrays\n  this.shutDownProgram(gl, locations);\n\n  if (this.lineStringReplay) {\n    if (!tmpStencil) {\n      gl.disable(gl.STENCIL_TEST);\n    }\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n      /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n    gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n    gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n      /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n  }\n\n  return result;\n};\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {number} start Start index.\n * @param {number} end End index.\n */\nWebGLReplay.prototype.drawElements = function(\n  gl, context, start, end) {\n  const elementType = context.hasOESElementIndexUint ?\n    UNSIGNED_INT : UNSIGNED_SHORT;\n  const elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n  const numItems = end - start;\n  const offsetInBytes = start * elementSize;\n  gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n};\nexport default WebGLReplay;\n","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport const EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport const triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  const area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nconst BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n/**\n * @constructor\n * @param {Array.<number>=} opt_arr Array.\n * @param {number=} opt_usage Usage.\n * @struct\n */\nconst WebGLBuffer = function(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n\n/**\n * @return {Array.<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function() {\n  return this.arr_;\n};\n\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function() {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLCircleReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<Array.<number>|number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.radius_ = 0;\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         strokeColor: (Array.<number>|null),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineWidth: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    strokeColor: null,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineWidth: undefined,\n    changed: false\n  };\n\n};\n\ninherits(WebGLCircleReplay, WebGLReplay);\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLCircleReplay.prototype.drawCoordinates_ = function(\n  flatCoordinates, offset, end, stride) {\n  let numVertices = this.vertices.length;\n  let numIndices = this.indices.length;\n  let n = numVertices / 4;\n  let i, ii;\n  for (i = offset, ii = end; i < ii; i += stride) {\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 0;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 1;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 2;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 3;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n    this.indices[numIndices++] = n;\n\n    n += 4;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const radius = circleGeometry.getRadius();\n  const stride = circleGeometry.getStride();\n  if (radius) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n\n    this.radius_ = radius;\n    let flatCoordinates = circleGeometry.getFlatCoordinates();\n    flatCoordinates = translate(flatCoordinates, 0, 2,\n      stride, -this.origin[0], -this.origin[1]);\n    this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n  } else {\n    if (this.state_.changed) {\n      this.styles_.pop();\n      if (this.styles_.length) {\n        const lastState = this.styles_[this.styles_.length - 1];\n        this.state_.fillColor =  /** @type {Array.<number>} */ (lastState[0]);\n        this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n        this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n        this.state_.changed = false;\n      }\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLCircleReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.getDeleteResourcesFunction = function(context) {\n  // We only delete our stuff here. The shaders and the program may\n  // be used by other CircleReplay instances (for other layers). And\n  // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n  // object.\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 16, 0);\n\n  gl.enableVertexAttribArray(locations.a_instruction);\n  gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n    false, 16, 8);\n\n  gl.enableVertexAttribArray(locations.a_radius);\n  gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n    false, 16, 12);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_instruction);\n  gl.disableVertexAttribArray(locations.a_radius);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n      /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLCircleReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n      /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\nWebGLCircleReplay.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n */\nWebGLCircleReplay.prototype.setStrokeStyle_ = function(gl, color, lineWidth) {\n  gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  let strokeStyleColor, strokeStyleWidth;\n  if (strokeStyle) {\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n  } else {\n    strokeStyleColor = [0, 0, 0, 0];\n    strokeStyleWidth = 0;\n  }\n  let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_FILLSTYLE;\n  } else {\n    fillStyleColor = DEFAULT_FILLSTYLE;\n  }\n  if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n      !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth) {\n    this.state_.changed = true;\n    this.state_.fillColor = fillStyleColor;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n  }\n};\nexport default WebGLCircleReplay;\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n","/**\n * @module ol/webgl/Context\n */\nimport {getUid, inherits} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {WebGLRenderingContext} gl GL.\n */\nconst WebGLContext = function(canvas, gl) {\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = gl;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/webgl/Context~BufferCacheEntry>}\n   */\n  this.bufferCache_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, WebGLShader>}\n   */\n  this.shaderCache_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, WebGLProgram>}\n   */\n  this.programCache_ = {};\n\n  /**\n   * @private\n   * @type {WebGLProgram}\n   */\n  this.currentProgram_ = null;\n\n  /**\n   * @private\n   * @type {WebGLFramebuffer}\n   */\n  this.hitDetectionFramebuffer_ = null;\n\n  /**\n   * @private\n   * @type {WebGLTexture}\n   */\n  this.hitDetectionTexture_ = null;\n\n  /**\n   * @private\n   * @type {WebGLRenderbuffer}\n   */\n  this.hitDetectionRenderbuffer_ = null;\n\n  /**\n   * @type {boolean}\n   */\n  this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n  // use the OES_element_index_uint extension if available\n  if (this.hasOESElementIndexUint) {\n    gl.getExtension('OES_element_index_uint');\n  }\n\n  listen(this.canvas_, ContextEventType.LOST,\n    this.handleWebGLContextLost, this);\n  listen(this.canvas_, ContextEventType.RESTORED,\n    this.handleWebGLContextRestored, this);\n\n};\n\ninherits(WebGLContext, Disposable);\n\n\n/**\n * Just bind the buffer if it's in the cache. Otherwise create\n * the WebGL buffer, bind it, populate it, and add an entry to\n * the cache.\n * @param {number} target Target.\n * @param {module:ol/webgl/Buffer} buf Buffer.\n */\nWebGLContext.prototype.bindBuffer = function(target, buf) {\n  const gl = this.getGL();\n  const arr = buf.getArray();\n  const bufferKey = String(getUid(buf));\n  if (bufferKey in this.bufferCache_) {\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    gl.bindBuffer(target, bufferCacheEntry.buffer);\n  } else {\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(target, buffer);\n    let /** @type {ArrayBufferView} */ arrayBuffer;\n    if (target == ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ?\n        new Uint32Array(arr) : new Uint16Array(arr);\n    }\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n    this.bufferCache_[bufferKey] = {\n      buf: buf,\n      buffer: buffer\n    };\n  }\n};\n\n\n/**\n * @param {module:ol/webgl/Buffer} buf Buffer.\n */\nWebGLContext.prototype.deleteBuffer = function(buf) {\n  const gl = this.getGL();\n  const bufferKey = String(getUid(buf));\n  const bufferCacheEntry = this.bufferCache_[bufferKey];\n  if (!gl.isContextLost()) {\n    gl.deleteBuffer(bufferCacheEntry.buffer);\n  }\n  delete this.bufferCache_[bufferKey];\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLContext.prototype.disposeInternal = function() {\n  unlistenAll(this.canvas_);\n  const gl = this.getGL();\n  if (!gl.isContextLost()) {\n    for (const key in this.bufferCache_) {\n      gl.deleteBuffer(this.bufferCache_[key].buffer);\n    }\n    for (const key in this.programCache_) {\n      gl.deleteProgram(this.programCache_[key]);\n    }\n    for (const key in this.shaderCache_) {\n      gl.deleteShader(this.shaderCache_[key]);\n    }\n    // delete objects for hit-detection\n    gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n    gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n    gl.deleteTexture(this.hitDetectionTexture_);\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas.\n */\nWebGLContext.prototype.getCanvas = function() {\n  return this.canvas_;\n};\n\n\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\nWebGLContext.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * Get the frame buffer for hit detection.\n * @return {WebGLFramebuffer} The hit detection frame buffer.\n */\nWebGLContext.prototype.getHitDetectionFramebuffer = function() {\n  if (!this.hitDetectionFramebuffer_) {\n    this.initHitDetectionFramebuffer_();\n  }\n  return this.hitDetectionFramebuffer_;\n};\n\n\n/**\n * Get shader from the cache if it's in the cache. Otherwise, create\n * the WebGL shader, compile it, and add entry to cache.\n * @param {module:ol/webgl/Shader} shaderObject Shader object.\n * @return {WebGLShader} Shader.\n */\nWebGLContext.prototype.getShader = function(shaderObject) {\n  const shaderKey = String(getUid(shaderObject));\n  if (shaderKey in this.shaderCache_) {\n    return this.shaderCache_[shaderKey];\n  } else {\n    const gl = this.getGL();\n    const shader = gl.createShader(shaderObject.getType());\n    gl.shaderSource(shader, shaderObject.getSource());\n    gl.compileShader(shader);\n    this.shaderCache_[shaderKey] = shader;\n    return shader;\n  }\n};\n\n\n/**\n * Get the program from the cache if it's in the cache. Otherwise create\n * the WebGL program, attach the shaders to it, and add an entry to the\n * cache.\n * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n * @return {WebGLProgram} Program.\n */\nWebGLContext.prototype.getProgram = function(fragmentShaderObject, vertexShaderObject) {\n  const programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n  if (programKey in this.programCache_) {\n    return this.programCache_[programKey];\n  } else {\n    const gl = this.getGL();\n    const program = gl.createProgram();\n    gl.attachShader(program, this.getShader(fragmentShaderObject));\n    gl.attachShader(program, this.getShader(vertexShaderObject));\n    gl.linkProgram(program);\n    this.programCache_[programKey] = program;\n    return program;\n  }\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nWebGLContext.prototype.handleWebGLContextLost = function() {\n  clear(this.bufferCache_);\n  clear(this.shaderCache_);\n  clear(this.programCache_);\n  this.currentProgram_ = null;\n  this.hitDetectionFramebuffer_ = null;\n  this.hitDetectionTexture_ = null;\n  this.hitDetectionRenderbuffer_ = null;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nWebGLContext.prototype.handleWebGLContextRestored = function() {\n};\n\n\n/**\n * Creates a 1x1 pixel framebuffer for the hit-detection.\n * @private\n */\nWebGLContext.prototype.initHitDetectionFramebuffer_ = function() {\n  const gl = this.gl_;\n  const framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n  const texture = createEmptyTexture(gl, 1, 1);\n  const renderbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n    gl.RENDERBUFFER, renderbuffer);\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  this.hitDetectionFramebuffer_ = framebuffer;\n  this.hitDetectionTexture_ = texture;\n  this.hitDetectionRenderbuffer_ = renderbuffer;\n};\n\n\n/**\n * Use a program.  If the program is already in use, this will return `false`.\n * @param {WebGLProgram} program Program.\n * @return {boolean} Changed.\n * @api\n */\nWebGLContext.prototype.useProgram = function(program) {\n  if (program == this.currentProgram_) {\n    return false;\n  } else {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    return true;\n  }\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLTextureReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorY = undefined;\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.groupIndices = [];\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.hitDetectionGroupIndices = [];\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.height = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageHeight = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageWidth = undefined;\n\n  /**\n   * @protected\n   * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n   */\n  this.defaultLocations = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.opacity = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originY = undefined;\n\n  /**\n   * @protected\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.rotation = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.scale = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.width = undefined;\n};\n\ninherits(WebGLTextureReplay, WebGLReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  const textures = this.getTextures(true);\n  const gl = context.getGL();\n  return function() {\n    if (!gl.isContextLost()) {\n      let i, ii;\n      for (i = 0, ii = textures.length; i < ii; ++i) {\n        gl.deleteTexture(textures[i]);\n      }\n    }\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} My end.\n * @protected\n */\nWebGLTextureReplay.prototype.drawCoordinates = function(flatCoordinates, offset, end, stride) {\n  const anchorX = /** @type {number} */ (this.anchorX);\n  const anchorY = /** @type {number} */ (this.anchorY);\n  const height = /** @type {number} */ (this.height);\n  const imageHeight = /** @type {number} */ (this.imageHeight);\n  const imageWidth = /** @type {number} */ (this.imageWidth);\n  const opacity = /** @type {number} */ (this.opacity);\n  const originX = /** @type {number} */ (this.originX);\n  const originY = /** @type {number} */ (this.originY);\n  const rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n  // this.rotation_ is anti-clockwise, but rotation is clockwise\n  const rotation = /** @type {number} */ (-this.rotation);\n  const scale = /** @type {number} */ (this.scale);\n  const width = /** @type {number} */ (this.width);\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  let numIndices = this.indices.length;\n  let numVertices = this.vertices.length;\n  let i, n, offsetX, offsetY, x, y;\n  for (i = offset; i < end; i += stride) {\n    x = flatCoordinates[i] - this.origin[0];\n    y = flatCoordinates[i + 1] - this.origin[1];\n\n    // There are 4 vertices per [x, y] point, one for each corner of the\n    // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n    // WebGL supported Geometry Shaders (which can emit new vertices), but that\n    // is not currently the case.\n    //\n    // And each vertex includes 8 values: the x and y coordinates, the x and\n    // y offsets used to calculate the position of the corner, the u and\n    // v texture coordinates for the corner, the opacity, and whether the\n    // the image should be rotated with the view (rotateWithView).\n\n    n = numVertices / 8;\n\n    // bottom-left corner\n    offsetX = -scale * anchorX;\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // bottom-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-left corner\n    offsetX = -scale * anchorX;\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n  }\n\n  return numVertices;\n};\n\n\n/**\n * @protected\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n * @param {!Object.<string, WebGLTexture>} texturePerImage Texture cache.\n * @param {WebGLRenderingContext} gl Gl.\n */\nWebGLTextureReplay.prototype.createTextures = function(textures, images, texturePerImage, gl) {\n  let texture, image, uid, i;\n  const ii = images.length;\n  for (i = 0; i < ii; ++i) {\n    image = images[i];\n\n    uid = getUid(image).toString();\n    if (uid in texturePerImage) {\n      texture = texturePerImage[uid];\n    } else {\n      texture = createTexture(\n        gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n      texturePerImage[uid] = texture;\n    }\n    textures[i] = texture;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations) {\n    locations = new Locations(gl, program);\n    this.defaultLocations = locations;\n  } else {\n    locations = this.defaultLocations;\n  }\n\n  // use the program (FIXME: use the return value)\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 32, 0);\n\n  gl.enableVertexAttribArray(locations.a_offsets);\n  gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n    false, 32, 8);\n\n  gl.enableVertexAttribArray(locations.a_texCoord);\n  gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n    false, 32, 16);\n\n  gl.enableVertexAttribArray(locations.a_opacity);\n  gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n    false, 32, 24);\n\n  gl.enableVertexAttribArray(locations.a_rotateWithView);\n  gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n    false, 32, 28);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_offsets);\n  gl.disableVertexAttribArray(locations.a_texCoord);\n  gl.disableVertexAttribArray(locations.a_opacity);\n  gl.disableVertexAttribArray(locations.a_rotateWithView);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  const textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n  const groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n  } else {\n    let i, ii, start;\n    for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      const end = groupIndices[i];\n      this.drawElements(gl, context, start, end);\n      start = end;\n    }\n  }\n};\n\n\n/**\n * Draw the replay while paying attention to skipped features.\n *\n * This functions creates groups of features that can be drawn to together,\n * so that the number of `drawElements` calls is minimized.\n *\n * For example given the following texture groups:\n *\n *    Group 1: A B C\n *    Group 2: D [E] F G\n *\n * If feature E should be skipped, the following `drawElements` calls will be\n * made:\n *\n *    drawElements with feature A, B and C\n *    drawElements with feature D\n *    drawElements with feature F and G\n *\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<number>} groupIndices Texture group indices.\n */\nWebGLTextureReplay.prototype.drawReplaySkipping = function(gl, context, skippedFeaturesHash, textures,\n  groupIndices) {\n  let featureIndex = 0;\n\n  let i, ii;\n  for (i = 0, ii = textures.length; i < ii; ++i) {\n    gl.bindTexture(TEXTURE_2D, textures[i]);\n    const groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n    const groupEnd = groupIndices[i];\n\n    let start = groupStart;\n    let end = groupStart;\n    while (featureIndex < this.startIndices.length &&\n        this.startIndices[featureIndex] <= groupEnd) {\n      const feature = this.startIndicesFeature[featureIndex];\n\n      const featureUid = getUid(feature).toString();\n      if (skippedFeaturesHash[featureUid] !== undefined) {\n        // feature should be skipped\n        if (start !== end) {\n          // draw the features so far\n          this.drawElements(gl, context, start, end);\n        }\n        // continue with the next feature\n        start = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n        end = start;\n      } else {\n        // the feature is not skipped, augment the end index\n        end = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n      }\n      featureIndex++;\n    }\n\n    if (start !== end) {\n      // draw the remaining features (in case there was no skipped feature\n      // in this texture group, all features of a group are drawn together)\n      this.drawElements(gl, context, start, end);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, groupStart, start, end, feature, featureUid;\n  let featureIndex = this.startIndices.length - 1;\n  const hitDetectionTextures = this.getHitDetectionTextures();\n  for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n    gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n    groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n    end = this.hitDetectionGroupIndices[i];\n\n    // draw all features for this texture group\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n        if (result) {\n          return result;\n        }\n      }\n\n      end = start;\n      featureIndex--;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.finish = function(context) {\n  this.anchorX = undefined;\n  this.anchorY = undefined;\n  this.height = undefined;\n  this.imageHeight = undefined;\n  this.imageWidth = undefined;\n  this.indices = null;\n  this.opacity = undefined;\n  this.originX = undefined;\n  this.originY = undefined;\n  this.rotateWithView = undefined;\n  this.rotation = undefined;\n  this.scale = undefined;\n  this.vertices = null;\n  this.width = undefined;\n};\n\n\n/**\n * @abstract\n * @protected\n * @param {boolean=} opt_all Return hit detection textures with regular ones.\n * @returns {Array.<WebGLTexture>} Textures.\n */\nWebGLTextureReplay.prototype.getTextures = function(opt_all) {};\n\n\n/**\n * @abstract\n * @protected\n * @returns {Array.<WebGLTexture>} Textures.\n */\nWebGLTextureReplay.prototype.getHitDetectionTextures = function() {};\nexport default WebGLTextureReplay;\n","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLImageReplay = function(tolerance, maxExtent) {\n  WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.images_ = [];\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.hitDetectionImages_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.textures_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.hitDetectionTextures_ = [];\n\n};\n\ninherits(WebGLImageReplay, WebGLTextureReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  this.drawCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  this.drawCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.finish = function(context) {\n  const gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices.push(this.indices.length);\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  const indices = this.indices;\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  const texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n    texturePerImage, gl);\n\n  this.images_ = null;\n  this.hitDetectionImages_ = null;\n  WebGLTextureReplay.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.setImageStyle = function(imageStyle) {\n  const anchor = imageStyle.getAnchor();\n  const image = imageStyle.getImage(1);\n  const imageSize = imageStyle.getImageSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const opacity = imageStyle.getOpacity();\n  const origin = imageStyle.getOrigin();\n  const rotateWithView = imageStyle.getRotateWithView();\n  const rotation = imageStyle.getRotation();\n  const size = imageStyle.getSize();\n  const scale = imageStyle.getScale();\n\n  let currentImage;\n  if (this.images_.length === 0) {\n    this.images_.push(image);\n  } else {\n    currentImage = this.images_[this.images_.length - 1];\n    if (getUid(currentImage) != getUid(image)) {\n      this.groupIndices.push(this.indices.length);\n      this.images_.push(image);\n    }\n  }\n\n  if (this.hitDetectionImages_.length === 0) {\n    this.hitDetectionImages_.push(hitDetectionImage);\n  } else {\n    currentImage =\n        this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n    if (getUid(currentImage) != getUid(hitDetectionImage)) {\n      this.hitDetectionGroupIndices.push(this.indices.length);\n      this.hitDetectionImages_.push(hitDetectionImage);\n    }\n  }\n\n  this.anchorX = anchor[0];\n  this.anchorY = anchor[1];\n  this.height = size[1];\n  this.imageHeight = imageSize[1];\n  this.imageWidth = imageSize[0];\n  this.opacity = opacity;\n  this.originX = origin[0];\n  this.originY = origin[1];\n  this.rotation = rotation;\n  this.rotateWithView = rotateWithView;\n  this.scale = scale;\n  this.width = size[0];\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.getTextures = function(opt_all) {\n  return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.getHitDetectionTextures = function() {\n  return this.hitDetectionTextures_;\n};\nexport default WebGLImageReplay;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLLineStringReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<?>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{strokeColor: (Array.<number>|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: (number|undefined),\n   *         miterLimit: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: undefined,\n    miterLimit: undefined,\n    changed: false\n  };\n\n};\n\ninherits(WebGLLineStringReplay, WebGLReplay);\n\n\n/**\n * Draw one segment.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLLineStringReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n\n  let i, ii;\n  let numVertices = this.vertices.length;\n  let numIndices = this.indices.length;\n  //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n  //Instruction, and a rounding factor (1 or 2). If the product is even,\n  //we round it. If it is odd, we don't.\n  const lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n    this.state_.lineJoin === 'miter' ? 1 : 2;\n  const lineCap = this.state_.lineCap === 'butt' ? 0 :\n    this.state_.lineCap === 'square' ? 1 : 2;\n  const closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n  let startCoords, sign, n;\n  let lastIndex = numIndices;\n  let lastSign = 1;\n  //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n  let p0, p1, p2;\n\n  for (i = offset, ii = end; i < ii; i += stride) {\n\n    n = numVertices / 7;\n\n    p0 = p1;\n    p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n    //First vertex.\n    if (i === offset) {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      if (end - offset === stride * 2 && equals(p1, p2)) {\n        break;\n      }\n      if (closed) {\n        //A closed line! Complete the circle.\n        p0 = [flatCoordinates[end - stride * 2],\n          flatCoordinates[end - stride * 2 + 1]];\n\n        startCoords = p2;\n      } else {\n        //Add the first two/four vertices.\n\n        if (lineCap) {\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n          lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n          -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        lastIndex = numVertices / 7 - 1;\n\n        continue;\n      }\n    } else if (i === end - stride) {\n      //Last vertex.\n      if (closed) {\n        //Same as the first vertex.\n        p2 = startCoords;\n        break;\n      } else {\n        p0 = p0 || [0, 0];\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n          lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n          -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = lastIndex;\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n;\n\n        if (lineCap) {\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        break;\n      }\n    } else {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n    }\n\n    // We group CW and straight lines, thus the not so inituitive CCW checking function.\n    sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n      ? -1 : 1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    if (i > offset) {\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 1;\n\n    lastIndex = n + 2;\n    lastSign = sign;\n\n    //Add miter\n    if (lineJoin) {\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n    }\n  }\n\n  if (closed) {\n    n = n || numVertices / 7;\n    sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n      ? 1 : -1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastIndex - 1;\n    this.indices[numIndices++] = lastIndex;\n\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n  }\n};\n\n/**\n * @param {Array.<number>} p0 Last coordinates.\n * @param {Array.<number>} p1 Current coordinates.\n * @param {Array.<number>} p2 Next coordinates.\n * @param {number} product Sign, instruction, and rounding product.\n * @param {number} numVertices Vertex counter.\n * @return {number} Vertex counter.\n * @private\n */\nWebGLLineStringReplay.prototype.addVertices_ = function(p0, p1, p2, product, numVertices) {\n  this.vertices[numVertices++] = p0[0];\n  this.vertices[numVertices++] = p0[1];\n  this.vertices[numVertices++] = p1[0];\n  this.vertices[numVertices++] = p1[1];\n  this.vertices[numVertices++] = p2[0];\n  this.vertices[numVertices++] = p2[1];\n  this.vertices[numVertices++] = product;\n\n  return numVertices;\n};\n\n/**\n * Check if the linestring can be drawn (i. e. valid).\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring can be drawn.\n * @private\n */\nWebGLLineStringReplay.prototype.isValid_ = function(flatCoordinates, offset, end, stride) {\n  const range = end - offset;\n  if (range < stride * 2) {\n    return false;\n  } else if (range === stride * 2) {\n    const firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    const lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n    return !equals(firstP, lastP);\n  }\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  let flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n      stride, -this.origin[0], -this.origin[1]);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const indexCount = this.indices.length;\n  const ends = multiLineStringGeometry.getEnds();\n  ends.unshift(0);\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let i, ii;\n  if (ends.length > 1) {\n    for (i = 1, ii = ends.length; i < ii; ++i) {\n      if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n        const lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n          stride, -this.origin[0], -this.origin[1]);\n        this.drawCoordinates_(\n          lineString, 0, lineString.length, stride);\n      }\n    }\n  }\n  if (this.indices.length > indexCount) {\n    this.startIndices.push(indexCount);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(indexCount);\n      this.state_.changed = false;\n    }\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n */\nWebGLLineStringReplay.prototype.drawPolygonCoordinates = function(\n  flatCoordinates, holeFlatCoordinates, stride) {\n  if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates.push(flatCoordinates[0]);\n    flatCoordinates.push(flatCoordinates[1]);\n  }\n  this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  if (holeFlatCoordinates.length) {\n    let i, ii;\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n      }\n      this.drawCoordinates_(holeFlatCoordinates[i], 0,\n        holeFlatCoordinates[i].length, stride);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number=} opt_index Index count.\n */\nWebGLLineStringReplay.prototype.setPolygonStyle = function(feature, opt_index) {\n  const index = opt_index === undefined ? this.indices.length : opt_index;\n  this.startIndices.push(index);\n  this.startIndicesFeature.push(feature);\n  if (this.state_.changed) {\n    this.styleIndices_.push(index);\n    this.state_.changed = false;\n  }\n};\n\n\n/**\n * @return {number} Current index.\n */\nWebGLLineStringReplay.prototype.getCurrentIndex = function() {\n  return this.indices.length;\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLLineStringReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_lastPos);\n  gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n    false, 28, 0);\n\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 28, 8);\n\n  gl.enableVertexAttribArray(locations.a_nextPos);\n  gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n    false, 28, 16);\n\n  gl.enableVertexAttribArray(locations.a_direction);\n  gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n    false, 28, 24);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_lastPos);\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_nextPos);\n  gl.disableVertexAttribArray(locations.a_direction);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLLineStringReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n * @param {number} miterLimit Miter limit.\n */\nWebGLLineStringReplay.prototype.setStrokeStyle_ = function(gl, color, lineWidth, miterLimit) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const strokeStyleLineCap = strokeStyle.getLineCap();\n  this.state_.lineCap = strokeStyleLineCap !== undefined ?\n    strokeStyleLineCap : DEFAULT_LINECAP;\n  const strokeStyleLineDash = strokeStyle.getLineDash();\n  this.state_.lineDash = strokeStyleLineDash ?\n    strokeStyleLineDash : DEFAULT_LINEDASH;\n  const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n  this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n    strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n  const strokeStyleLineJoin = strokeStyle.getLineJoin();\n  this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n    strokeStyleLineJoin : DEFAULT_LINEJOIN;\n  let strokeStyleColor = strokeStyle.getColor();\n  if (!(strokeStyleColor instanceof CanvasGradient) &&\n      !(strokeStyleColor instanceof CanvasPattern)) {\n    strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_STROKESTYLE;\n  } else {\n    strokeStyleColor = DEFAULT_STROKESTYLE;\n  }\n  let strokeStyleWidth = strokeStyle.getWidth();\n  strokeStyleWidth = strokeStyleWidth !== undefined ?\n    strokeStyleWidth : DEFAULT_LINEWIDTH;\n  let strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n  strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n    strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n  if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n    this.state_.changed = true;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.state_.miterLimit = strokeStyleMiterLimit;\n    this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n  }\n};\n\nexport default WebGLLineStringReplay;\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n};\n\nexport default Locations;\n","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n\n/**\n * Creates an empty linked list structure.\n *\n * @constructor\n * @struct\n * @param {boolean=} opt_circular The last item is connected to the first one,\n * and the first item to the last one. Default is true.\n */\nconst LinkedList = function(opt_circular) {\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function(data) {\n\n  /** @type {module:ol/structs/LinkedList~Item} */\n  const item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  const head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    const next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function() {\n  const head = this.head_;\n  if (head) {\n    const next = head.next;\n    const prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function() {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function() {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function() {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function() {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function() {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function() {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function(list) {\n  if (list.head_) {\n    if (this.head_) {\n      const end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function() {\n  return this.length_;\n};\nexport default LinkedList;\n","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLPolygonReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  this.lineStringReplay = new WebGLLineStringReplay(\n    tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    changed: false\n  };\n\n};\n\ninherits(WebGLPolygonReplay, WebGLReplay);\n\n\n/**\n * Draw one polygon.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n * @private\n */\nWebGLPolygonReplay.prototype.drawCoordinates_ = function(\n  flatCoordinates, holeFlatCoordinates, stride) {\n  // Triangulate the polygon\n  const outerRing = new LinkedList();\n  const rtree = new RBush();\n  // Initialize the outer ring\n  this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n  const maxCoords = this.getMaxCoords_(outerRing);\n\n  // Eliminate holes, if there are any\n  if (holeFlatCoordinates.length) {\n    let i, ii;\n    const holeLists = [];\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      const holeList = {\n        list: new LinkedList(),\n        maxCoords: undefined,\n        rtree: new RBush()\n      };\n      holeLists.push(holeList);\n      this.processFlatCoordinates_(holeFlatCoordinates[i],\n        stride, holeList.list, holeList.rtree, false);\n      this.classifyPoints_(holeList.list, holeList.rtree, true);\n      holeList.maxCoords = this.getMaxCoords_(holeList.list);\n    }\n    holeLists.sort(function(a, b) {\n      return b.maxCoords[0] === a.maxCoords[0] ?\n        a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n    });\n    for (i = 0; i < holeLists.length; ++i) {\n      const currList = holeLists[i].list;\n      const start = currList.firstItem();\n      let currItem = start;\n      let intersection;\n      do {\n        //TODO: Triangulate holes when they intersect the outer ring.\n        if (this.getIntersections_(currItem, rtree).length) {\n          intersection = true;\n          break;\n        }\n        currItem = currList.nextItem();\n      } while (start !== currItem);\n      if (!intersection) {\n        if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n          rtree.concat(holeLists[i].rtree);\n          this.classifyPoints_(outerRing, rtree, false);\n        }\n      }\n    }\n  } else {\n    this.classifyPoints_(outerRing, rtree, false);\n  }\n  this.triangulate_(outerRing, rtree);\n};\n\n\n/**\n * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {module:ol/structs/LinkedList} list Linked list.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} clockwise Coordinate order should be clockwise.\n */\nWebGLPolygonReplay.prototype.processFlatCoordinates_ = function(\n  flatCoordinates, stride, list, rtree, clockwise) {\n  const isClockwise = linearRingIsClockwise(flatCoordinates,\n    0, flatCoordinates.length, stride);\n  let i, ii;\n  let n = this.vertices.length / 2;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let start;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p0;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p1;\n  const extents = [];\n  const segments = [];\n  if (clockwise === isClockwise) {\n    start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n    p0 = start;\n    for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  } else {\n    const end = flatCoordinates.length - stride;\n    start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n    p0 = start;\n    for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  }\n  rtree.load(extents, segments);\n};\n\n\n/**\n * Returns the rightmost coordinates of a polygon on the X axis.\n * @private\n * @param {module:ol/structs/LinkedList} list Polygons ring.\n * @return {Array.<number>} Max X coordinates.\n */\nWebGLPolygonReplay.prototype.getMaxCoords_ = function(list) {\n  const start = list.firstItem();\n  let seg = start;\n  let maxCoords = [seg.p0.x, seg.p0.y];\n\n  do {\n    seg = list.nextItem();\n    if (seg.p0.x > maxCoords[0]) {\n      maxCoords = [seg.p0.x, seg.p0.y];\n    }\n  } while (seg !== start);\n\n  return maxCoords;\n};\n\n\n/**\n * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n * @private\n * @param {module:ol/structs/LinkedList} list Polygon ring.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n * @return {boolean} There were reclassified points.\n */\nWebGLPolygonReplay.prototype.classifyPoints_ = function(list, rtree, ccw) {\n  let start = list.firstItem();\n  let s0 = start;\n  let s1 = list.nextItem();\n  let pointsReclassified = false;\n  do {\n    const reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n      s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n      triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n        s0.p1.y, s1.p1.x, s1.p1.y);\n    if (reflex === undefined) {\n      this.removeItem_(s0, s1, list, rtree);\n      pointsReclassified = true;\n      if (s1 === start) {\n        start = list.getNextItem();\n      }\n      s1 = s0;\n      list.prevItem();\n    } else if (s0.p1.reflex !== reflex) {\n      s0.p1.reflex = reflex;\n      pointsReclassified = true;\n    }\n    s0 = s1;\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return pointsReclassified;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n * @param {number} holeMaxX Maximum X value of the hole.\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {number} listMaxX Maximum X value of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @return {boolean} Bridging was successful.\n */\nWebGLPolygonReplay.prototype.bridgeHole_ = function(hole, holeMaxX,\n  list, listMaxX, rtree) {\n  let seg = hole.firstItem();\n  while (seg.p1.x !== holeMaxX) {\n    seg = hole.nextItem();\n  }\n\n  const p1 = seg.p1;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  const p2 = {x: listMaxX, y: p1.y, i: -1};\n  let minDist = Infinity;\n  let i, ii, bestPoint;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p5;\n\n  const intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n  for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n    const currSeg = intersectingSegments[i];\n    const intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n      currSeg.p1, true);\n    const dist = Math.abs(p1.x - intersection[0]);\n    if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n      currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n      minDist = dist;\n      p5 = {x: intersection[0], y: intersection[1], i: -1};\n      seg = currSeg;\n    }\n  }\n  if (minDist === Infinity) {\n    return false;\n  }\n  bestPoint = seg.p1;\n\n  if (minDist > 0) {\n    const pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n    if (pointsInTriangle.length) {\n      let theta = Infinity;\n      for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n        const currPoint = pointsInTriangle[i];\n        const currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n        if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n          theta = currTheta;\n          bestPoint = currPoint;\n        }\n      }\n    }\n  }\n\n  seg = list.firstItem();\n  while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n    seg = list.nextItem();\n  }\n\n  //We clone the bridge points as they can have different convexity.\n  const p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n  const p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n  hole.getNextItem().p0 = p0Bridge;\n  this.insertItem_(p1, seg.p1, hole, rtree);\n  this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n  seg.p1 = p1Bridge;\n  hole.setFirstItem();\n  list.concat(hole);\n\n  return true;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n */\nWebGLPolygonReplay.prototype.triangulate_ = function(list, rtree) {\n  let ccw = false;\n  let simple = this.isSimple_(list, rtree);\n\n  // Start clipping ears\n  while (list.getLength() > 3) {\n    if (simple) {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n          // introduce touching segments. However, the original data may have some.\n          if (!this.resolveSelfIntersections_(list, rtree, true)) {\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        // We ran out of ears, try to reclassify.\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // We have a bad polygon, try to resolve local self-intersections.\n          if (!this.resolveSelfIntersections_(list, rtree)) {\n            simple = this.isSimple_(list, rtree);\n            if (!simple) {\n              // We have a really bad polygon, try more time consuming methods.\n              this.splitPolygon_(list, rtree);\n              break;\n            } else {\n              ccw = !this.isClockwise_(list);\n              this.classifyPoints_(list, rtree, ccw);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (list.getLength() === 3) {\n    let numIndices = this.indices.length;\n    this.indices[numIndices++] = list.getPrevItem().p0.i;\n    this.indices[numIndices++] = list.getCurrItem().p0.i;\n    this.indices[numIndices++] = list.getNextItem().p0.i;\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} simple The polygon is simple.\n * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n * @return {boolean} There were processed ears.\n */\nWebGLPolygonReplay.prototype.clipEars_ = function(list, rtree, simple, ccw) {\n  let numIndices = this.indices.length;\n  let start = list.firstItem();\n  let s0 = list.getPrevItem();\n  let s1 = start;\n  let s2 = list.nextItem();\n  let s3 = list.getNextItem();\n  let p0, p1, p2;\n  let processedEars = false;\n  do {\n    p0 = s1.p0;\n    p1 = s1.p1;\n    p2 = s2.p1;\n    if (p1.reflex === false) {\n      // We might have a valid ear\n      let variableCriterion;\n      if (simple) {\n        variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n      } else {\n        variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n          s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n      }\n      if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n          variableCriterion) {\n        //The diagonal is completely inside the polygon\n        if (simple || p0.reflex === false || p2.reflex === false ||\n            linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n              p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n          //The diagonal is persumably valid, we have an ear\n          this.indices[numIndices++] = p0.i;\n          this.indices[numIndices++] = p1.i;\n          this.indices[numIndices++] = p2.i;\n          this.removeItem_(s1, s2, list, rtree);\n          if (s2 === start) {\n            start = s3;\n          }\n          processedEars = true;\n        }\n      }\n    }\n    // Else we have a reflex point.\n    s0 = list.getPrevItem();\n    s1 = list.getCurrItem();\n    s2 = list.nextItem();\n    s3 = list.getNextItem();\n  } while (s1 !== start && list.getLength() > 3);\n\n  return processedEars;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Resolve touching segments.\n * @return {boolean} There were resolved intersections.\n*/\nWebGLPolygonReplay.prototype.resolveSelfIntersections_ = function(\n  list, rtree, opt_touch) {\n  const start = list.firstItem();\n  list.nextItem();\n  let s0 = start;\n  let s1 = list.nextItem();\n  let resolvedIntersections = false;\n\n  do {\n    const intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n      opt_touch);\n    if (intersection) {\n      let breakCond = false;\n      const numVertices = this.vertices.length;\n      let numIndices = this.indices.length;\n      const n = numVertices / 2;\n      const seg = list.prevItem();\n      list.removeItem();\n      rtree.remove(seg);\n      breakCond = (seg === start);\n      let p;\n      if (opt_touch) {\n        if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n          list.prevItem();\n          p = s0.p0;\n          s1.p0 = p;\n          rtree.remove(s0);\n          breakCond = breakCond || (s0 === start);\n        } else {\n          p = s1.p1;\n          s0.p1 = p;\n          rtree.remove(s1);\n          breakCond = breakCond || (s1 === start);\n        }\n        list.removeItem();\n      } else {\n        p = this.createPoint_(intersection[0], intersection[1], n);\n        s0.p1 = p;\n        s1.p0 = p;\n        rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n          Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n        rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n          Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n      }\n\n      this.indices[numIndices++] = seg.p0.i;\n      this.indices[numIndices++] = seg.p1.i;\n      this.indices[numIndices++] = p.i;\n\n      resolvedIntersections = true;\n      if (breakCond) {\n        break;\n      }\n    }\n\n    s0 = list.getPrevItem();\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return resolvedIntersections;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @return {boolean} The polygon is simple.\n */\nWebGLPolygonReplay.prototype.isSimple_ = function(list, rtree) {\n  const start = list.firstItem();\n  let seg = start;\n  do {\n    if (this.getIntersections_(seg, rtree).length) {\n      return false;\n    }\n    seg = list.nextItem();\n  } while (seg !== start);\n  return true;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @return {boolean} Orientation is clockwise.\n */\nWebGLPolygonReplay.prototype.isClockwise_ = function(list) {\n  const length = list.getLength() * 2;\n  const flatCoordinates = new Array(length);\n  const start = list.firstItem();\n  let seg = start;\n  let i = 0;\n  do {\n    flatCoordinates[i++] = seg.p0.x;\n    flatCoordinates[i++] = seg.p0.y;\n    seg = list.nextItem();\n  } while (seg !== start);\n  return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n */\nWebGLPolygonReplay.prototype.splitPolygon_ = function(list, rtree) {\n  const start = list.firstItem();\n  let s0 = start;\n  do {\n    const intersections = this.getIntersections_(s0, rtree);\n    if (intersections.length) {\n      const s1 = intersections[0];\n      const n = this.vertices.length / 2;\n      const intersection = this.calculateIntersection_(s0.p0,\n        s0.p1, s1.p0, s1.p1);\n      const p = this.createPoint_(intersection[0], intersection[1], n);\n      const newPolygon = new LinkedList();\n      const newRtree = new RBush();\n      this.insertItem_(p, s0.p1, newPolygon, newRtree);\n      s0.p1 = p;\n      rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n        Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n      let currItem = list.nextItem();\n      while (currItem !== s1) {\n        this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n        rtree.remove(currItem);\n        list.removeItem();\n        currItem = list.getCurrItem();\n      }\n      this.insertItem_(s1.p0, p, newPolygon, newRtree);\n      s1.p0 = p;\n      rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n        Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n      this.classifyPoints_(list, rtree, false);\n      this.triangulate_(list, rtree);\n      this.classifyPoints_(newPolygon, newRtree, false);\n      this.triangulate_(newPolygon, newRtree);\n      break;\n    }\n    s0 = list.nextItem();\n  } while (s0 !== start);\n};\n\n\n/**\n * @private\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @param {number} i Index.\n * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n */\nWebGLPolygonReplay.prototype.createPoint_ = function(x, y, i) {\n  let numVertices = this.vertices.length;\n  this.vertices[numVertices++] = x;\n  this.vertices[numVertices++] = y;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  const p = {\n    x: x,\n    y: y,\n    i: i,\n    reflex: undefined\n  };\n  return p;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n * @param {module:ol/structs/LinkedList} list Polygon ring.\n * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n */\nWebGLPolygonReplay.prototype.insertItem_ = function(p0, p1, list, opt_rtree) {\n  const seg = {\n    p0: p0,\n    p1: p1\n  };\n  list.insertItem(seg);\n  if (opt_rtree) {\n    opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n      Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n  }\n  return seg;\n};\n\n\n/**\n  * @private\n  * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n  * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n  * @param {module:ol/structs/LinkedList} list Polygon ring.\n  * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n  */\nWebGLPolygonReplay.prototype.removeItem_ = function(s0, s1, list, rtree) {\n  if (list.getCurrItem() === s1) {\n    list.removeItem();\n    s0.p1 = s1.p1;\n    rtree.remove(s1);\n    rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n      Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_reflex Only include reflex points.\n * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n */\nWebGLPolygonReplay.prototype.getPointsInTriangle_ = function(p0, p1, p2, rtree, opt_reflex) {\n  const result = [];\n  const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n    Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n      p1.y, p2.y)]);\n  for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    for (const j in segmentsInExtent[i]) {\n      const p = segmentsInExtent[i][j];\n      if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n        if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n            (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n            linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n          result.push(p);\n        }\n      }\n    }\n  }\n  return result;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n */\nWebGLPolygonReplay.prototype.getIntersections_ = function(segment, rtree, opt_touch) {\n  const p0 = segment.p0;\n  const p1 = segment.p1;\n  const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n    Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n  const result = [];\n  for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    const currSeg = segmentsInExtent[i];\n    if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n        this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n      result.push(currSeg);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Line intersection algorithm by Paul Bourke.\n * @see http://paulbourke.net/geometry/pointlineplane/\n *\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<number>|undefined} Intersection coordinates.\n */\nWebGLPolygonReplay.prototype.calculateIntersection_ = function(p0, p1, p2, p3, opt_touch) {\n  const denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n  if (denom !== 0) {\n    const ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n    const ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n    if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n        ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n        ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n      return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n * @return {boolean} Diagonal is inside the polygon.\n */\nWebGLPolygonReplay.prototype.diagonalIsInside_ = function(p0, p1, p2, p3, p4) {\n  if (p1.reflex === undefined || p3.reflex === undefined) {\n    return false;\n  }\n  const p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n  const p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n  const p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n  const p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n  const p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n  const p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n  return p1InCone && p3InCone;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const endss = multiPolygonGeometry.getEndss();\n  const stride = multiPolygonGeometry.getStride();\n  const currIndex = this.indices.length;\n  const currLineIndex = this.lineStringReplay.getCurrentIndex();\n  const flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n  let i, ii, j, jj;\n  let start = 0;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (ends.length > 0) {\n      const outerRing = translate(flatCoordinates, start, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        const holes = [];\n        let holeFlatCoords;\n        for (j = 1, jj = ends.length; j < jj; ++j) {\n          if (ends[j] !== ends[j - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n              ends[j], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n    start = ends[ends.length - 1];\n  }\n  if (this.indices.length > currIndex) {\n    this.startIndices.push(currIndex);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(currIndex);\n      this.state_.changed = false;\n    }\n  }\n  if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n    this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const ends = polygonGeometry.getEnds();\n  const stride = polygonGeometry.getStride();\n  if (ends.length > 0) {\n    const flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n    const outerRing = translate(flatCoordinates, 0, ends[0],\n      stride, -this.origin[0], -this.origin[1]);\n    if (outerRing.length) {\n      const holes = [];\n      let i, ii, holeFlatCoords;\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (ends[i] !== ends[i - 1]) {\n          holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n            ends[i], stride, -this.origin[0], -this.origin[1]);\n          holes.push(holeFlatCoords);\n        }\n      }\n\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.lineStringReplay.setPolygonStyle(feature);\n\n      this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n      this.drawCoordinates_(outerRing, holes, stride);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLPolygonReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  this.lineStringReplay.finish(context);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  const lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n    lineDeleter();\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 8, 0);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLPolygonReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\nWebGLPolygonReplay.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_FILLSTYLE;\n  } else {\n    fillStyleColor = DEFAULT_FILLSTYLE;\n  }\n  if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n    this.state_.fillColor = fillStyleColor;\n    this.state_.changed = true;\n    this.styles_.push(fillStyleColor);\n  }\n  //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n  if (strokeStyle) {\n    this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n  } else {\n    const nullStrokeStyle = new Stroke({\n      color: [0, 0, 0, 0],\n      lineWidth: 0\n    });\n    this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n  }\n};\nexport default WebGLPolygonReplay;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nconst Atlas = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    const block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      const entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function(index, block, width, height) {\n  const deltaWidth = block.width - width;\n  const deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  const args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default Atlas;\n","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n */\nconst AtlasManager = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function(id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function(atlases, id) {\n  for (let i = 0, ii = atlases.length; i < ii; ++i) {\n    const atlas = atlases[i];\n    const info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function(info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function(id, width, height,\n  renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  const renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function(isHitAtlas, id, width, height, renderCallback, opt_this) {\n  const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  let atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      let size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default AtlasManager;\n","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object.<string, number>} width\n * @property {number} height\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLTextReplay = function(tolerance, maxExtent) {\n  WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.images_ = [];\n\n  /**\n   * @private\n   * @type {Array.<WebGLTexture>}\n   */\n  this.textures_ = [];\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n  /**\n   * @private\n   * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: number,\n   *         miterLimit: (number|undefined),\n   *         fillColor: (module:ol/colorlike~ColorLike|null),\n   *         font: (string|undefined),\n   *         scale: (number|undefined)}}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textAlign_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textBaseline_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetY_ = undefined;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n   */\n  this.atlases_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n   */\n  this.currAtlas_ = undefined;\n\n  this.scale = 1;\n\n  this.opacity = 1;\n\n};\n\ninherits(WebGLTextReplay, WebGLTextureReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.drawText = function(geometry, feature) {\n  if (this.text_) {\n    let flatCoordinates = null;\n    const offset = 0;\n    let end = 2;\n    let stride = 2;\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        stride = geometry.getStride();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        break;\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        end = flatCoordinates.length;\n        break;\n      default:\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n\n    const glyphAtlas = this.currAtlas_;\n    const lines = this.text_.split('\\n');\n    const textSize = this.getTextSize_(lines);\n    let i, ii, j, jj, currX, currY, charArr, charInfo;\n    const anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n    const anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n    const lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      currX = 0;\n      currY = glyphAtlas.height * i;\n      charArr = lines[i].split('');\n\n      for (j = 0, jj = charArr.length; j < jj; ++j) {\n        charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n        if (charInfo) {\n          const image = charInfo.image;\n\n          this.anchorX = anchorX - currX;\n          this.anchorY = anchorY - currY;\n          this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n          this.originY = charInfo.offsetY;\n          this.height = glyphAtlas.height;\n          this.width = j === 0 || j === charArr.length - 1 ?\n            glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n          this.imageHeight = image.height;\n          this.imageWidth = image.width;\n\n          if (this.images_.length === 0) {\n            this.images_.push(image);\n          } else {\n            const currentImage = this.images_[this.images_.length - 1];\n            if (getUid(currentImage) != getUid(image)) {\n              this.groupIndices.push(this.indices.length);\n              this.images_.push(image);\n            }\n          }\n\n          this.drawText_(flatCoordinates, offset, end, stride);\n        }\n        currX += this.width;\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Array.<string>} lines Label to draw split to lines.\n * @return {Array.<number>} Size of the label in pixels.\n */\nWebGLTextReplay.prototype.getTextSize_ = function(lines) {\n  const self = this;\n  const glyphAtlas = this.currAtlas_;\n  const textHeight = lines.length * glyphAtlas.height;\n  //Split every line to an array of chars, sum up their width, and select the longest.\n  const textWidth = lines.map(function(str) {\n    let sum = 0;\n    for (let i = 0, ii = str.length; i < ii; ++i) {\n      const curr = str[i];\n      if (!glyphAtlas.width[curr]) {\n        self.addCharToAtlas_(curr);\n      }\n      sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n    }\n    return sum;\n  }).reduce(function(max, curr) {\n    return Math.max(max, curr);\n  });\n\n  return [textWidth, textHeight];\n};\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLTextReplay.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  for (let i = offset, ii = end; i < ii; i += stride) {\n    this.drawCoordinates(flatCoordinates, offset, end, stride);\n  }\n};\n\n\n/**\n * @private\n * @param {string} char Character.\n */\nWebGLTextReplay.prototype.addCharToAtlas_ = function(char) {\n  if (char.length === 1) {\n    const glyphAtlas = this.currAtlas_;\n    const state = this.state_;\n    const mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    const width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n    const info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n      function(ctx, x, y) {\n        //Parameterize the canvas\n        ctx.font = /** @type {string} */ (state.font);\n        ctx.fillStyle = state.fillColor;\n        ctx.strokeStyle = state.strokeColor;\n        ctx.lineWidth = state.lineWidth;\n        ctx.lineCap = /*** @type {string} */ (state.lineCap);\n        ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n        ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        if (CANVAS_LINE_DASH && state.lineDash) {\n          //FIXME: use pixelRatio\n          ctx.setLineDash(state.lineDash);\n          ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n        }\n        if (state.scale !== 1) {\n          //FIXME: use pixelRatio\n          ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n            /** @type {number} */ (state.scale), 0, 0);\n        }\n\n        //Draw the character on the canvas\n        if (state.strokeColor) {\n          ctx.strokeText(char, x, y);\n        }\n        if (state.fillColor) {\n          ctx.fillText(char, x, y);\n        }\n      });\n\n    if (info) {\n      glyphAtlas.width[char] = width;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.finish = function(context) {\n  const gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices = this.groupIndices;\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  const texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n  this.text_ = '';\n  this.textAlign_ = undefined;\n  this.textBaseline_ = undefined;\n  this.offsetX_ = undefined;\n  this.offsetY_ = undefined;\n  this.images_ = null;\n  this.atlases_ = {};\n  this.currAtlas_ = undefined;\n  WebGLTextureReplay.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.setTextStyle = function(textStyle) {\n  const state = this.state_;\n  const textFillStyle = textStyle.getFill();\n  const textStrokeStyle = textStyle.getStroke();\n  if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n    this.text_ = '';\n  } else {\n    if (!textFillStyle) {\n      state.fillColor = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      state.fillColor = asColorLike(textFillStyleColor ?\n        textFillStyleColor : DEFAULT_FILLSTYLE);\n    }\n    if (!textStrokeStyle) {\n      state.strokeColor = null;\n      state.lineWidth = 0;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      state.strokeColor = asColorLike(textStrokeStyleColor ?\n        textStrokeStyleColor : DEFAULT_STROKESTYLE);\n      state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n      state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n      state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n      state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n      state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n      const lineDash = textStrokeStyle.getLineDash();\n      state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n    }\n    state.font = textStyle.getFont() || DEFAULT_FONT;\n    state.scale = textStyle.getScale() || 1;\n    this.text_ = /** @type {string} */ (textStyle.getText());\n    const textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n    const textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n    this.textAlign_ = textAlign === undefined ?\n      DEFAULT_TEXTALIGN : textAlign;\n    this.textBaseline_ = textBaseline === undefined ?\n      DEFAULT_TEXTBASELINE : textBaseline;\n    this.offsetX_ = textStyle.getOffsetX() || 0;\n    this.offsetY_ = textStyle.getOffsetY() || 0;\n    this.rotateWithView = !!textStyle.getRotateWithView();\n    this.rotation = textStyle.getRotation() || 0;\n\n    this.currAtlas_ = this.getAtlas_(state);\n  }\n};\n\n\n/**\n * @private\n * @param {Object} state Font attributes.\n * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n */\nWebGLTextReplay.prototype.getAtlas_ = function(state) {\n  let params = [];\n  for (const i in state) {\n    if (state[i] || state[i] === 0) {\n      if (Array.isArray(state[i])) {\n        params = params.concat(state[i]);\n      } else {\n        params.push(state[i]);\n      }\n    }\n  }\n  const hash = this.calculateHash_(params);\n  if (!this.atlases_[hash]) {\n    const mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    const height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n        state.lineWidth / 2) * state.scale);\n\n    this.atlases_[hash] = {\n      atlas: new AtlasManager({\n        space: state.lineWidth + 1\n      }),\n      width: {},\n      height: height\n    };\n  }\n  return this.atlases_[hash];\n};\n\n\n/**\n * @private\n * @param {Array.<string|number>} params Array of parameters.\n * @return {string} Hash string.\n */\nWebGLTextReplay.prototype.calculateHash_ = function(params) {\n  //TODO: Create a more performant, reliable, general hash function.\n  let hash = '';\n  for (let i = 0, ii = params.length; i < ii; ++i) {\n    hash += params[i];\n  }\n  return hash;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.getTextures = function(opt_all) {\n  return this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.getHitDetectionTextures = function() {\n  return this.textures_;\n};\nexport default WebGLTextReplay;\n","/**\n * @module ol/render/webgl/ReplayGroup\n */\nimport {inherits} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array.<number>}\n */\nconst HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number=} opt_renderBuffer Render buffer.\n * @struct\n */\nconst WebGLReplayGroup = function(tolerance, maxExtent, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n};\n\ninherits(WebGLReplayGroup, ReplayGroup);\n\n\n/**\n * @param {module:ol/style/Style} style Style.\n * @param {boolean} group Group with previous replay.\n */\nWebGLReplayGroup.prototype.addDeclutter = function(style, group) {};\n\n\n/**\n * @param {module:ol/webgl/Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\nWebGLReplayGroup.prototype.getDeleteResourcesFunction = function(context) {\n  const functions = [];\n  let zKey;\n  for (zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      functions.push(\n        replays[replayKey].getDeleteResourcesFunction(context));\n    }\n  }\n  return function() {\n    const length = functions.length;\n    let result;\n    for (let i = 0; i < length; i++) {\n      result = functions[i].apply(this, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLReplayGroup.prototype.finish = function(context) {\n  let zKey;\n  for (zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish(context);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    /**\n     * @type {Function}\n     */\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n */\nWebGLReplayGroup.prototype.replay = function(context,\n  center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash) {\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = 0, jj = ORDER.length; j < jj; ++j) {\n      replay = replays[ORDER[j]];\n      if (replay !== undefined) {\n        replay.replay(context,\n          center, resolution, rotation, size, pixelRatio,\n          opacity, skippedFeaturesHash,\n          undefined, false);\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplayGroup.prototype.replayHitDetection_ = function(context,\n  center, resolution, rotation, size, pixelRatio, opacity,\n  skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(function(a, b) {\n    return b - a;\n  });\n\n  let i, ii, j, replays, replay, result;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replay = replays[ORDER[j]];\n      if (replay !== undefined) {\n        result = replay.replay(context,\n          center, resolution, rotation, size, pixelRatio, opacity,\n          skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, context, center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash,\n  callback) {\n  const gl = context.getGL();\n  gl.bindFramebuffer(\n    gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    // build an extent around the coordinate, so that only features that\n    // intersect this extent are checked\n    hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n  }\n\n  return this.replayHitDetection_(context,\n    coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n    pixelRatio, opacity, skippedFeaturesHash,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      const imageData = new Uint8Array(4);\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n      if (imageData[3] > 0) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    }, true, hitExtent);\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nWebGLReplayGroup.prototype.hasFeatureAtCoordinate = function(\n  coordinate, context, center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash) {\n  const gl = context.getGL();\n  gl.bindFramebuffer(\n    gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n  const hasFeature = this.replayHitDetection_(context,\n    coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n    pixelRatio, opacity, skippedFeaturesHash,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {boolean} Is there a feature?\n     */\n    function(feature) {\n      const imageData = new Uint8Array(4);\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n      return imageData[3] > 0;\n    }, false);\n\n  return hasFeature !== undefined;\n};\n\nexport default WebGLReplayGroup;\n","/**\n * @module ol/render/webgl/Immediate\n */\nimport {inherits} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} pixelRatio Pixel ratio.\n * @struct\n */\nconst WebGLImmediateRenderer = function(context, center, resolution, rotation, size, extent, pixelRatio) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   */\n  this.center_ = center;\n\n  /**\n   * @private\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   */\n  this.rotation_ = rotation;\n\n  /**\n   * @private\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {module:ol/style/Image}\n   */\n  this.imageStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fillStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.strokeStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.textStyle_ = null;\n\n};\n\ninherits(WebGLImmediateRenderer, VectorContext);\n\n\n/**\n * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @private\n */\nWebGLImmediateRenderer.prototype.drawText_ = function(replayGroup, geometry) {\n  const context = this.context_;\n  const replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n    replayGroup.getReplay(0, ReplayType.TEXT));\n  replay.setTextStyle(this.textStyle_);\n  replay.drawText(geometry, null);\n  replay.finish(context);\n  // default colors\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nWebGLImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nWebGLImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nWebGLImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawGeometryCollection = function(geometry, data) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawPoint = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n    replayGroup.getReplay(0, ReplayType.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawPoint(geometry, data);\n  replay.finish(context);\n  // default colors\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiPoint = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n    replayGroup.getReplay(0, ReplayType.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawMultiPoint(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawLineString = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n    replayGroup.getReplay(0, ReplayType.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawLineString(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiLineString = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n    replayGroup.getReplay(0, ReplayType.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawMultiLineString(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawPolygon = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n    replayGroup.getReplay(0, ReplayType.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawPolygon(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiPolygon = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n    replayGroup.getReplay(0, ReplayType.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawMultiPolygon(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawCircle = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n    replayGroup.getReplay(0, ReplayType.CIRCLE));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawCircle(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  this.imageStyle_ = imageStyle;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  this.fillStyle_ = fillStyle;\n  this.strokeStyle_ = strokeStyle;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  this.textStyle_ = textStyle;\n};\nexport default WebGLImmediateRenderer;\n","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport {inherits} from '../../util.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst WebGLLayerRenderer = function(mapRenderer, layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/renderer/webgl/Map}\n   */\n  this.mapRenderer = mapRenderer;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Buffer}\n   */\n  this.arrayBuffer_ = new WebGLBuffer([\n    -1, -1, 0, 0,\n    1, -1, 1, 0,\n    -1, 1, 0, 1,\n    1, 1, 1, 1\n  ]);\n\n  /**\n   * @protected\n   * @type {WebGLTexture}\n   */\n  this.texture = null;\n\n  /**\n   * @protected\n   * @type {WebGLFramebuffer}\n   */\n  this.framebuffer = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.framebufferDimension = undefined;\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.texCoordMatrix = createTransform();\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.projectionMatrix = createTransform();\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.tmpMat4_ = create();\n\n  /**\n   * @private\n   * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n};\n\ninherits(WebGLLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} framebufferDimension Framebuffer dimension.\n * @protected\n */\nWebGLLayerRenderer.prototype.bindFramebuffer = function(frameState, framebufferDimension) {\n\n  const gl = this.mapRenderer.getGL();\n\n  if (this.framebufferDimension === undefined ||\n      this.framebufferDimension != framebufferDimension) {\n    /**\n     * @param {WebGLRenderingContext} gl GL.\n     * @param {WebGLFramebuffer} framebuffer Framebuffer.\n     * @param {WebGLTexture} texture Texture.\n     */\n    const postRenderFunction = function(gl, framebuffer, texture) {\n      if (!gl.isContextLost()) {\n        gl.deleteFramebuffer(framebuffer);\n        gl.deleteTexture(texture);\n      }\n    }.bind(null, gl, this.framebuffer, this.texture);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n\n    const texture = createEmptyTexture(\n      gl, framebufferDimension, framebufferDimension);\n\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(FRAMEBUFFER,\n      COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n    this.texture = texture;\n    this.framebuffer = framebuffer;\n    this.framebufferDimension = framebufferDimension;\n\n  } else {\n    gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n  }\n\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n  context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n  const gl = context.getGL();\n\n  const program = context.getProgram(fragment, vertex);\n\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  if (context.useProgram(program)) {\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(\n      locations.a_position, 2, FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(\n      locations.a_texCoord, 2, FLOAT, false, 16, 8);\n    gl.uniform1i(locations.u_texture, 0);\n  }\n\n  gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n    fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n    fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n  gl.uniform1f(locations.u_opacity, layerState.opacity);\n  gl.bindTexture(TEXTURE_2D, this.getTexture());\n  gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/webgl/Context} context WebGL context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const extent = frameState.extent;\n    const center = viewState.center;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n\n    const render = new WebGLImmediateRenderer(\n      context, center, resolution, rotation, size, extent, pixelRatio);\n    const composeEvent = new RenderEvent(\n      type, render, frameState, null, context);\n    layer.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @return {!module:ol/transform~Transform} Matrix.\n */\nWebGLLayerRenderer.prototype.getTexCoordMatrix = function() {\n  return this.texCoordMatrix;\n};\n\n\n/**\n * @return {WebGLTexture} Texture.\n */\nWebGLLayerRenderer.prototype.getTexture = function() {\n  return this.texture;\n};\n\n\n/**\n * @return {!module:ol/transform~Transform} Matrix.\n */\nWebGLLayerRenderer.prototype.getProjectionMatrix = function() {\n  return this.projectionMatrix;\n};\n\n\n/**\n * Handle webglcontextlost.\n */\nWebGLLayerRenderer.prototype.handleWebGLContextLost = function() {\n  this.texture = null;\n  this.framebuffer = null;\n  this.framebufferDimension = undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/webgl/Context} context Context.\n * @return {boolean} whether composeFrame should be called.\n */\nWebGLLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nWebGLLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {};\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../util.js';\nimport {TRUE, UNDEFINED} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Image} imageLayer Tile layer.\n * @api\n */\nconst WebGLImageLayerRenderer = function(mapRenderer, imageLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n  /**\n   * The last rendered image.\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/transform~Transform}\n   */\n  this.hitTransformationMatrix_ = null;\n\n};\n\ninherits(WebGLImageLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\n/**\n * @param {module:ol/ImageBase} image Image.\n * @private\n * @return {WebGLTexture} Texture.\n */\nWebGLImageLayerRenderer.prototype.createTexture_ = function(image) {\n\n  // We meet the conditions to work with non-power of two textures.\n  // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n  // http://learningwebgl.com/blog/?p=2101\n\n  const imageElement = image.getImage();\n  const gl = this.mapRenderer.getGL();\n\n  return createTexture(\n    gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  const gl = this.mapRenderer.getGL();\n\n  const pixelRatio = frameState.pixelRatio;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n  const viewRotation = viewState.rotation;\n\n  let image = this.image_;\n  let texture = this.texture;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  let renderedExtent = frameState.extent;\n  if (layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    const image_ = imageSource.getImage(renderedExtent, viewResolution,\n      pixelRatio, projection);\n    if (image_) {\n      const loaded = this.loadImage(image_);\n      if (loaded) {\n        image = image_;\n        texture = this.createTexture_(image_);\n        if (this.texture) {\n          /**\n           * @param {WebGLRenderingContext} gl GL.\n           * @param {WebGLTexture} texture Texture.\n           */\n          const postRenderFunction = function(gl, texture) {\n            if (!gl.isContextLost()) {\n              gl.deleteTexture(texture);\n            }\n          }.bind(null, gl, this.texture);\n          frameState.postRenderFunctions.push(\n            /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n          );\n        }\n      }\n    }\n  }\n\n  if (image) {\n    const canvas = this.mapRenderer.getContext().getCanvas();\n\n    this.updateProjectionMatrix_(canvas.width, canvas.height,\n      pixelRatio, viewCenter, viewResolution, viewRotation,\n      image.getExtent());\n    this.hitTransformationMatrix_ = null;\n\n    // Translate and scale to flip the Y coord.\n    const texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    scaleTransform(texCoordMatrix, 1, -1);\n    translateTransform(texCoordMatrix, 0, -1);\n\n    this.image_ = image;\n    this.texture = texture;\n  }\n\n  return !!image;\n};\n\n\n/**\n * @param {number} canvasWidth Canvas width.\n * @param {number} canvasHeight Canvas height.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n * @param {number} viewResolution View resolution.\n * @param {number} viewRotation View rotation.\n * @param {module:ol/extent~Extent} imageExtent Image extent.\n * @private\n */\nWebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function(canvasWidth, canvasHeight, pixelRatio,\n  viewCenter, viewResolution, viewRotation, imageExtent) {\n\n  const canvasExtentWidth = canvasWidth * viewResolution;\n  const canvasExtentHeight = canvasHeight * viewResolution;\n\n  const projectionMatrix = this.projectionMatrix;\n  resetTransform(projectionMatrix);\n  scaleTransform(projectionMatrix,\n    pixelRatio * 2 / canvasExtentWidth,\n    pixelRatio * 2 / canvasExtentHeight);\n  rotateTransform(projectionMatrix, -viewRotation);\n  translateTransform(projectionMatrix,\n    imageExtent[0] - viewCenter[0],\n    imageExtent[1] - viewCenter[1]);\n  scaleTransform(projectionMatrix,\n    (imageExtent[2] - imageExtent[0]) / 2,\n    (imageExtent[3] - imageExtent[1]) / 2);\n  translateTransform(projectionMatrix, 1, 1);\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.image_ || !this.image_.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  } else {\n    const imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n        frameState.size, imageSize);\n    }\n\n    const pixelOnFrameBuffer = applyTransform(\n      this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n      pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\n\n/**\n * The transformation matrix to get the pixel on the image for a\n * pixel on the map.\n * @param {module:ol/size~Size} mapSize The map size.\n * @param {module:ol/size~Size} imageSize The image size.\n * @return {module:ol/transform~Transform} The transformation matrix.\n * @private\n */\nWebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function(mapSize, imageSize) {\n  // the first matrix takes a map pixel, flips the y-axis and scales to\n  // a range between -1 ... 1\n  const mapCoordTransform = createTransform();\n  translateTransform(mapCoordTransform, -1, -1);\n  scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n  translateTransform(mapCoordTransform, 0, mapSize[1]);\n  scaleTransform(mapCoordTransform, 1, -1);\n\n  // the second matrix is the inverse of the projection matrix used in the\n  // shader for drawing\n  const projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n  // the third matrix scales to the image dimensions and flips the y-axis again\n  const transform = createTransform();\n  translateTransform(transform, 0, imageSize[1]);\n  scaleTransform(transform, 1, -1);\n  scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n  translateTransform(transform, 1, 1);\n\n  multiplyTransform(transform, projectionMatrixInv);\n  multiplyTransform(transform, mapCoordTransform);\n\n  return transform;\n};\nexport default WebGLImageLayerRenderer;\n","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {inherits} from '../../util.js';\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nconst WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst WebGLMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = /** @type {HTMLCanvasElement} */\n    (document.createElement('CANVAS'));\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasWidth_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasHeight_ = 0;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.clipTileContext_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = getContext(this.canvas_, {\n    antialias: true,\n    depth: true,\n    failIfMajorPerformanceCaveat: true,\n    preserveDrawingBuffer: false,\n    stencil: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Context}\n   */\n  this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n  listen(this.canvas_, ContextEventType.LOST,\n    this.handleWebGLContextLost, this);\n  listen(this.canvas_, ContextEventType.RESTORED,\n    this.handleWebGLContextRestored, this);\n\n  /**\n   * @private\n   * @type {module:ol/structs/LRUCache.<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n   */\n  this.textureCache_ = new LRUCache();\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/PriorityQueue.<Array>}\n   */\n  this.tileTextureQueue_ = new PriorityQueue(\n    /**\n     * @param {Array.<*>} element Element.\n     * @return {number} Priority.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    (function(element) {\n      const tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n      const tileResolution = /** @type {number} */ (element[2]);\n      const deltaX = tileCenter[0] - this.focus_[0];\n      const deltaY = tileCenter[1] - this.focus_[1];\n      return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    }).bind(this),\n    /**\n     * @param {Array.<*>} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (\n        /** @type {module:ol/Tile} */ (element[0]).getKey()\n      );\n    });\n\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {boolean} false.\n   * @this {module:ol/renderer/webgl/Map}\n   */\n  this.loadNextTileTexture_ =\n      function(map, frameState) {\n        if (!this.tileTextureQueue_.isEmpty()) {\n          this.tileTextureQueue_.reprioritize();\n          const element = this.tileTextureQueue_.dequeue();\n          const tile = /** @type {module:ol/Tile} */ (element[0]);\n          const tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n          const tileGutter = /** @type {number} */ (element[4]);\n          this.bindTileTexture(\n            tile, tileSize, tileGutter, LINEAR, LINEAR);\n        }\n        return false;\n      }.bind(this);\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  this.initializeGL_();\n};\n\ninherits(WebGLMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {number} tileGutter Tile gutter.\n * @param {number} magFilter Mag filter.\n * @param {number} minFilter Min filter.\n */\nWebGLMapRenderer.prototype.bindTileTexture = function(tile, tileSize, tileGutter, magFilter, minFilter) {\n  const gl = this.getGL();\n  const tileKey = tile.getKey();\n  if (this.textureCache_.containsKey(tileKey)) {\n    const textureCacheEntry = this.textureCache_.get(tileKey);\n    gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n    if (textureCacheEntry.magFilter != magFilter) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      textureCacheEntry.magFilter = magFilter;\n    }\n    if (textureCacheEntry.minFilter != minFilter) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      textureCacheEntry.minFilter = minFilter;\n    }\n  } else {\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    if (tileGutter > 0) {\n      const clipTileCanvas = this.clipTileContext_.canvas;\n      const clipTileContext = this.clipTileContext_;\n      if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n          this.clipTileCanvasHeight_ !== tileSize[1]) {\n        clipTileCanvas.width = tileSize[0];\n        clipTileCanvas.height = tileSize[1];\n        this.clipTileCanvasWidth_ = tileSize[0];\n        this.clipTileCanvasHeight_ = tileSize[1];\n      } else {\n        clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n      }\n      clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n        tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n      gl.texImage2D(TEXTURE_2D, 0,\n        RGBA, RGBA,\n        UNSIGNED_BYTE, clipTileCanvas);\n    } else {\n      gl.texImage2D(TEXTURE_2D, 0,\n        RGBA, RGBA,\n        UNSIGNED_BYTE, tile.getImage());\n    }\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n      CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n      CLAMP_TO_EDGE);\n    this.textureCache_.set(tileKey, {\n      texture: texture,\n      magFilter: magFilter,\n      minFilter: minFilter\n    });\n  }\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  if (map.hasListener(type)) {\n    const context = this.context_;\n\n    const extent = frameState.extent;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n\n    const resolution = viewState.resolution;\n    const center = viewState.center;\n    const rotation = viewState.rotation;\n\n    const vectorContext = new WebGLImmediateRenderer(context,\n      center, resolution, rotation, size, extent, pixelRatio);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, null, context);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.disposeInternal = function() {\n  const gl = this.getGL();\n  if (!gl.isContextLost()) {\n    this.textureCache_.forEach(\n      /**\n       * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n       *     Texture cache entry.\n       */\n      function(textureCacheEntry) {\n        if (textureCacheEntry) {\n          gl.deleteTexture(textureCacheEntry.texture);\n        }\n      });\n  }\n  this.context_.dispose();\n  MapRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLMapRenderer.prototype.expireCache_ = function(map, frameState) {\n  const gl = this.getGL();\n  let textureCacheEntry;\n  while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    textureCacheEntry = this.textureCache_.peekLast();\n    if (!textureCacheEntry) {\n      if (+this.textureCache_.peekLastKey() == frameState.index) {\n        break;\n      } else {\n        --this.textureCacheFrameMarkerCount_;\n      }\n    } else {\n      gl.deleteTexture(textureCacheEntry.texture);\n    }\n    this.textureCache_.pop();\n  }\n};\n\n\n/**\n * @return {module:ol/webgl/Context} The context.\n */\nWebGLMapRenderer.prototype.getContext = function() {\n  return this.context_;\n};\n\n\n/**\n * @return {WebGLRenderingContext} GL.\n */\nWebGLMapRenderer.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * @return {module:ol/structs/PriorityQueue.<Array>} Tile texture queue.\n */\nWebGLMapRenderer.prototype.getTileTextureQueue = function() {\n  return this.tileTextureQueue_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nWebGLMapRenderer.prototype.handleWebGLContextLost = function(event) {\n  event.preventDefault();\n  this.textureCache_.clear();\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  const renderers = this.getLayerRenderers();\n  for (const id in renderers) {\n    const renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n    renderer.handleWebGLContextLost();\n  }\n};\n\n\n/**\n * @protected\n */\nWebGLMapRenderer.prototype.handleWebGLContextRestored = function() {\n  this.initializeGL_();\n  this.getMap().render();\n};\n\n\n/**\n * @private\n */\nWebGLMapRenderer.prototype.initializeGL_ = function() {\n  const gl = this.gl_;\n  gl.activeTexture(TEXTURE0);\n  gl.blendFuncSeparate(\n    SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n    ONE, ONE_MINUS_SRC_ALPHA);\n  gl.disable(CULL_FACE);\n  gl.disable(DEPTH_TEST);\n  gl.disable(SCISSOR_TEST);\n  gl.disable(STENCIL_TEST);\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Is tile texture loaded.\n */\nWebGLMapRenderer.prototype.isTileTextureLoaded = function(tile) {\n  return this.textureCache_.containsKey(tile.getKey());\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.renderFrame = function(frameState) {\n\n  const context = this.getContext();\n  const gl = this.getGL();\n\n  if (gl.isContextLost()) {\n    return false;\n  }\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return false;\n  }\n\n  this.focus_ = frameState.focus;\n\n  this.textureCache_.set((-frameState.index).toString(), null);\n  ++this.textureCacheFrameMarkerCount_;\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  /** @type {Array.<module:ol/layer/Layer~State>} */\n  const layerStatesToDraw = [];\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    if (visibleAtResolution(layerState, viewResolution) &&\n        layerState.sourceState == SourceState.READY) {\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n      if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n        layerStatesToDraw.push(layerState);\n      }\n    }\n  }\n\n  const width = frameState.size[0] * frameState.pixelRatio;\n  const height = frameState.size[1] * frameState.pixelRatio;\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  }\n\n  gl.bindFramebuffer(FRAMEBUFFER, null);\n\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(COLOR_BUFFER_BIT);\n  gl.enable(BLEND);\n  gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n  for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n    layerState = layerStatesToDraw[i];\n    layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n    layerRenderer.composeFrame(frameState, layerState, context);\n  }\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.calculateMatrices2D(frameState);\n\n  if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n    );\n  }\n\n  if (!this.tileTextureQueue_.isEmpty()) {\n    frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n    frameState.animate = true;\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      result = layerRenderer.forEachFeatureAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  let hasFeature = false;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      hasFeature =\n          layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n      if (hasFeature) {\n        return true;\n      }\n    }\n  }\n  return hasFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n  let result;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtPixel(\n        pixel, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\nexport default WebGLMapRenderer;\n","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport {inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Tile} tileLayer Tile layer.\n * @api\n */\nconst WebGLTileLayerRenderer = function(mapRenderer, tileLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Fragment}\n   */\n  this.fragmentShader_ = fragment;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Vertex}\n   */\n  this.vertexShader_ = vertex;\n\n  /**\n   * @private\n   * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n   */\n  this.locations_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Buffer}\n   */\n  this.renderArrayBuffer_ = new WebGLBuffer([\n    0, 0, 0, 1,\n    1, 0, 1, 1,\n    0, 1, 0, 0,\n    1, 1, 1, 0\n  ]);\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.renderedTileRange_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedFramebufferExtent_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n};\n\ninherits(WebGLTileLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.disposeInternal = function() {\n  const context = this.mapRenderer.getContext();\n  context.deleteBuffer(this.renderArrayBuffer_);\n  WebGLLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  const mapRenderer = this.mapRenderer;\n\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        const loaded = mapRenderer.isTileTextureLoaded(tile);\n        if (loaded) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return loaded;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.handleWebGLContextLost = function() {\n  WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n  this.locations_ = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  const mapRenderer = this.mapRenderer;\n  const gl = context.getGL();\n\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n\n  const tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n  const tileSource = tileLayer.getSource();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewState.resolution);\n  const tileResolution = tileGrid.getResolution(z);\n\n  const tilePixelSize =\n      tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n  const pixelRatio = tilePixelSize[0] /\n      toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n  const tilePixelResolution = tileResolution / pixelRatio;\n  const tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n  const center = viewState.center;\n  const extent = frameState.extent;\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n  let framebufferExtent;\n  if (this.renderedTileRange_ &&\n      this.renderedTileRange_.equals(tileRange) &&\n      this.renderedRevision_ == tileSource.getRevision()) {\n    framebufferExtent = this.renderedFramebufferExtent_;\n  } else {\n\n    const tileRangeSize = tileRange.getSize();\n\n    const maxDimension = Math.max(\n      tileRangeSize[0] * tilePixelSize[0],\n      tileRangeSize[1] * tilePixelSize[1]);\n    const framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n    const framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n    const origin = tileGrid.getOrigin(z);\n    const minX = origin[0] +\n        tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n    const minY = origin[1] +\n        tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n    framebufferExtent = [\n      minX, minY,\n      minX + framebufferExtentDimension, minY + framebufferExtentDimension\n    ];\n\n    this.bindFramebuffer(frameState, framebufferDimension);\n    gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.disable(BLEND);\n\n    const program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n    context.useProgram(program);\n    if (!this.locations_) {\n      this.locations_ = new Locations(gl, program);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n    gl.enableVertexAttribArray(this.locations_.a_position);\n    gl.vertexAttribPointer(\n      this.locations_.a_position, 2, FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(this.locations_.a_texCoord);\n    gl.vertexAttribPointer(\n      this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n    gl.uniform1i(this.locations_.u_texture, 0);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    let allTilesLoaded = true;\n    const tmpExtent = createEmpty();\n    const tmpTileRange = new TileRange(0, 0, 0, 0);\n    let childTileRange, drawable, fullyLoaded, tile, tileState;\n    let x, y, tileExtent;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (layerState.extent !== undefined) {\n          // ignore tiles outside layer extent\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          if (!intersects(tileExtent, layerState.extent)) {\n            continue;\n          }\n        }\n        tileState = tile.getState();\n        drawable = tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n        if (!drawable) {\n          tile = tile.getInterimTile();\n        }\n        tileState = tile.getState();\n        if (tileState == TileState.LOADED) {\n          if (mapRenderer.isTileTextureLoaded(tile)) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            continue;\n          }\n        } else if (tileState == TileState.EMPTY ||\n                   (tileState == TileState.ERROR &&\n                    !useInterimTilesOnError)) {\n          continue;\n        }\n\n        allTilesLoaded = false;\n        fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        if (!fullyLoaded) {\n          childTileRange = tileGrid.getTileCoordChildTileRange(\n            tile.tileCoord, tmpTileRange, tmpExtent);\n          if (childTileRange) {\n            findLoadedTiles(z + 1, childTileRange);\n          }\n        }\n\n      }\n\n    }\n\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    const u_tileOffset = new Float32Array(4);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const tilesToDraw = tilesToDrawByZ[zs[i]];\n      for (const tileKey in tilesToDraw) {\n        tile = tilesToDraw[tileKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n        u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n            framebufferExtentDimension;\n        u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n            framebufferExtentDimension;\n        u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n            framebufferExtentDimension - 1;\n        u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n            framebufferExtentDimension - 1;\n        gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n        mapRenderer.bindTileTexture(tile, tilePixelSize,\n          tileGutter * pixelRatio, LINEAR, LINEAR);\n        gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n      }\n    }\n\n    if (allTilesLoaded) {\n      this.renderedTileRange_ = tileRange;\n      this.renderedFramebufferExtent_ = framebufferExtent;\n      this.renderedRevision_ = tileSource.getRevision();\n    } else {\n      this.renderedTileRange_ = null;\n      this.renderedFramebufferExtent_ = null;\n      this.renderedRevision_ = -1;\n      frameState.animate = true;\n    }\n\n  }\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  const tileTextureQueue = mapRenderer.getTileTextureQueue();\n  this.manageTilePyramid(\n    frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n    tileLayer.getPreload(),\n    /**\n     * @param {module:ol/Tile} tile Tile.\n     */\n    function(tile) {\n      if (tile.getState() == TileState.LOADED &&\n            !mapRenderer.isTileTextureLoaded(tile) &&\n            !tileTextureQueue.isKeyQueued(tile.getKey())) {\n        tileTextureQueue.enqueue([\n          tile,\n          tileGrid.getTileCoordCenter(tile.tileCoord),\n          tileGrid.getResolution(tile.tileCoord[0]),\n          tilePixelSize, tileGutter * pixelRatio\n        ]);\n      }\n    }, this);\n  this.scheduleExpireCache(frameState, tileSource);\n\n  const texCoordMatrix = this.texCoordMatrix;\n  resetTransform(texCoordMatrix);\n  translateTransform(texCoordMatrix,\n    (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n          (framebufferExtent[2] - framebufferExtent[0]),\n    (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  if (viewState.rotation !== 0) {\n    rotateTransform(texCoordMatrix, viewState.rotation);\n  }\n  scaleTransform(texCoordMatrix,\n    frameState.size[0] * viewState.resolution /\n          (framebufferExtent[2] - framebufferExtent[0]),\n    frameState.size[1] * viewState.resolution /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  translateTransform(texCoordMatrix, -0.5, -0.5);\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.framebuffer) {\n    return undefined;\n  }\n\n  const pixelOnMapScaled = [\n    pixel[0] / frameState.size[0],\n    (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n  const pixelOnFrameBufferScaled = applyTransform(\n    this.texCoordMatrix, pixelOnMapScaled.slice());\n  const pixelOnFrameBuffer = [\n    pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n    pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n  const gl = this.mapRenderer.getContext().getGL();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  const imageData = new Uint8Array(4);\n  gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n    gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n  if (imageData[3] > 0) {\n    return callback.call(thisArg, this.getLayer(), imageData);\n  } else {\n    return undefined;\n  }\n};\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst WebGLVectorLayerRenderer = function(mapRenderer, vectorLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * The last layer state.\n   * @private\n   * @type {?module:ol/layer/Layer~State}\n   */\n  this.layerState_ = null;\n\n};\n\ninherits(WebGLVectorLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  this.layerState_ = layerState;\n  const viewState = frameState.viewState;\n  const replayGroup = this.replayGroup_;\n  const size = frameState.size;\n  const pixelRatio = frameState.pixelRatio;\n  const gl = this.mapRenderer.getGL();\n  if (replayGroup && !replayGroup.isEmpty()) {\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n    replayGroup.replay(context,\n      viewState.center, viewState.resolution, viewState.rotation,\n      size, pixelRatio, layerState.opacity,\n      layerState.managed ? frameState.skippedFeatureUids : {});\n    gl.disable(gl.SCISSOR_TEST);\n  }\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.disposeInternal = function() {\n  const replayGroup = this.replayGroup_;\n  if (replayGroup) {\n    const context = this.mapRenderer.getContext();\n    replayGroup.getDeleteResourcesFunction(context)();\n    this.replayGroup_ = null;\n  }\n  WebGLLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return undefined;\n  } else {\n    const context = this.mapRenderer.getContext();\n    const viewState = frameState.viewState;\n    const layer = this.getLayer();\n    const layerState = this.layerState_;\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n      context, viewState.center, viewState.resolution, viewState.rotation,\n      frameState.size, frameState.pixelRatio, layerState.opacity,\n      {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      });\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return false;\n  } else {\n    const context = this.mapRenderer.getContext();\n    const viewState = frameState.viewState;\n    const layerState = this.layerState_;\n    return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n      context, viewState.center, viewState.resolution, viewState.rotation,\n      frameState.size, frameState.pixelRatio, layerState.opacity,\n      frameState.skippedFeatureUids);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n  const hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nWebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    return true;\n  }\n\n  if (this.replayGroup_) {\n    frameState.postRenderFunctions.push(\n      this.replayGroup_.getDeleteResourcesFunction(context));\n  }\n\n  this.dirty_ = false;\n\n  const replayGroup = new WebGLReplayGroup(\n    getRenderTolerance(resolution, pixelRatio),\n    extent, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/webgl/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  };\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    features.forEach(render.bind(this));\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish(context);\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of\n *     styles.\n * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nWebGLVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = styles.length - 1, ii = 0; i >= ii; --i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this) || loading;\n  }\n  return loading;\n};\nexport default WebGLVectorLayerRenderer;\n","/**\n * @module ol/WebGLMap\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst WebGLMap = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(WebGLMap, PluggableMap);\n\n\nWebGLMap.prototype.createRenderer = function() {\n  const renderer = new WebGLMapRenderer(this);\n  renderer.registerLayerRenderers([\n    WebGLImageLayerRenderer,\n    WebGLTileLayerRenderer,\n    WebGLVectorLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default WebGLMap;\n","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapBrowserPointerEvent} from './MapBrowserPointerEvent.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as PluggableMap} from './PluggableMap.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorImageTile} from './VectorImageTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\nexport {default as WebGLMap} from './WebGLMap.js';\n\nexport {getUid, inherits, VERSION} from './util.js';\n\n/**\n * An array with two elements, representing a pixel. The first element is the\n * x-coordinate, the second the y-coordinate of the pixel.\n * @typedef {Array.<number>} Pixel\n * @api\n */\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/layer/Tile\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n * @api\n */\nconst TileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.TILE;\n\n};\n\ninherits(TileLayer, Layer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default TileLayer;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nconst Triangulation = function(sourceProj, targetProj, targetExtent,\n  maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  let transformInvCache = {};\n  const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    const key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  const destinationTopLeft = getTopLeft(targetExtent);\n  const destinationTopRight = getTopRight(targetExtent);\n  const destinationBottomRight = getBottomRight(targetExtent);\n  const destinationBottomLeft = getBottomLeft(targetExtent);\n  const sourceTopLeft = this.transformInv_(destinationTopLeft);\n  const sourceTopRight = this.transformInv_(destinationTopRight);\n  const sourceBottomRight = this.transformInv_(destinationBottomRight);\n  const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    let leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        const minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        const maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function(a, b, c,\n  aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function(a, b, c, d,\n  aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  const sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  const wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  let needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      const targetQuadExtent = boundingExtent([a, b, c, d]);\n      const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      const centerSrc = this.transformInv_(center);\n\n      let dx;\n      if (wrapsX) {\n        const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      const centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        const bcSrc = this.transformInv_(bc);\n        const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        const daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        const abSrc = this.transformInv_(ab);\n        const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        const cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function() {\n  const extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    const src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nconst ReprojTile = function(sourceProj, sourceTileGrid,\n  targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n  pixelRatio, gutter, getTileFunction,\n  opt_errorThreshold, opt_renderEdges) {\n  Tile.call(this, tileCoord, TileState.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  const maxTargetExtent = this.targetTileGrid_.getExtent();\n  let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  const targetResolution = targetTileGrid.getResolution(\n    this.wrappedTileCoord_[0]);\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n    sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = clamp(\n        sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = clamp(\n        sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!getArea(sourceExtent)) {\n    this.state = TileState.EMPTY;\n  } else {\n    const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n      sourceExtent, this.sourceZ_);\n\n    for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = TileState.EMPTY;\n    }\n  }\n};\n\ninherits(ReprojTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenSources_();\n  }\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\nReprojTile.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.reproject_ = function() {\n  const sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == TileState.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }.bind(this));\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = TileState.ERROR;\n  } else {\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const width = typeof size === 'number' ? size : size[0];\n    const height = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_);\n    this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n      sourceResolution, this.sourceTileGrid_.getExtent(),\n      targetResolution, targetExtent, this.triangulation_, sources,\n      this.gutter_, this.renderEdges_);\n\n    this.state = TileState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE || state == TileState.LOADING) {\n        leftToLoad++;\n\n        const sourceListenKey = listen(tile, EventType.CHANGE,\n          function(e) {\n            const state = tile.getState();\n            if (state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }.bind(this));\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default ReprojTile;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n * @struct\n * @api\n */\nconst TileGrid = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  let zoomFactor;\n  if (!options.origins) {\n    for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  const extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      const tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  let tileRange, x, y;\n  let tileCoordExtent = null;\n  let z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      const minX = tileCoord[1] * 2;\n      const minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  const tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  const minX = tileCoord[1];\n  const minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function(tileCoord) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  const maxX = minX + tileSize[0] * resolution;\n  const maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function(\n  x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  const z = this.getZForResolution(resolution);\n  const scale = resolution / this.getResolution(z);\n  const origin = this.getOrigin(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = scale * xFromOrigin / tileSize[0];\n  let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = xFromOrigin / tileSize[0];\n  let tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function(resolution, opt_direction) {\n  const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function(extent) {\n  const length = this.resolutions_.length;\n  const fullTileRanges = new Array(length);\n  for (let z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n * @api\n */\nconst TileSource = function(options) {\n\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {module:ol/TileCache}\n   */\n  this.tileCache = new TileCache(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~Options}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\ninherits(TileSource, Source);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nTileSource.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileSource.prototype.expireCache = function(projection, usedTiles) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\nTileSource.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  let covered = true;\n  let tile, tileCoordKey, loaded;\n  for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === TileState.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {number} Gutter.\n */\nTileSource.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\nTileSource.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\nTileSource.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {boolean} Opaque.\n */\nTileSource.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nTileSource.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {module:ol/tilegrid/TileGrid} Tile grid.\n * @api\n */\nTileSource.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n */\nTileSource.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return getTileGridForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/TileCache} Tile cache.\n * @protected\n */\nTileSource.prototype.getTileCacheForProjection = function(projection) {\n  const thisProj = this.getProjection();\n  if (thisProj && !equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\nTileSource.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/size~Size} Tile size.\n */\nTileSource.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\nTileSource.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  const projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  const tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = wrapX(tileGrid, tileCoord, projection);\n  }\n  return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport const TileSourceEvent = function(type, tile) {\n\n  Event.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {module:ol/Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\ninherits(TileSourceEvent, Event);\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid, inherits} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires module:ol/source/TileEvent\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n */\nconst UrlTile = function(options) {\n\n  TileSource.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {!Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\ninherits(UrlTile, TileSource);\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n * @api\n */\nUrlTile.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n * @api\n */\nUrlTile.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\nUrlTile.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nUrlTile.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const uid = getUid(tile);\n  const tileState = tile.getState();\n  let type;\n  if (tileState == TileState.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = TileEventType.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n      (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n        TileEventType.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new TileSourceEvent(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @api\n */\nUrlTile.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\nUrlTile.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\nUrlTile.prototype.setUrl = function(url) {\n  const urls = this.urls = expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\nUrlTile.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\nUrlTile.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid, inherits} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/TileImage~Options=} options Image tile options.\n * @api\n */\nconst TileImage = function(options) {\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : ImageTile;\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\ninherits(TileImage, UrlTile);\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.canExpireCache = function() {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.expireCache = function(projection, usedTiles) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  const usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (const id in this.tileCacheForProjection) {\n    const tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getGutter = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\nTileImage.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getOpaque = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return UrlTile.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileGridForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection();\n  if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n    }\n    return (\n      /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n    );\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileCacheForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!module:ol/Tile} Tile.\n * @private\n */\nTileImage.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  const tileCoord = [z, x, y];\n  const urlTileCoord = this.getTileCoordForTileUrlFunction(\n    tileCoord, projection);\n  const tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  const tile = new this.tileClass(\n    tileCoord,\n    tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n    tileUrl !== undefined ? tileUrl : '',\n    this.crossOrigin,\n    this.tileLoadFunction,\n    this.tileOptions);\n  tile.key = key;\n  listen(tile, EventType.CHANGE,\n    this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      const targetTileGrid = this.getTileGridForProjection(projection);\n      const wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const newTile = new ReprojTile(\n        sourceProjection, sourceTileGrid,\n        projection, targetTileGrid,\n        tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n        this.getGutterInternal(),\n        function(z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_,\n        this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n * @protected\n */\nTileImage.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  let tile = null;\n  const tileCoordKey = getKeyZXY(z, x, y);\n  const key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      const interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == TileState.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\nTileImage.prototype.setRenderReprojectionEdges = function(render) {\n  if (!ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (const id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\nTileImage.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (ENABLE_RASTER_REPROJECTION) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../util.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../util.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\nexport default OSM;\n","import 'ol/ol.css';\nimport {Map, View} from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 0\n  })\n});"]}