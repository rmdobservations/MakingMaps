{"dependencies":[{"name":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/package.json","includedInParent":true,"mtime":1531302262464},{"name":"/home/rose/projects/npmProjects/MakingMaps/package.json","includedInParent":true,"mtime":1531302358436},{"name":"./util.js","loc":{"line":4,"column":23},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/util.js"},{"name":"./PluggableMap.js","loc":{"line":5,"column":25},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/PluggableMap.js"},{"name":"./control/util.js","loc":{"line":6,"column":42},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/control/util.js"},{"name":"./interaction.js","loc":{"line":7,"column":46},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/interaction.js"},{"name":"./obj.js","loc":{"line":8,"column":21},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/obj.js"},{"name":"./renderer/canvas/ImageLayer.js","loc":{"line":9,"column":37},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/renderer/canvas/ImageLayer.js"},{"name":"./renderer/canvas/Map.js","loc":{"line":10,"column":30},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/renderer/canvas/Map.js"},{"name":"./renderer/canvas/TileLayer.js","loc":{"line":11,"column":36},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/renderer/canvas/TileLayer.js"},{"name":"./renderer/canvas/VectorLayer.js","loc":{"line":12,"column":38},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/renderer/canvas/VectorLayer.js"},{"name":"./renderer/canvas/VectorTileLayer.js","loc":{"line":13,"column":42},"parent":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/Map.js","resolved":"/home/rose/projects/npmProjects/MakingMaps/node_modules/ol/renderer/canvas/VectorTileLayer.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require('./util.js');\n\nvar _PluggableMap = require('./PluggableMap.js');\n\nvar _PluggableMap2 = _interopRequireDefault(_PluggableMap);\n\nvar _util2 = require('./control/util.js');\n\nvar _interaction = require('./interaction.js');\n\nvar _obj = require('./obj.js');\n\nvar _ImageLayer = require('./renderer/canvas/ImageLayer.js');\n\nvar _ImageLayer2 = _interopRequireDefault(_ImageLayer);\n\nvar _Map = require('./renderer/canvas/Map.js');\n\nvar _Map2 = _interopRequireDefault(_Map);\n\nvar _TileLayer = require('./renderer/canvas/TileLayer.js');\n\nvar _TileLayer2 = _interopRequireDefault(_TileLayer);\n\nvar _VectorLayer = require('./renderer/canvas/VectorLayer.js');\n\nvar _VectorLayer2 = _interopRequireDefault(_VectorLayer);\n\nvar _VectorTileLayer = require('./renderer/canvas/VectorTileLayer.js');\n\nvar _VectorTileLayer2 = _interopRequireDefault(_VectorTileLayer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\n/**\n * @module ol/Map\n */\nconst Map = function (options) {\n  options = (0, _obj.assign)({}, options);\n  if (!options.controls) {\n    options.controls = (0, _util2.defaults)();\n  }\n  if (!options.interactions) {\n    options.interactions = (0, _interaction.defaults)();\n  }\n\n  _PluggableMap2.default.call(this, options);\n};\n\n(0, _util.inherits)(Map, _PluggableMap2.default);\n\nMap.prototype.createRenderer = function () {\n  const renderer = new _Map2.default(this);\n  renderer.registerLayerRenderers([_ImageLayer2.default, _TileLayer2.default, _VectorLayer2.default, _VectorTileLayer2.default]);\n  return renderer;\n};\n\nexports.default = Map;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/ol/Map.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/ol/Map.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ol/Map.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ol/Map.js","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ol/Map.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ol/Map.js","original":{"line":9,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ol/Map.js","original":{"line":10,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ol/Map.js","original":{"line":11,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ol/Map.js","original":{"line":12,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ol/Map.js","original":{"line":13,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ol/Map.js","original":{"line":15,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/ol/Map.js","original":{"line":1,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/ol/Map.js","original":{"line":69,"column":0}},{"name":"Map","generated":{"line":98,"column":6},"source":"node_modules/ol/Map.js","original":{"line":69,"column":6}},{"generated":{"line":98,"column":12},"source":"node_modules/ol/Map.js","original":{"line":69,"column":12}},{"name":"options","generated":{"line":98,"column":22},"source":"node_modules/ol/Map.js","original":{"line":69,"column":21}},{"generated":{"line":98,"column":29},"source":"node_modules/ol/Map.js","original":{"line":69,"column":12}},{"generated":{"line":98,"column":31},"source":"node_modules/ol/Map.js","original":{"line":69,"column":30}},{"name":"options","generated":{"line":99,"column":0},"source":"node_modules/ol/Map.js","original":{"line":70,"column":2}},{"generated":{"line":99,"column":12},"source":"node_modules/ol/Map.js","original":{"line":70,"column":12}},{"generated":{"line":99,"column":29},"source":"node_modules/ol/Map.js","original":{"line":70,"column":19}},{"generated":{"line":99,"column":31},"source":"node_modules/ol/Map.js","original":{"line":70,"column":12}},{"name":"options","generated":{"line":99,"column":33},"source":"node_modules/ol/Map.js","original":{"line":70,"column":23}},{"generated":{"line":99,"column":40},"source":"node_modules/ol/Map.js","original":{"line":70,"column":12}},{"generated":{"line":99,"column":41},"source":"node_modules/ol/Map.js","original":{"line":70,"column":2}},{"generated":{"line":100,"column":0},"source":"node_modules/ol/Map.js","original":{"line":71,"column":2}},{"generated":{"line":100,"column":6},"source":"node_modules/ol/Map.js","original":{"line":71,"column":6}},{"name":"options","generated":{"line":100,"column":7},"source":"node_modules/ol/Map.js","original":{"line":71,"column":7}},{"name":"controls","generated":{"line":100,"column":15},"source":"node_modules/ol/Map.js","original":{"line":71,"column":15}},{"generated":{"line":100,"column":23},"source":"node_modules/ol/Map.js","original":{"line":71,"column":2}},{"generated":{"line":100,"column":25},"source":"node_modules/ol/Map.js","original":{"line":71,"column":25}},{"name":"options","generated":{"line":101,"column":0},"source":"node_modules/ol/Map.js","original":{"line":72,"column":4}},{"name":"controls","generated":{"line":101,"column":12},"source":"node_modules/ol/Map.js","original":{"line":72,"column":12}},{"generated":{"line":101,"column":20},"source":"node_modules/ol/Map.js","original":{"line":72,"column":4}},{"generated":{"line":101,"column":23},"source":"node_modules/ol/Map.js","original":{"line":72,"column":23}},{"generated":{"line":101,"column":45},"source":"node_modules/ol/Map.js","original":{"line":72,"column":4}},{"generated":{"line":102,"column":0},"source":"node_modules/ol/Map.js","original":{"line":73,"column":3}},{"generated":{"line":103,"column":0},"source":"node_modules/ol/Map.js","original":{"line":74,"column":2}},{"generated":{"line":103,"column":6},"source":"node_modules/ol/Map.js","original":{"line":74,"column":6}},{"name":"options","generated":{"line":103,"column":7},"source":"node_modules/ol/Map.js","original":{"line":74,"column":7}},{"name":"interactions","generated":{"line":103,"column":15},"source":"node_modules/ol/Map.js","original":{"line":74,"column":15}},{"generated":{"line":103,"column":27},"source":"node_modules/ol/Map.js","original":{"line":74,"column":2}},{"generated":{"line":103,"column":29},"source":"node_modules/ol/Map.js","original":{"line":74,"column":29}},{"name":"options","generated":{"line":104,"column":0},"source":"node_modules/ol/Map.js","original":{"line":75,"column":4}},{"name":"interactions","generated":{"line":104,"column":12},"source":"node_modules/ol/Map.js","original":{"line":75,"column":12}},{"generated":{"line":104,"column":24},"source":"node_modules/ol/Map.js","original":{"line":75,"column":4}},{"generated":{"line":104,"column":27},"source":"node_modules/ol/Map.js","original":{"line":75,"column":27}},{"generated":{"line":104,"column":55},"source":"node_modules/ol/Map.js","original":{"line":75,"column":4}},{"generated":{"line":105,"column":0},"source":"node_modules/ol/Map.js","original":{"line":76,"column":3}},{"name":"PluggableMap","generated":{"line":107,"column":0},"source":"node_modules/ol/Map.js","original":{"line":78,"column":2}},{"name":"call","generated":{"line":107,"column":25},"source":"node_modules/ol/Map.js","original":{"line":78,"column":15}},{"generated":{"line":107,"column":29},"source":"node_modules/ol/Map.js","original":{"line":78,"column":2}},{"generated":{"line":107,"column":30},"source":"node_modules/ol/Map.js","original":{"line":78,"column":20}},{"generated":{"line":107,"column":34},"source":"node_modules/ol/Map.js","original":{"line":78,"column":2}},{"name":"options","generated":{"line":107,"column":36},"source":"node_modules/ol/Map.js","original":{"line":78,"column":26}},{"generated":{"line":107,"column":43},"source":"node_modules/ol/Map.js","original":{"line":78,"column":2}},{"generated":{"line":108,"column":0},"source":"node_modules/ol/Map.js","original":{"line":79,"column":1}},{"generated":{"line":108,"column":1},"source":"node_modules/ol/Map.js","original":{"line":69,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/ol/Map.js","original":{"line":81,"column":0}},{"name":"Map","generated":{"line":110,"column":20},"source":"node_modules/ol/Map.js","original":{"line":81,"column":9}},{"generated":{"line":110,"column":23},"source":"node_modules/ol/Map.js","original":{"line":81,"column":0}},{"name":"PluggableMap","generated":{"line":110,"column":25},"source":"node_modules/ol/Map.js","original":{"line":81,"column":14}},{"generated":{"line":110,"column":47},"source":"node_modules/ol/Map.js","original":{"line":81,"column":0}},{"name":"Map","generated":{"line":112,"column":0},"source":"node_modules/ol/Map.js","original":{"line":83,"column":0}},{"name":"prototype","generated":{"line":112,"column":4},"source":"node_modules/ol/Map.js","original":{"line":83,"column":4}},{"generated":{"line":112,"column":13},"source":"node_modules/ol/Map.js","original":{"line":83,"column":0}},{"name":"createRenderer","generated":{"line":112,"column":14},"source":"node_modules/ol/Map.js","original":{"line":83,"column":14}},{"generated":{"line":112,"column":28},"source":"node_modules/ol/Map.js","original":{"line":83,"column":0}},{"generated":{"line":112,"column":31},"source":"node_modules/ol/Map.js","original":{"line":83,"column":31}},{"generated":{"line":112,"column":43},"source":"node_modules/ol/Map.js","original":{"line":83,"column":42}},{"generated":{"line":113,"column":0},"source":"node_modules/ol/Map.js","original":{"line":84,"column":2}},{"name":"renderer","generated":{"line":113,"column":8},"source":"node_modules/ol/Map.js","original":{"line":84,"column":8}},{"generated":{"line":113,"column":19},"source":"node_modules/ol/Map.js","original":{"line":84,"column":19}},{"name":"CanvasMapRenderer","generated":{"line":113,"column":23},"source":"node_modules/ol/Map.js","original":{"line":84,"column":23}},{"generated":{"line":113,"column":36},"source":"node_modules/ol/Map.js","original":{"line":84,"column":19}},{"generated":{"line":113,"column":37},"source":"node_modules/ol/Map.js","original":{"line":84,"column":41}},{"generated":{"line":113,"column":41},"source":"node_modules/ol/Map.js","original":{"line":84,"column":19}},{"generated":{"line":113,"column":42},"source":"node_modules/ol/Map.js","original":{"line":84,"column":2}},{"name":"renderer","generated":{"line":114,"column":0},"source":"node_modules/ol/Map.js","original":{"line":85,"column":2}},{"name":"registerLayerRenderers","generated":{"line":114,"column":11},"source":"node_modules/ol/Map.js","original":{"line":85,"column":11}},{"generated":{"line":114,"column":33},"source":"node_modules/ol/Map.js","original":{"line":85,"column":2}},{"generated":{"line":114,"column":34},"source":"node_modules/ol/Map.js","original":{"line":85,"column":34}},{"name":"CanvasImageLayerRenderer","generated":{"line":114,"column":35},"source":"node_modules/ol/Map.js","original":{"line":86,"column":4}},{"generated":{"line":114,"column":55},"source":"node_modules/ol/Map.js","original":{"line":85,"column":34}},{"name":"CanvasTileLayerRenderer","generated":{"line":114,"column":57},"source":"node_modules/ol/Map.js","original":{"line":87,"column":4}},{"generated":{"line":114,"column":76},"source":"node_modules/ol/Map.js","original":{"line":85,"column":34}},{"name":"CanvasVectorLayerRenderer","generated":{"line":114,"column":78},"source":"node_modules/ol/Map.js","original":{"line":88,"column":4}},{"generated":{"line":114,"column":99},"source":"node_modules/ol/Map.js","original":{"line":85,"column":34}},{"name":"CanvasVectorTileLayerRenderer","generated":{"line":114,"column":101},"source":"node_modules/ol/Map.js","original":{"line":89,"column":4}},{"generated":{"line":114,"column":126},"source":"node_modules/ol/Map.js","original":{"line":85,"column":34}},{"generated":{"line":114,"column":127},"source":"node_modules/ol/Map.js","original":{"line":85,"column":2}},{"generated":{"line":115,"column":0},"source":"node_modules/ol/Map.js","original":{"line":91,"column":2}},{"name":"renderer","generated":{"line":115,"column":9},"source":"node_modules/ol/Map.js","original":{"line":91,"column":9}},{"generated":{"line":115,"column":17},"source":"node_modules/ol/Map.js","original":{"line":91,"column":2}},{"generated":{"line":116,"column":0},"source":"node_modules/ol/Map.js","original":{"line":92,"column":1}},{"generated":{"line":116,"column":1},"source":"node_modules/ol/Map.js","original":{"line":83,"column":0}},{"name":"Map","generated":{"line":118,"column":18},"source":"node_modules/ol/Map.js","original":{"line":94,"column":15}}],"sources":{"node_modules/ol/Map.js":"/**\n * @module ol/Map\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n"},"lineCount":null}},"hash":"826f2521892e0005e8b22e058f9968a4","cacheData":{"env":{}},"id":28}